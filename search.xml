<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>以太坊概念手册</title>
      <link href="/blockchain/ethereum/concept-handbook/"/>
      <url>/blockchain/ethereum/concept-handbook/</url>
      
        <content type="html"><![CDATA[<h5 id="以太坊概念手册"><a href="#以太坊概念手册" class="headerlink" title="以太坊概念手册"></a>以太坊概念手册</h5><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><div class="anchor" id="account"></div><h3 id="账户（Account）"><a href="#账户（Account）" class="headerlink" title="账户（Account）"></a>账户（Account）</h3><blockquote><p>账户是一个对象，它包含<a href="#address">地址</a>、余额、<a href="#nonce">nonce</a>，并且存储了状态和代码（皆可为空）。账户可以是<a href="#contract-account">合约账户</a>或者<a href="#eoa">外部账户</a>（EOA）。</p></blockquote><p>相关：《精通以太坊》P.11<br>收录时间：2020.2.9</p><div class="anchor" id="address"></div><h3 id="地址（Address）"><a href="#地址（Address）" class="headerlink" title="地址（Address）"></a>地址（Address）</h3><blockquote><p>通常来说，地址代表的是一个<a href="#smart-contract">合约</a>或<a href="#eoa">外部账户</a>，可以在<a href="#blockchain">区块链</a>上接收（即作为目标地址）或发送（即作为源地址）<a href="#transaction">交易</a>。更具体地说，地址是 <a href="#ecdsa">ECDSA</a> <a href="#public-key">公钥</a>的 <a href="#keccak-256">Keccak 哈希</a>中最右的 160 位数。</p></blockquote><p>相关：《精通以太坊》P.11<br>收录时间：2020.2.9</p><h3 id="断言（Assert）"><a href="#断言（Assert）" class="headerlink" title="断言（Assert）"></a>断言（Assert）</h3><blockquote><p><a href="#solidity">Solidity</a> 语言中，<code>assert(false)</code> 断言会编译成 <code>oxfe</code> 无效操作码，耗尽所有剩余 <a href="#gas">gas</a> 并回退所有变更。当一次 <code>assert()</code> 断言失败时，意味着代码出现严重错误，你需要修改代码。可以使用 <code>assert()</code> 来检查代码，避免出现意外。</p></blockquote><p>相关：《精通以太坊》P.11<br>收录时间：2020.2.9</p><hr><h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><h3 id="大端字节序（Big-endian）"><a href="#大端字节序（Big-endian）" class="headerlink" title="大端字节序（Big-endian）"></a>大端字节序（Big-endian）</h3><blockquote><p>代表从最高位字节开始的位置编号。与小端字节序（little-endian）相反，后者从最低位字节开始。</p></blockquote><p>相关：《精通以太坊》P.11<br>收录时间：2020.2.9</p><h3 id="BIP（Bitcoin-Improvement-Proposals）"><a href="#BIP（Bitcoin-Improvement-Proposals）" class="headerlink" title="BIP（Bitcoin Improvement Proposals）"></a>BIP（Bitcoin Improvement Proposals）</h3><blockquote><p>比特币改进提案，由比特币社区提交的一系列对比特币协议进行改进的提案。比如，BIP-21（比特币改进提案第 21 号）是建议比特币协议改进统一资源标识符（URI）的提案。</p></blockquote><p>相关：《精通以太坊》P.11<br>收录时间：2020.2.9</p><div class="anchor" id="block"></div><h3 id="区块（Block）"><a href="#区块（Block）" class="headerlink" title="区块（Block）"></a>区块（Block）</h3><blockquote><p>一个关于其所包含<a href="#transaction">交易</a>的所需信息（区块头）的集合，以及称为<a href="#ommer">叔块</a>（ommer）的一组其他区块头。区块由以太坊网络中的<a href="#miner">矿工</a>添加上链。</p></blockquote><p>相关：《精通以太坊》P.11<br>收录时间：2020.2.9</p><div class="anchor" id="blockchain"></div><h3 id="区块链（Blockchain）"><a href="#区块链（Blockchain）" class="headerlink" title="区块链（Blockchain）"></a>区块链（Blockchain）</h3><blockquote><p>以太坊网络中由<a href="#pow">工作量证明</a>验证的<a href="#block">区块</a>序列，每个区块与其父块相连，可一直追溯到创世块。以太坊区块链与比特币的不同之处在于，前者没有区块大小限制，而使用 <a href="#gas">gas</a> 上限来调整区块大小。</p></blockquote><p>相关：《精通以太坊》P.12<br>收录时间：2020.2.9</p><div class="anchor" id="bytecode"></div><h3 id="字节码（Bytecode）"><a href="#字节码（Bytecode）" class="headerlink" title="字节码（Bytecode）"></a>字节码（Bytecode）</h3><blockquote><p>为软件解释器或<a href="#evm">虚拟机</a>的高效执行而设计的抽象指令集。与人类可读的源代码不同，字节码以数字格式表示。</p></blockquote><p>相关：《精通以太坊》P.12<br>收录时间：2020.2.9</p><h3 id="“拜占庭”分叉（Byzantium-fork）"><a href="#“拜占庭”分叉（Byzantium-fork）" class="headerlink" title="“拜占庭”分叉（Byzantium fork）"></a>“拜占庭”分叉（Byzantium fork）</h3><blockquote><p>以太坊网络在“<a href="#metropolis">大都会</a>”开发阶段两次<a href="#fork">分叉</a>中的第一次，包含 EIP-649（以太坊改进提案第 649 号）：延迟“大都会”阶段的难度炸弹并降低<a href="#reward">区块奖励</a>，使“<a href="#ice-age">冰河期</a>”推迟一年，区块奖励由 5 个<a href="#ether">以太币</a>将至 3 个。</p></blockquote><p>相关：《精通以太坊》P.12<br>收录时间：2020.2.9</p><hr><h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><h3 id="编译（Compiling）"><a href="#编译（Compiling）" class="headerlink" title="编译（Compiling）"></a>编译（Compiling）</h3><blockquote><p>将用高级编程语言（如 <a href="#solidity">Solidity</a>）编写的代码转换成较低级语言（如<a href="#evm">以太坊虚拟机</a><a href="#bytecode">字节码</a>）。</p></blockquote><p>相关：《精通以太坊》P.12<br>收录时间：2020.2.9</p><div class="anchor" id="consensus"></div><h3 id="共识（Consensus）"><a href="#共识（Consensus）" class="headerlink" title="共识（Consensus）"></a>共识（Consensus）</h3><blockquote><p>当许多<a href="#node">节点</a>（通常是全网大多数节点）都在本地经验证的<a href="#blockchain">区块链</a>上存有同样<a href="#block">区块</a>时，我们说<a href="#network">网络</a>达成共识。要与<a href="#consensus-rules">共识规则</a>区别开来。</p></blockquote><p>相关：《精通以太坊》P.12<br>收录时间：2020.2.9</p><div class="anchor" id="consensus-rules"></div><h3 id="共识规则（Consensus-rules）"><a href="#共识规则（Consensus-rules）" class="headerlink" title="共识规则（Consensus rules）"></a>共识规则（Consensus rules）</h3><blockquote><p>每个全功能<a href="#node">节点</a>为了与其他节点保持一致所要遵循的<a href="#block">区块</a>验证规则。要与<a href="#consensus">共识</a>区别开来。</p></blockquote><p>相关：《精通以太坊》P.12<br>收录时间：2020.2.9</p><h3 id="“君士坦丁堡”分叉（Constantinople-fork）"><a href="#“君士坦丁堡”分叉（Constantinople-fork）" class="headerlink" title="“君士坦丁堡”分叉（Constantinople fork）"></a>“君士坦丁堡”分叉（Constantinople fork）</h3><blockquote><p>这是“<a href="#metropolis">大都会</a>”开发阶段两次<a href="#fork">分叉</a>中的第二次，原计划在2018年年中执行升级，该次升级主要计划将<a href="#consensus">共识</a>算法更换成<a href="#pow">工作量证明</a>与<a href="#pos">权益证明</a>混合的算法。</p></blockquote><p>相关：《精通以太坊》P.12<br>收录时间：2020.2.9</p><div class="anchor" id="contract-account"></div><h3 id="合约账户（Contract-account）"><a href="#合约账户（Contract-account）" class="headerlink" title="合约账户（Contract account）"></a>合约账户（Contract account）</h3><blockquote><p>一个包含代码的<a href="#account">账户</a>，只要接收到来自其他账户（<a href="#eoa">外部账户</a>或<a href="#smart-contract">合约</a>）的<a href="#transaction">交易</a>就会执行合约代码。</p></blockquote><p>相关：《精通以太坊》P.12<br>收录时间：2020.2.9</p><div class="anchor" id="contract-creation-transaction"></div><h3 id="创建合约交易（Contract-creation-transaction）"><a href="#创建合约交易（Contract-creation-transaction）" class="headerlink" title="创建合约交易（Contract creation transaction）"></a>创建合约交易（Contract creation transaction）</h3><blockquote><p>一种为了注册一个<a href="#smart-contract">合约</a>并将其记录在以太坊<a href="#blockchain">区块链</a>上的特殊<a href="#transaction">交易</a>，其中接受者<a href="#address">地址</a>“为<a href="#zero-address">零</a>”。</p></blockquote><p>相关：《精通以太坊》P.12<br>收录时间：2020.2.9</p><hr><h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><h3 id="去中心化自组织（DAO，Decentralized-Autonomous-Organization）"><a href="#去中心化自组织（DAO，Decentralized-Autonomous-Organization）" class="headerlink" title="去中心化自组织（DAO，Decentralized Autonomous Organization）"></a>去中心化自组织（DAO，Decentralized Autonomous Organization）</h3><blockquote><p>去中心化自组织是一类没有分层管理体系的公司或其他组织。“The DAO”同时也可以指代一份2016年4月30日发布的<a href="#smart-contract">合约</a>，其随后在2016年6月遭到攻击，并最终引起了在<a href="#block">区块</a>高度 1192000 发生的<a href="#hard-fork">硬分叉</a>。该<a href="#fork">分叉</a>回退了被攻击的 DAO 合约。也导致以太坊与以太坊经典分裂成两个竞争系统。</p></blockquote><p>相关：《精通以太坊》P.13<br>收录时间：2020.2.10</p><div class="anchor" id="dapp"></div><h3 id="DApp（Decentralized-application）"><a href="#DApp（Decentralized-application）" class="headerlink" title="DApp（Decentralized application）"></a>DApp（Decentralized application）</h3><blockquote><p>去中心化应用程序。狭义地说，DApp 可以是一个<a href="#smart-contract">智能合约</a>或网页上的用户界面；广义地说，是在开放的、去中心化的、点对点的基础设施服务之上建立的<a href="#network">网络</a>应用程序。此外，许多去中心化应用程序还包含去中心化存储与（或）通信协议和平台。</p></blockquote><p>相关：《精通以太坊》P.13<br>收录时间：2020.2.10</p><div class="anchor" id="deed"></div><h3 id="权证（Deed）"><a href="#权证（Deed）" class="headerlink" title="权证（Deed）"></a>权证（Deed）</h3><blockquote><p><a href="#nft">不可替代代币</a>（NFT）标准是由 ERC721 提议的。与 ERC20 代币不同。权证（所有权证书）可以证明 ERC721 代币的所有权，且该所有权不可互换，但目前为止还未有任何司法管辖区承认其为合法文件。</p></blockquote><p>相关：《精通以太坊》P.13<br>收录时间：2020.2.10</p><div class="anchor" id="difficulty"></div><h3 id="难度（Difficulty）"><a href="#难度（Difficulty）" class="headerlink" title="难度（Difficulty）"></a>难度（Difficulty）</h3><blockquote><p>对全网来说，设置产生单位<a href="#pow">工作量证明</a>需要消耗多少算力。</p></blockquote><p>相关：《精通以太坊》P.13<br>收录时间：2020.2.10</p><div class="anchor" id="digital-signature"></div><h3 id="数字签名（Digital-signature）"><a href="#数字签名（Digital-signature）" class="headerlink" title="数字签名（Digital signature）"></a>数字签名（Digital signature）</h3><blockquote><p>数字签名算法使用户可以使用其<a href="#private-key">私钥</a>生成我们称之为文件“签名”的短数据串，并使任何拥有相应<a href="#public-key">公钥</a>、该文件签名与文档的人都可以验证：该文件确实由该特定私钥的所有者“签署”，且该文档在签署后未被更改。</p></blockquote><p>相关：《精通以太坊》P.13<br>收录时间：2020.2.10</p><hr><h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2><div class="anchor" id="ecdsa"></div><h3 id="ECDSA（Elliptic-Curve-Digital-Signature-Algorithm）"><a href="#ECDSA（Elliptic-Curve-Digital-Signature-Algorithm）" class="headerlink" title="ECDSA（Elliptic Curve Digital Signature Algorithm）"></a>ECDSA（Elliptic Curve Digital Signature Algorithm）</h3><blockquote><p>椭圆曲线<a href="#digital-signature">数字签名</a>算法，是以太坊使用的密码学算法，用来保证<a href="#account">账户</a>资金只能被其所有者分配。</p></blockquote><p>相关：《精通以太坊》P.13<br>收录时间：2020.2.10</p><div class="anchor" id="eip"></div><h3 id="EIP-以太坊改进提案（Ethereum-Improvement-Proposal）"><a href="#EIP-以太坊改进提案（Ethereum-Improvement-Proposal）" class="headerlink" title="EIP 以太坊改进提案（Ethereum Improvement Proposal）"></a>EIP 以太坊改进提案（Ethereum Improvement Proposal）</h3><blockquote><p>以太坊改进提案，用以描述对以太坊平台提出的改进建议的文件，以特定的格式向全体以太坊社区描述一个提议的新功能、新流程或新环境。更多信息可以参考 <a href="https://github.com/ethereum/EIPs" target="_blank" rel="noopener">https://github.com/ethereum/EIPs</a>。（参见“<a href="#erc">ERC</a>”）</p></blockquote><p>相关：《精通以太坊》P.13<br>收录时间：2020.2.10</p><div class="anchor" id="ens"></div><h3 id="ENS（Ethereum-Name-Service）"><a href="#ENS（Ethereum-Name-Service）" class="headerlink" title="ENS（Ethereum Name Service）"></a>ENS（Ethereum Name Service）</h3><blockquote><p>以太坊域名服务。更多信息可以参考 <a href="https://github.com/ethereum/ens/" target="_blank" rel="noopener">https://github.com/ethereum/ens/</a>。</p></blockquote><p>相关：《精通以太坊》P.13<br>收录时间：2020.2.10</p><h3 id="熵（Entropy）"><a href="#熵（Entropy）" class="headerlink" title="熵（Entropy）"></a>熵（Entropy）</h3><blockquote><p>在密码学的语境中，熵意味着不可预期性，也就是随机性高低。当我们生成一个秘密信息（如<a href="#private-key">私钥</a>）时，算法通常需要依赖于一个熵非常大的信源来保证其输出的随机性。</p></blockquote><p>相关：《精通以太坊》P.13<br>收录时间：2020.2.10</p><div class="anchor" id="eoa"></div><h3 id="EOA（External-Owned-Account）"><a href="#EOA（External-Owned-Account）" class="headerlink" title="EOA（External Owned Account）"></a>EOA（External Owned Account）</h3><blockquote><p>外部账户，即以太坊网络中由人类用户创建或为人类用户使用的<a href="#account">账户</a>。</p></blockquote><p>相关：《精通以太坊》P.14<br>收录时间：2020.2.10</p><div class="anchor" id="erc"></div><h3 id="ERC（Ethereum-Request-for-Comments）"><a href="#ERC（Ethereum-Request-for-Comments）" class="headerlink" title="ERC（Ethereum Request for Comments）"></a>ERC（Ethereum Request for Comments）</h3><blockquote><p>以太坊请求评论。ERC 是给部分尝试定义以太坊具体使用标准的 <a href="#eip">EIP</a> 贴上的标签。</p></blockquote><p>相关：《精通以太坊》P.14<br>收录时间：2020.2.10</p><div class="anchor" id="ethash"></div><h3 id="Ethash"><a href="#Ethash" class="headerlink" title="Ethash"></a>Ethash</h3><blockquote><p>以太坊 1.0 版本中使用的<a href="#pow">工作量证明</a>算法。更多信息请参考 <a href="https://github.com/ethereum/wiki/wiki/Ethash" target="_blank" rel="noopener">https://github.com/ethereum/wiki/wiki/Ethash</a>。</p></blockquote><p>相关：《精通以太坊》P.14<br>收录时间：2020.2.10</p><div class="anchor" id="ether"></div><h3 id="以太币（Ether）"><a href="#以太币（Ether）" class="headerlink" title="以太币（Ether）"></a>以太币（Ether）</h3><blockquote><p>以太坊生态系统中使用的原生加密货币，用来支付执行<a href="#smart-contract">智能合约</a>时产生的 <a href="#gas">gas</a> 消耗，其货币符号为 Ξ，是希腊语中大写的 Xi 字母。</p></blockquote><p>相关：《精通以太坊》P.14<br>收录时间：2020.2.10</p><h3 id="事件（Event）"><a href="#事件（Event）" class="headerlink" title="事件（Event）"></a>事件（Event）</h3><blockquote><p>事件使<a href="#evm">以太坊虚拟机</a>中的日志记录工具可用，而日志记录工具可在 <a href="#dapp">DApp</a> 的用户界面中触发 JavaScript 回调，后者又能监听这些事件。更多信息请参考 <a href="http://solidity.readthedocs.io/en/develop/contracts.html#events" target="_blank" rel="noopener">http://solidity.readthedocs.io/en/develop/contracts.html#events</a>。</p></blockquote><p>相关：《精通以太坊》P.14<br>收录时间：2020.2.10</p><div class="anchor" id="evm"></div><h3 id="EVM（Ethereum-Virtual-Machine）"><a href="#EVM（Ethereum-Virtual-Machine）" class="headerlink" title="EVM（Ethereum Virtual Machine）"></a>EVM（Ethereum Virtual Machine）</h3><blockquote><p>以太坊虚拟机，是基于栈的虚拟机，用于执行<a href="#bytecode">字节码</a>。在以太坊中，其执行模型指定了在给定一系列字节码指令和一小组环境数据的情况下如何改变系统状态。这是通过虚拟状态机的正式模型指定的。</p></blockquote><p>相关：《精通以太坊》P.14<br>收录时间：2020.2.10</p><h3 id="EVM-汇编语言（EVM-assembly-language）"><a href="#EVM-汇编语言（EVM-assembly-language）" class="headerlink" title="EVM 汇编语言（EVM assembly language）"></a>EVM 汇编语言（EVM assembly language）</h3><blockquote><p>人类可读的<a href="#evm">以太坊虚拟机</a><a href="#bytecode">字节码</a>的一种形式。</p></blockquote><p>相关：《精通以太坊》P.14<br>收录时间：2020.2.10</p><hr><h2 id="F"><a href="#F" class="headerlink" title="F"></a>F</h2><div class="anchor" id="fallback-function"></div><h3 id="回退函数（Fallback-function）"><a href="#回退函数（Fallback-function）" class="headerlink" title="回退函数（Fallback function）"></a>回退函数（Fallback function）</h3><blockquote><p>在缺失数据或无法匹配函数名称时的默认函数调用。</p></blockquote><p>相关：《精通以太坊》P.14<br>收录时间：2020.2.10</p><h3 id="Faucet"><a href="#Faucet" class="headerlink" title="Faucet"></a>Faucet</h3><blockquote><p>免费提供测试网可用的测试<a href="#ether">以太币</a>的服务。</p></blockquote><p>相关：《精通以太坊》P.14<br>收录时间：2020.2.10</p><h3 id="finney"><a href="#finney" class="headerlink" title="finney"></a>finney</h3><blockquote><p><a href="#ether">以太币</a>的货币单位。$10^{15}$ finney = 1 ether。</p></blockquote><p>相关：《精通以太坊》P.14<br>收录时间：2020.2.10</p><div class="anchor" id="fork"></div><h3 id="分叉（Fork）"><a href="#分叉（Fork）" class="headerlink" title="分叉（Fork）"></a>分叉（Fork）</h3><blockquote><p>在协议层面的一次改动，可能会产生一条竞争链，或造成在挖矿中对未来<a href="#block">区块</a>路径的暂时性分歧。</p></blockquote><p>相关：《精通以太坊》P.14<br>收录时间：2020.2.10</p><h3 id="“前沿”版本（Frontier）"><a href="#“前沿”版本（Frontier）" class="headerlink" title="“前沿”版本（Frontier）"></a>“前沿”版本（Frontier）</h3><blockquote><p>以太坊最初开发测试阶段的版本，在2015年7月上线，知道2016年3月。</p></blockquote><p>相关：《精通以太坊》P.15<br>收录时间：2020.2.10</p><hr><h2 id="G"><a href="#G" class="headerlink" title="G"></a>G</h2><h3 id="Ganache"><a href="#Ganache" class="headerlink" title="Ganache"></a>Ganache</h3><blockquote><p>个人版以太坊<a href="#blockchain">区块链</a>，用户可以在控制区块链操作的情况下用其进行代码测试、执行命令并检查状态。</p></blockquote><p>相关：《精通以太坊》P.15<br>收录时间：2020.2.10</p><div class="anchor" id="gas"></div><h3 id="gas"><a href="#gas" class="headerlink" title="gas"></a>gas</h3><blockquote><p>以太坊网络中为执行<a href="#smart-contract">智能合约</a>所消耗的虚拟“燃油”。<a href="#evm">以太坊虚拟机</a>使用一种记账方法来衡量 gas 用量，以限制算力资源的消耗。（参见“<a href="#turing-complete">图灵完备</a>”）</p></blockquote><p>相关：《精通以太坊》P.15<br>收录时间：2020.2.10</p><h3 id="gas-上限（gas-limit）"><a href="#gas-上限（gas-limit）" class="headerlink" title="gas 上限（gas limit）"></a>gas 上限（gas limit）</h3><blockquote><p>一个<a href="#transaction">交易</a>或一个<a href="#block">区块</a>允许消耗的最大 <a href="#gas">gas</a> 量。</p></blockquote><p>相关：《精通以太坊》P.15<br>收录时间：2020.2.10</p><div class="anchor" id="gavin-wood"></div><h3 id="Gavin-Wood"><a href="#Gavin-Wood" class="headerlink" title="Gavin Wood"></a>Gavin Wood</h3><blockquote><p>Gavin Wood 是一名英国籍程序员，以太坊联合创始人，前首席技术官。2014年8月，他提出了 <a href="#solidity">Solidity</a> 这种面向<a href="#smart-contract">合约</a>的编程语言，用于编写<a href="#smart-contract">智能合约</a>。</p></blockquote><p>相关：《精通以太坊》P.15<br>收录时间：2020.2.10</p><h3 id="创世块（Genesis-block）"><a href="#创世块（Genesis-block）" class="headerlink" title="创世块（Genesis block）"></a>创世块（Genesis block）</h3><blockquote><p><a href="#blockchain">区块链</a>上的第一个<a href="#block">区块</a>，用于初始化特定的区块链及其原生加密代币。</p></blockquote><p>相关：《精通以太坊》P.15<br>收录时间：2020.2.10</p><h3 id="Geth（Go-Ethereum）"><a href="#Geth（Go-Ethereum）" class="headerlink" title="Geth（Go Ethereum）"></a>Geth（Go Ethereum）</h3><blockquote><p>以太坊的 Go 语言实现，是以太坊协议上最著名的实现。</p></blockquote><p>相关：《精通以太坊》P.15<br>收录时间：2020.2.10</p><hr><h2 id="H"><a href="#H" class="headerlink" title="H"></a>H</h2><div class="anchor" id="hard-fork"></div><h3 id="硬分叉（Hard-fork）"><a href="#硬分叉（Hard-fork）" class="headerlink" title="硬分叉（Hard fork）"></a>硬分叉（Hard fork）</h3><blockquote><p>硬分叉也叫硬分叉改变，是<a href="#blockchain">区块链</a>上产生的永久分歧，通常发生在拒绝升级的<a href="#node">节点</a>无法验证遵循新<a href="#consensus">共识</a>协议的已升级节点所创建的<a href="#block">区块</a>时。“硬分叉”不应与“<a href="#fork">分叉</a>”、“软分叉”、“软件分叉”或“Git 分叉”混淆。</p></blockquote><p>相关：《精通以太坊》P.15<br>收录时间：2020.2.10</p><div class="anchor" id="hash"></div><h3 id="哈希（Hash）"><a href="#哈希（Hash）" class="headerlink" title="哈希（Hash）"></a>哈希（Hash）</h3><blockquote><p>由可变长度输入，通过哈希函数（散列函数）生成的固定长度的数字指纹。</p></blockquote><p>相关：《精通以太坊》P.15<br>收录时间：2020.2.10</p><div class="anchor" id="hd-wallet"></div><h3 id="HD-钱包（HD-Wallet）"><a href="#HD-钱包（HD-Wallet）" class="headerlink" title="HD 钱包（HD Wallet）"></a>HD 钱包（HD Wallet）</h3><blockquote><p>分层确定性<a href="#wallet">钱包</a>，即使用分层确定性（HD）<a href="#secret-key">秘钥</a>创建与传输协议（BIP-32）的钱包。</p></blockquote><p>相关：《精通以太坊》P.15<br>收录时间：2020.2.10</p><h3 id="HD-钱包种子（HD-wallet-seed）"><a href="#HD-钱包种子（HD-wallet-seed）" class="headerlink" title="HD 钱包种子（HD wallet seed）"></a>HD 钱包种子（HD wallet seed）</h3><blockquote><p>用来生成 <a href="#hd-wallet">HD 钱包</a>中主<a href="#private-key">私钥</a>与主链码的短种子值。可以用助记词表示，以便人类复制、备份及恢复私钥。</p></blockquote><p>相关：《精通以太坊》P.15<br>收录时间：2020.2.10</p><h3 id="“家园”版本（Homestead）"><a href="#“家园”版本（Homestead）" class="headerlink" title="“家园”版本（Homestead）"></a>“家园”版本（Homestead）</h3><blockquote><p>以太坊的第二个开发阶段，在2016年3月<a href="#block">区块</a>高度为 1150000 时发布。</p></blockquote><p>相关：《精通以太坊》P.15<br>收录时间：2020.2.10</p><hr><h2 id="I"><a href="#I" class="headerlink" title="I"></a>I</h2><h3 id="ICAP（Inter-exchange-Client-Address-Protocol）"><a href="#ICAP（Inter-exchange-Client-Address-Protocol）" class="headerlink" title="ICAP（Inter-exchange Client Address Protocol）"></a>ICAP（Inter-exchange Client Address Protocol）</h3><blockquote><p>互换客户端地址协议，是一种与国际银行账号（IBAN）编码部分兼容的以太坊<a href="#address">地址</a>编码形式，为以太坊地址提供通用、经校验且可互操作的编码。ICAP 引入一个新的 IBAN 伪国家代码 XE，即“eXtended Ethereum”，类似其他非司法管辖区货币的代码（如 XBT、XRP、XCP）。</p></blockquote><p>相关：《精通以太坊》P.16<br>收录时间：2020.2.10</p><div class="anchor" id="ice-age"></div><h3 id="冰河期（Ice-Age）"><a href="#冰河期（Ice-Age）" class="headerlink" title="冰河期（Ice Age）"></a>冰河期（Ice Age）</h3><blockquote><p>在以太坊<a href="#blockchain">区块链</a><a href="#block">区块</a>高度为 200000 时通过<a href="#hard-fork">硬分叉</a>执行的指数<a href="#difficulty">难度</a>增长（又称为难度炸弹），以鼓励向<a href="#pos">权益证明</a>的转变。</p></blockquote><p>相关：《精通以太坊》P.16<br>收录时间：2020.2.9</p><h3 id="IDE（Integrated-Development-Environment）"><a href="#IDE（Integrated-Development-Environment）" class="headerlink" title="IDE（Integrated Development Environment）"></a>IDE（Integrated Development Environment）</h3><blockquote><p>综合开发环境，是一个结合了代码编辑器、编译器、运行时与调试器的用户界面。</p></blockquote><p>相关：《精通以太坊》P.16<br>收录时间：2020.2.10</p><h3 id="部署代码不可变问题（Immutable-deployed-code-problem）"><a href="#部署代码不可变问题（Immutable-deployed-code-problem）" class="headerlink" title="部署代码不可变问题（Immutable deployed code problem）"></a>部署代码不可变问题（Immutable deployed code problem）</h3><blockquote><p>只要一份<a href="#smart-contract">合约</a>（或<a href="#library">库</a>）的代码部署上链，就无法改变。正常的软件开发需要修复可能出现的漏洞并增加新功能，因此该不可改变性对<a href="#smart-contract">智能合约</a>开发而言是个挑战。</p></blockquote><p>相关：《精通以太坊》P.16<br>收录时间：2020.2.10</p><div class="anchor" id="internal-transaction"></div><h3 id="内部交易（也称为“消息”）（Internal-transaction）"><a href="#内部交易（也称为“消息”）（Internal-transaction）" class="headerlink" title="内部交易（也称为“消息”）（Internal transaction）"></a>内部交易（也称为“消息”）（Internal transaction）</h3><blockquote><p>从一个<a href="#contract-account">合约账户</a>发往另一个合约账户或<a href="#eoa">外部账户</a>的<a href="#transaction">交易</a>。</p></blockquote><p>相关：《精通以太坊》P.16<br>收录时间：2020.2.10</p><h3 id="IPFS（InterPlanetary-File-System）"><a href="#IPFS（InterPlanetary-File-System）" class="headerlink" title="IPFS（InterPlanetary File System）"></a>IPFS（InterPlanetary File System）</h3><blockquote><p>星际文件系统，是一个旨在创建开源且分布式存储和共享文件的<a href="#network">网络</a>传输协议。它是一种内容可寻址的对等超媒体分发协议。</p></blockquote><p>相关：《精通以太坊》P.16<br>收录时间：2020.2.10</p><hr><h2 id="K"><a href="#K" class="headerlink" title="K"></a>K</h2><h3 id="秘钥导出函数（KDF，Key-Derivation-Function）"><a href="#秘钥导出函数（KDF，Key-Derivation-Function）" class="headerlink" title="秘钥导出函数（KDF，Key Derivation Function）"></a>秘钥导出函数（KDF，Key Derivation Function）</h3><blockquote><p>也称为<a href="#secret-key">秘钥</a>延伸算法，通过<a href="#keystore-file">秘钥库文件</a>格式来防止暴力破解，防止攻击者预先计算派生秘钥的字典或“彩虹表”，通过重复计算密令的<a href="#hash">哈希</a>来实现。</p></blockquote><p>相关：《精通以太坊》P.16<br>收录时间：2020.2.10</p><div class="anchor" id="keccak-256"></div><h3 id="Keccak-256"><a href="#Keccak-256" class="headerlink" title="Keccak-256"></a>Keccak-256</h3><p>以太坊协议使用的加密<a href="#hash">哈希</a>函数。Keccak-256 是从 SHA-3 规范演化出来的。</p><p>相关：《精通以太坊》P.16<br>收录时间：2020.2.10</p><div class="anchor" id="keystore-file"></div><h3 id="秘钥库文件（Keystore-File）"><a href="#秘钥库文件（Keystore-File）" class="headerlink" title="秘钥库文件（Keystore File）"></a>秘钥库文件（Keystore File）</h3><blockquote><p>一个包含单个（随机生成的）<a href="#private-key">私钥</a>的 JSON 编码文件，用密令加密以提高安全性。</p></blockquote><p>相关：《精通以太坊》P.16<br>收录时间：2020.2.10</p><hr><h2 id="L"><a href="#L" class="headerlink" title="L"></a>L</h2><h3 id="LevelDB"><a href="#LevelDB" class="headerlink" title="LevelDB"></a>LevelDB</h3><blockquote><p>一个轻量、开源的键值对存储库，它是单一用途的数据库，可以绑定到许多平台。</p></blockquote><p>相关：《精通以太坊》P.16<br>收录时间：2020.2.10</p><div class="anchor" id="library"></div><h3 id="库（Library）"><a href="#库（Library）" class="headerlink" title="库（Library）"></a>库（Library）</h3><blockquote><p>以太坊中的库是一类特殊的<a href="#smart-contract">合约</a>，它不可填值，无<a href="#fallback-function">回退函数</a>，也无数据存储。因此，库无法接收或持有<a href="#ether">以太币</a>，也无法存储数据。以太坊上的库是其他合约可以为只读计算调用的先前部署的代码。</p></blockquote><p>相关：《精通以太坊》P.16<br>收录时间：2020.2.10</p><h3 id="轻客户端（Lightweight-client）"><a href="#轻客户端（Lightweight-client）" class="headerlink" title="轻客户端（Lightweight client）"></a>轻客户端（Lightweight client）</h3><blockquote><p>一类不在本地保存<a href="#blockchain">区块链</a>副本，也无法验证<a href="#block">区块</a>和<a href="#transaction">交易</a>的以太坊客户端，具有<a href="#wallet">钱包</a>功能，也可以用其创建并广播交易。</p></blockquote><p>相关：《精通以太坊》P.17<br>收录时间：2020.2.10</p><hr><h2 id="M"><a href="#M" class="headerlink" title="M"></a>M</h2><h3 id="默克尔帕特里夏树（Merkle-Patricia-tree）"><a href="#默克尔帕特里夏树（Merkle-Patricia-tree）" class="headerlink" title="默克尔帕特里夏树（Merkle Patricia tree）"></a>默克尔帕特里夏树（Merkle Patricia tree）</h3><blockquote><p>一条缝协议中用于高效存储键值对的数据结构。</p></blockquote><p>相关：《精通以太坊》P.17<br>收录时间：2020.2.10</p><div class="anchor" id="message"></div><h3 id="消息（Message）"><a href="#消息（Message）" class="headerlink" title="消息（Message）"></a>消息（Message）</h3><blockquote><p>一个永不串行且只能在<a href="#evm">以太坊虚拟机</a>内发送的<a href="#internal-transaction">内部交易</a>。</p></blockquote><p>相关：《精通以太坊》P.17<br>收录时间：2020.2.10</p><h3 id="消息调用（Message-call）"><a href="#消息调用（Message-call）" class="headerlink" title="消息调用（Message call）"></a>消息调用（Message call）</h3><blockquote><p>将<a href="#message">消息</a>从一个<a href="#account">账户</a>传递到另一个账户的行为。如果目标账户与<a href="#evm">以太坊虚拟机</a>代码相关联，则将使用该对象的状态启动虚拟机并执行该消息的操作。</p></blockquote><p>相关：《精通以太坊》P.17<br>收录时间：2020.2.10</p><h3 id="ME-代币（METoken）"><a href="#ME-代币（METoken）" class="headerlink" title="ME 代币（METoken）"></a>ME 代币（METoken）</h3><blockquote><p>精通以太坊代币，即 ERC20 代币。</p></blockquote><p>相关：《精通以太坊》P.17<br>收录时间：2020.2.10</p><div class="anchor" id="metropolis"></div><h3 id="“大都会”阶段"><a href="#“大都会”阶段" class="headerlink" title="“大都会”阶段"></a>“大都会”阶段</h3><blockquote><p>以太坊开发的第三阶段，在2017年10月发布。</p></blockquote><p>相关：《精通以太坊》P.17<br>收录时间：2020.2.9</p><div class="anchor" id="miner"></div><h3 id="矿工（Miner）"><a href="#矿工（Miner）" class="headerlink" title="矿工（Miner）"></a>矿工（Miner）</h3><blockquote><p>通过不断做<a href="#hash">哈希</a>运算，找到新<a href="#block">区块</a>的有效<a href="#pow">工作量证明</a>的<a href="#network">网络</a><a href="#node">节点</a>。</p></blockquote><p>相关：《精通以太坊》P.17<br>收录时间：2020.2.10</p><h3 id="Mist"><a href="#Mist" class="headerlink" title="Mist"></a>Mist</h3><blockquote><p>Mist 是以太坊基金会开发的首个支持以太坊的浏览器。它包含一个浏览器内置的<a href="#wallet">钱包</a>，这也是首个 ERC20 代币标准的实现（ERC20 标准的作者 Fabian Vogelsteller 同时也是 Mist 的主要开发者）。Mist 还是第一个引入 camalCase 校验和（EIP-115 提出的）钱包。Mist 浏览器运行全功能<a href="#node">节点</a>，提供支持基于 <a href="#swarm">Swarm</a> 协议的存储和 <a href="#ens">ENS</a> 地址的完整的 <a href="#dapp">DApp</a> 浏览器。</p></blockquote><p>相关：《精通以太坊》P.17<br>收录时间：2020.2.10</p><hr><h2 id="N"><a href="#N" class="headerlink" title="N"></a>N</h2><div class="anchor" id="network"></div><h3 id="网络（Network）"><a href="#网络（Network）" class="headerlink" title="网络（Network）"></a>网络（Network）</h3><blockquote><p>以太坊网络，将<a href="#transaction">交易</a>与<a href="#block">区块</a>传播到每个以太坊<a href="#node">节点</a>（网络参与者）的点对点网络。</p></blockquote><p>相关：《精通以太坊》P.17<br>收录时间：2020.2.10</p><div class="anchor" id="nft"></div><h3 id="不可替代代币（NFT）"><a href="#不可替代代币（NFT）" class="headerlink" title="不可替代代币（NFT）"></a>不可替代代币（NFT）</h3><blockquote><p>也叫“所有权证书”或“<a href="#deed">权证</a>”，是由 ERC721 议案提出的代币标准。不可替代代币能够被追溯也可以<a href="#transaction">交易</a>，每个代币是唯一且独一无二的，不像 ERC20 代币，每个 NFT 都是无法互换的。NFT 能够代表数字或物理资产的所有权。</p></blockquote><p>相关：《精通以太坊》P.17<br>收录时间：2020.2.10</p><div class="anchor" id="node"></div><h3 id="节点（Node）"><a href="#节点（Node）" class="headerlink" title="节点（Node）"></a>节点（Node）</h3><blockquote><p>参与点对点<a href="#network">网络</a>的软件客户端。</p></blockquote><p>相关：《精通以太坊》P.18<br>收录时间：2020.2.10</p><div class="anchor" id="nonce"></div><h3 id="nonce"><a href="#nonce" class="headerlink" title="nonce"></a>nonce</h3><blockquote><p>在密码学中，nonce 指的是一个在加密通信中只能使用一次的值。以太坊中有两类 nonce：账户 nonce，用于每个<a href="#account">账户</a>中的<a href="#transaction">交易</a>计数，防止重放攻击；工作量证明 nonce，<a href="#block">区块</a>中满足<a href="#pow">工作量证明</a>的随机值。</p></blockquote><p>相关：《精通以太坊》P.18<br>收录时间：2020.2.10</p><hr><h2 id="O"><a href="#O" class="headerlink" title="O"></a>O</h2><div class="anchor" id="ommer"></div><h3 id="Ommer"><a href="#Ommer" class="headerlink" title="Ommer"></a>Ommer</h3><blockquote><p>某一个父块的子块，且自身不是任何<a href="#block">区块</a>的父块。当一个<a href="#miner">矿工</a>找到有效区块时，另一个矿工可能已经发布了一个竞争区块并将其添加上链。与比特币不同，以太坊中的孤块可以被更新的区块作为 ommer 打包，并获得部分<a href="#reward">区块奖励</a>。使用术语“ommer”是对同一个父块下不同子块的中性表达，但也有人称其为“叔块”（uncle）。</p></blockquote><p>相关：《精通以太坊》P.18<br>收录时间：2020.2.10</p><hr><h2 id="P"><a href="#P" class="headerlink" title="P"></a>P</h2><h3 id="Parity"><a href="#Parity" class="headerlink" title="Parity"></a>Parity</h3><blockquote><p>以太坊客户端软件中最著名的可互操作实现之一。</p></blockquote><p>相关：《精通以太坊》P.18<br>收录时间：2020.2.10</p><div class="anchor" id="private-key"></div><h3 id="私钥（Private-key）"><a href="#私钥（Private-key）" class="headerlink" title="私钥（Private key）"></a>私钥（Private key）</h3><blockquote><p>参见“<a href="#secret-key">秘钥</a>”。</p></blockquote><p>相关：《精通以太坊》P.18<br>收录时间：2020.2.10</p><div class="anchor" id="pos"></div><h3 id="权益证明（Pos）"><a href="#权益证明（Pos）" class="headerlink" title="权益证明（Pos）"></a>权益证明（Pos）</h3><blockquote><p>权益证明是加密货币<a href="#blockchain">区块链</a>协议试图达成分布式<a href="#consensus">共识</a>的一类方法。权益证明要求用户先证明自己对一定量加密资产的所有权（即他们在<a href="#network">网络</a>中的“权益”），才可参与到验证<a href="#transaction">交易</a>的过程中。</p></blockquote><p>相关：《精通以太坊》P.18<br>收录时间：2020.2.9</p><div class="anchor" id="pow"></div><h3 id="工作量证明（Pow）"><a href="#工作量证明（Pow）" class="headerlink" title="工作量证明（Pow）"></a>工作量证明（Pow）</h3><blockquote><p>工作量证明是一份需要巨大算力才能找到的数据（即“证明”）。在以太坊网络中，<a href="#miner">矿工</a>必须找到符合全网<a href="#difficulty">难度</a>标准的 <a href="#ethash">Ethash</a> 算法的数字解决方案。</p></blockquote><p>相关：《精通以太坊》P.18<br>收录时间：2020.2.9</p><div class="anchor" id="public-key"></div><h3 id="公钥（Public-key）"><a href="#公钥（Public-key）" class="headerlink" title="公钥（Public key）"></a>公钥（Public key）</h3><blockquote><p>通过<a href="#private-key">私钥</a>的单向函数派生的数字，可以公开共享，任何人都可以使用它来验证用其对应私钥进行的<a href="#digital-signature">数字签名</a>。</p></blockquote><p>相关：《精通以太坊》P.18<br>收录时间：2020.2.10</p><hr><h2 id="R"><a href="#R" class="headerlink" title="R"></a>R</h2><h3 id="收据（Receipt）"><a href="#收据（Receipt）" class="headerlink" title="收据（Receipt）"></a>收据（Receipt）</h3><blockquote><p>收据是由以太坊客户端返回的数据，用来表示特定<a href="#transaction">交易</a>的结果，数据包含交易<a href="#hash">哈希</a>、打包的<a href="#block">区块</a>高度、实际 <a href="#gas">gas</a> 消耗量，如果该交易用来部署<a href="#smart-contract">合约</a>，则还会返回该合约<a href="#address">地址</a>。</p></blockquote><p>相关：《精通以太坊》P.18<br>收录时间：2020.2.10</p><h3 id="可重入攻击（Re-entrancy-attack）"><a href="#可重入攻击（Re-entrancy-attack）" class="headerlink" title="可重入攻击（Re-entrancy attack）"></a>可重入攻击（Re-entrancy attack）</h3><blockquote><p>攻击者<a href="#smart-contract">合约</a>调用受害者合约函数，使得在调用执行过程中受害者合约会循环调用攻击者合约。这可能导致通过跳过受害者合约的余额更新或提款金额计算的部分来盗窃资金。</p></blockquote><p>相关：《精通以太坊》P.18<br>收录时间：2020.2.10</p><div class="anchor" id="reward"></div><h3 id="区块奖励（Reward）"><a href="#区块奖励（Reward）" class="headerlink" title="区块奖励（Reward）"></a>区块奖励（Reward）</h3><blockquote><p>以太坊网络给予找到相应<a href="#pow">工作量证明</a>的解的<a href="#miner">矿工</a>的，包含在每个新<a href="#block">区块</a>中用<a href="#ether">以太币</a>计价的奖励。</p></blockquote><p>相关：《精通以太坊》P.19<br>收录时间：2020.2.10</p><h3 id="RLP（Recursive-Length-Prefix）"><a href="#RLP（Recursive-Length-Prefix）" class="headerlink" title="RLP（Recursive Length Prefix）"></a>RLP（Recursive Length Prefix）</h3><blockquote><p>递归长度前缀是一种编码算法，用于编码任意嵌套结构的对象（数据结构），它是以太坊中数据序列化的主要方法。</p></blockquote><p>相关：《精通以太坊》P.19<br>收录时间：2020.2.10</p><hr><h2 id="S"><a href="#S" class="headerlink" title="S"></a>S</h2><h3 id="中本聪（Satoshi-Nakamoto）"><a href="#中本聪（Satoshi-Nakamoto）" class="headerlink" title="中本聪（Satoshi Nakamoto）"></a>中本聪（Satoshi Nakamoto）</h3><blockquote><p>中本聪是设计比特币并创建比特币原始实现的个人或团队的名字。他（们）是第一个解决数字货币双重花费问题的人（团队），他们的真实身份至今还是个谜。</p></blockquote><p>相关：《精通以太坊》P.19<br>收录时间：2020.2.10</p><div class="anchor" id="secret-key"></div><h3 id="秘钥（也称为私钥）（Secret-key）"><a href="#秘钥（也称为私钥）（Secret-key）" class="headerlink" title="秘钥（也称为私钥）（Secret key）"></a>秘钥（也称为私钥）（Secret key）</h3><blockquote><p>通过生成<a href="#digital-signature">数字签名</a>（参见“<a href="#public-key">公钥</a>”、“<a href="#address">地址</a>”、“<a href="#ecdsa">ECDSA</a>”），使以太坊用户能够证明<a href="#account">账户</a>或<a href="#smart-contract">合约</a>的所有权的密码。</p></blockquote><p>相关：《精通以太坊》P.19<br>收录时间：2020.2.10</p><h3 id="“宁静”阶段（Serenity）"><a href="#“宁静”阶段（Serenity）" class="headerlink" title="“宁静”阶段（Serenity）"></a>“宁静”阶段（Serenity）</h3><blockquote><p>以太坊开发进程的第四阶段，也是终极阶段，还未公布计划的发布日期。</p></blockquote><p>相关：《精通以太坊》P.19<br>收录时间：2020.2.10</p><div class="anchor" id="serpent"></div><h3 id="Serpent"><a href="#Serpent" class="headerlink" title="Serpent"></a>Serpent</h3><blockquote><p>直译为“大蛇”，是一种语法类似 Python（直译为“大蟒”）的过程化编程语言。</p></blockquote><p>相关：《精通以太坊》P.19<br>收录时间：2020.2.10</p><h3 id="SHA（Secure-Hash-Algorithm）"><a href="#SHA（Secure-Hash-Algorithm）" class="headerlink" title="SHA（Secure Hash Algorithm）"></a>SHA（Secure Hash Algorithm）</h3><blockquote><p>安全哈希算法，是由美国国家标准与技术研究院（NIST）发布的一系列加密<a href="#hash">哈希</a>函数。</p></blockquote><p>相关：《精通以太坊》P.19<br>收录时间：2020.2.10</p><h3 id="单例模式（Singleton）"><a href="#单例模式（Singleton）" class="headerlink" title="单例模式（Singleton）"></a>单例模式（Singleton）</h3><blockquote><p>计算机编程术语，描述只能存在单个实例的对象。</p></blockquote><p>相关：《精通以太坊》P.19<br>收录时间：2020.2.10</p><div class="anchor" id="smart-contract"></div><h3 id="智能合约（Smart-Contract）"><a href="#智能合约（Smart-Contract）" class="headerlink" title="智能合约（Smart Contract）"></a>智能合约（Smart Contract）</h3><blockquote><p>在以太坊计算基础框架上执行的程序。</p></blockquote><p>相关：《精通以太坊》P.19<br>收录时间：2020.2.10</p><div class="anchor" id="solidity"></div><h3 id="Solidity"><a href="#Solidity" class="headerlink" title="Solidity"></a>Solidity</h3><blockquote><p>一种语法类似 JavaScript、C++ 或 Java 的程序化（命令式）编程语言，是用于编写以太坊<a href="#smart-contract">智能合约</a>的最流行也最常用的编程语言。由 <a href="#gavin-wood">Gavin Wood</a> 博士发明，他同时也是《精通以太坊》的作者之一。</p></blockquote><p>相关：《精通以太坊》P.19<br>收录时间：2020.2.10</p><h3 id="Solidity-内联汇编（Solidity-inline-assembly）"><a href="#Solidity-内联汇编（Solidity-inline-assembly）" class="headerlink" title="Solidity 内联汇编（Solidity inline assembly）"></a>Solidity 内联汇编（Solidity inline assembly）</h3><blockquote><p><a href="#solidity">Solidity</a> 中包含的内联汇编使用<a href="#evm">以太坊虚拟机</a>汇编，可使其为以太坊虚拟机代码的人类可读形式的代码。内联汇编使得编写某些操作变得更加容易。</p></blockquote><p>相关：《精通以太坊》P.19<br>收录时间：2020.2.10</p><h3 id="Spurious-Dragon-分叉"><a href="#Spurious-Dragon-分叉" class="headerlink" title="Spurious Dragon 分叉"></a>Spurious Dragon 分叉</h3><blockquote><p>在<a href="#block">区块</a>高度为 2675000 时发生的以太坊网络<a href="#hard-fork">硬分叉</a>，解决了一些拒绝服务攻击变量，以及另一状态的清除（参见“<a href="#tangerine-whistle-fork">Tangerine Whistle 分叉</a>”）。同时还增加了对重放攻击的防御机制。</p></blockquote><p>相关：《精通以太坊》P.20<br>收录时间：2020.2.10</p><div class="anchor" id="swarm"></div><h3 id="Swarm-协议"><a href="#Swarm-协议" class="headerlink" title="Swarm 协议"></a>Swarm 协议</h3><blockquote><p>一个去中心化（点对点）的存储<a href="#network">网络</a>，与 <a href="#web3">Web3</a> 和 <a href="#whisper">Whisper</a> 协议共同使用来构建 <a href="#dapp">DApp</a>。</p></blockquote><p>相关：《精通以太坊》P.20<br>收录时间：2020.2.10</p><h3 id="szabo"><a href="#szabo" class="headerlink" title="szabo"></a>szabo</h3><blockquote><p><a href="#ether">以太币</a>的货币单位。$10^{12}$ szabo = 1 ether。</p></blockquote><p>相关：《精通以太坊》P.20<br>收录时间：2020.2.11</p><hr><h2 id="T"><a href="#T" class="headerlink" title="T"></a>T</h2><div class="anchor" id="tangerine-whistle-fork"></div><h3 id="Tangerine-Whistle-分叉"><a href="#Tangerine-Whistle-分叉" class="headerlink" title="Tangerine Whistle 分叉"></a>Tangerine Whistle 分叉</h3><blockquote><p>在<a href="#block">区块</a>高度 2463000 时发生的以太坊网络<a href="#hard-fork">硬分叉</a>，改变了某些输入/输出密集型操作的 <a href="#gas">gas</a> 计算方法，并清理了因一次拒绝服务攻击造成的累积状态，这一攻击正是利用了某些操作的较低 gas 成本。</p></blockquote><p>相关：《精通以太坊》P.20<br>收录时间：2020.2.11</p><h3 id="测试网（Testnet）"><a href="#测试网（Testnet）" class="headerlink" title="测试网（Testnet）"></a>测试网（Testnet）</h3><blockquote><p>测试<a href="#network">网络</a>（test network）的缩写，通常用来模拟以太坊主网的行为。</p></blockquote><p>相关：《精通以太坊》P.20<br>收录时间：2020.2.11</p><div class="anchor" id="transaction"></div><h3 id="交易（Transaction）"><a href="#交易（Transaction）" class="headerlink" title="交易（Transaction）"></a>交易（Transaction）</h3><blockquote><p>由一个原始<a href="#account">账户</a>签署并以一个特定<a href="#address">地址</a>为目标的提交到以太坊<a href="#blockchain">区块链</a>上的数据。该交易包含交易 <a href="#gas">gas</a> 上限等元数据。</p></blockquote><p>相关：《精通以太坊》P.20<br>收录时间：2020.2.11</p><h3 id="Truffle"><a href="#Truffle" class="headerlink" title="Truffle"></a>Truffle</h3><blockquote><p>最常用的以太坊开发框架之一。</p></blockquote><p>相关：《精通以太坊》P.20<br>收录时间：2020.2.11</p><div class="anchor" id="turing-complete"></div><h3 id="图灵完备（Turing-complete）"><a href="#图灵完备（Turing-complete）" class="headerlink" title="图灵完备（Turing complete）"></a>图灵完备（Turing complete）</h3><blockquote><p>在可计算性理论里，如果一系列操作数据的规则（如指令集、编程语言、细胞自动机）可以用来模拟单带图灵机，那么它是图灵完备的。这个名字来源于英国数学家和计算机科学家艾伦·图灵。</p></blockquote><p>相关：《精通以太坊》P.20<br>收录时间：2020.2.10</p><hr><h2 id="V"><a href="#V" class="headerlink" title="V"></a>V</h2><div class="anchor" id="vitalik-buterin"></div><h3 id="Vitalik-Buterin"><a href="#Vitalik-Buterin" class="headerlink" title="Vitalik Buterin"></a>Vitalik Buterin</h3><blockquote><p>一名俄裔加拿大籍程序员、作家，因联合创建以太坊和《比特币杂志》而为世人所认识。</p></blockquote><p>相关：《精通以太坊》P.20<br>收录时间：2020.2.11</p><h3 id="Vyper"><a href="#Vyper" class="headerlink" title="Vyper"></a>Vyper</h3><blockquote><p>一种高级编程语言，与 <a href="#serpent">Serpent</a> 相似，使用类似 Python 的语法，目的是创造一个更接近纯函数式的编程语言。由 <a href="#vitalik-buterin">Vitalik Buterin</a> 发明。</p></blockquote><p>相关：《精通以太坊》P.20<br>收录时间：2020.2.11</p><hr><h2 id="W"><a href="#W" class="headerlink" title="W"></a>W</h2><div class="anchor" id="wallet"></div><h3 id="钱包（Wallet）"><a href="#钱包（Wallet）" class="headerlink" title="钱包（Wallet）"></a>钱包（Wallet）</h3><blockquote><p>保存用户<a href="#secret-key">秘钥</a>的软件，可以用来访问并管理你的以太坊<a href="#account">账户</a>并与<a href="#smart-contract">智能合约</a>交互。秘钥不一定要存储在钱包中，为了提高安全性，可以离线存储（如写在一张记忆卡或者纸上）。尽管称其为“钱包”，但它并不存储代币本身。</p></blockquote><p>相关：《精通以太坊》P.21<br>收录时间：2020.2.10</p><div class="anchor" id="web3"></div><h3 id="web3"><a href="#web3" class="headerlink" title="web3"></a>web3</h3><blockquote><p>万维网的第三个版本。由 <a href="#gavin-wood">Gavin Wood</a> 博士首次提议，代表了对<a href="#network">网络</a>应用的新愿景与新焦点：从中心化所有并管理的应用转移到在去中心化协议上构建的应用。</p></blockquote><p>相关：《精通以太坊》P.21<br>收录时间：2020.2.11</p><h3 id="wei"><a href="#wei" class="headerlink" title="wei"></a>wei</h3><blockquote><p><a href="#ether">以太币</a>最小货币单位。$10^{18}$ wei = 1 ether。</p></blockquote><p>相关：《精通以太坊》P.21<br>收录时间：2020.2.11</p><div class="anchor" id="whisper"></div><h3 id="Whisper-协议"><a href="#Whisper-协议" class="headerlink" title="Whisper 协议"></a>Whisper 协议</h3><blockquote><p>去中心化（P2P）的消息传输服务。与 <a href="#web3">Web3</a> 和 <a href="#swarm">Swarm</a> 协议共同使用来构建 <a href="#dapp">DApp</a>。</p></blockquote><p>相关：《精通以太坊》P.21<br>收录时间：2020.2.11</p><hr><h2 id="Z"><a href="#Z" class="headerlink" title="Z"></a>Z</h2><div class="anchor" id="zero-address"></div><h3 id="零地址（Zero-Address）"><a href="#零地址（Zero-Address）" class="headerlink" title="零地址（Zero Address）"></a>零地址（Zero Address）</h3><blockquote><p>一个特殊的以太坊<a href="#address">地址</a>，地址的所有字节都为 0，作为“<a href="#contract-creation-transaction">创建合约交易</a>”的目标地址。</p></blockquote><p>相关：《精通以太坊》P.21<br>收录时间：2020.2.9</p>]]></content>
      
      
      <categories>
          
          <category> 猜猜拳 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 手册 </tag>
            
            <tag> 概念 </tag>
            
            <tag> 词条 </tag>
            
            <tag> 以太坊 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>有点“模式”意识</title>
      <link href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-2/20180314_you-dian-mo-shi-yi-shi/"/>
      <url>/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-2/20180314_you-dian-mo-shi-yi-shi/</url>
      
        <content type="html"><![CDATA[<h5 id="《万维钢·精英日课2：有点“模式”意识》课程笔记"><a href="#《万维钢·精英日课2：有点“模式”意识》课程笔记" class="headerlink" title="《万维钢·精英日课2：有点“模式”意识》课程笔记"></a>《万维钢·精英日课2：有点“模式”意识》课程笔记</h5><h2 id="1-什么是“模式”"><a href="#1-什么是“模式”" class="headerlink" title="1 什么是“模式”"></a>1 什么是“模式”</h2><p>模式，是把事情看做一个各部门协调统一的系统，操控的不是一个部门，而是系统这个“整体”。这是一种高级的管理。</p><p>汽车有“舒适模式”、“运动模式”、“环保模式”等。运动模式意味着汽车的悬挂要硬一点，换挡要更快，发动机要增加转数，油门要更灵敏，方向盘要变重，给你一个更强的操纵感。如果是舒适模式，那这些选项就都要变得更柔和，控制起来没有那么灵敏，但是驾驶感觉更平稳。要是环保模式，那就需要想方设法省油。</p><p>再比如《魔兽世界》，就曾经设定战士有三种不同的“姿态”，叫战斗姿态、防御姿态和狂暴姿态。有的强调防守，有的为了快速输出伤害而宁可牺牲防守。这些不同的姿态就好像是汽车的各种模式。</p><p><img src="http://q4kbn37nl.bkt.clouddn.com/wow-zhan-shi.jpg?e=1581188857&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:jHwfp6NgYim-X7-xuQFNi9Nd2dw" alt="魔兽世界 —— 战士姿态"></p><p>真实世界中的人也有不同的姿态或者模式。比如人有工作模式、休息模式、娱乐模式 —— 娱乐不是休息 —— 还有社交模式等等。</p><p>对于这些模式我们没有很强烈的意识，不需要按一个按钮来切换模式，自动地就切换了。而且切换模式的时候，我们的身体各个部位似乎也没什么明显变化。</p><div class="anchor" id="ya-li-he-xi-tong"></div><h2 id="2-压力和系统"><a href="#2-压力和系统" class="headerlink" title="2 压力和系统"></a>2 压力和系统</h2><p>《万维钢·精英日课1：〈端粒效应〉2：压力的一念之间》有讲过压力的问题，这回从系统论和模式的角度再看看这个问题。</p><p>《万维钢·精英日课2：寓言和知识》中提到一本书叫《为什么斑马不得胃溃疡》（Why Zebras Don’t Get Ulcers），作者是斯坦福大学的罗伯特·萨波尔斯基（Robert Sapolsky），书中就提到了人的压力应激反应模式。</p><p>以前科学家看人体是线性思维，以为人体是哪里有问题就调节哪里，追求一个“稳态平衡（homeostasis）”。现在人们意识到人体是一个复杂系统，面对一个外来压力，人体是全身都参与反应，整个系统各个地方都要微调，这叫做“应变稳态（allostasis）”。</p><p>举个例子，比如说美国旧金山市现在缺水。如果是线性思维，市政府只要要求居民节省抽水马桶用水就可以了，其他生活不受影响。但人体真正的运行方式是，一旦有这种缺水危机，不但居民生活各个方面都要节约用水，而且还会要求从中国进口大米！为什么呢？因为这样旧金山市就不用自己灌溉水稻田了。</p><p>我们面对压力的时候，就是这么一个全身的协调反应。这就是为什么人在压力之下很多地方都可能出问题，比如睡眠、记忆力、消化、免疫能力，还会影响怀孕和衰老，还更容易对药物上瘾。</p><p>面对压力，你不仅仅是改变了一个控制选项 —— 你是切换到了另一个“模式”。</p><div class="anchor" id="ya-li-mo-shi-he-fang-song-mo-shi"></div><h2 id="3-压力模式和放松模式"><a href="#3-压力模式和放松模式" class="headerlink" title="3 压力模式和放松模式"></a>3 压力模式和放松模式</h2><p>我们身体里负责协调压力反应的系统叫“自主神经系统”。自主神经系统是大脑自动的反应，不需要你有意识地去控制。比如你在路上走，突然有个东西跳出来吓到你，你一害怕身体就会发生各种反应，比如你的汗毛孔会收缩，你可能会迅速地蹲下，你可能双臂收缩在一起，这就是自主神经系统的作用。自主神经系统有两个模式。</p><p>一个模式，我们不妨把它称为“压力模式”，由“交感神经系统”控制。交感神经系统能让人紧张、积极起来，相当于进入战斗姿态。交感神经系统会最大限度地把葡萄糖和脂肪输入血管，把血压增高，加大呼吸频率来提高血液里的供氧量，同时让心率加快。这样我们整个身体都准备好，你可以逃跑也可以战斗。</p><p>压力模式开启的时候，为了集中使用能量，就要暂时停止那些与危险无关的身体功能，比如消化功能、肌肉修复的功能、免疫系统等等。</p><p>另一个模式我们不妨称为“放松模式”，由“副交感神经系统”控制。这个模式与压力模式正好相反，它是让整个身体的各方面循环都慢下来。</p><p>放松模式下，心跳平稳下来，血压降下来，身体该修复的地方就修复，免疫系统该工作就工作，能量该储备就储备。</p><p>一般动物大部分时间都是处于放松模式，只有当面临生存危机的时候才会开启压力模式。比如说斑马，没有狮子威胁的时候，它就悠闲地该干啥干啥。狮子要吃它了，它才开启交感神经系统，进入压力模式，调动全身能量赶紧逃跑。</p><p>狮子也是如此。电视纪录片说狮子捕食的出击成功率大概只有三分之一，如果想抓斑马没抓到，它和它全家就可能要面临一天甚至几天的饥饿，所以狮子捕猎的时候也是进入压力模式。但只要不是捕猎，狮子就是处在放松模式。</p><div class="anchor" id="wei-shen-me-ren-hui-de-wei-kui-yang"></div><h2 id="4-为什么人会得胃溃疡"><a href="#4-为什么人会得胃溃疡" class="headerlink" title="4 为什么人会得胃溃疡"></a>4 为什么人会得胃溃疡</h2><p>人的生活比斑马好得多，可是人却感受到了更多的压力。</p><p>绝大多数人不用担心吃不上饭也不用担心被追杀，我们面对的一般都不是迫在眉睫的生存压力。可是我们看到堵车就很烦躁，工作期限要到了、任务还没完成就会紧张和焦虑，斑马没有这些烦恼。</p><p>更重要的是，我们还要担心一些现在并没有发生、但是未来有可能要发生的事情。比如你买了个房子，每个月要还高额贷款。本来你现在的工资足够还贷款的，但是你有时候会担心，万一失业了，这贷款怎么还。</p><p>这些事儿加在一起，就使得很多人长期地处于压力模式，由交感神经系统支配。</p><p>交感神经系统会让肌肉收紧，那么血液流动速度就会增加，心率也会提高，血液流动加快了你就需要更强的肌肉来维持血管，于是你的毛细血管就会变硬，你的血压会进一步升高，这是一个恶性循环。你需要开启负反馈回路让自己放松下来，可是你来不及。</p><p>如果血液流动总是很快，血管就会发炎，这会导致血栓，长期下去就是高血压和心脏病。</p><p>如果长期处在压力模式下，放松模式不能启动，副交感神经系统不能正常工作，你的身体得不到修复，你没有足够的能量储备，你会感到很疲惫，你的免疫系统不能完全发挥作用，胃溃疡和各种传染病就是这么来的。附带的结果，还有糖尿病和抑郁症。</p><p>可以说，这些病都是心病。</p><p>根本原因，就是你不是斑马。脊椎动物面对压力会开启交感神经系统，这个系统不是让你一直开着用的。你原本应该在短暂的危险过后赶紧切换到放松模式。</p><div class="anchor" id="zhu-dong-qie-huan"></div><h2 id="5-主动切换"><a href="#5-主动切换" class="headerlink" title="5 主动切换"></a>5 主动切换</h2><p>萨波尔斯基打了个比方我觉得特别好。他说当龙卷风来袭的时候，你大概不会选择在这一天粉刷车库的墙壁。</p><p>这个道理是我们总要先解决迫在眉睫的危险，没事儿了再搞日常的生活维护。两个模式本来应该是这么用的。可是如果一个人总是面临迫在眉睫的危险，他就没有时间搞维护了。</p><p>书中提到了一些减压方法，对我们读者来说可能都很熟悉了。一个办法是追求一点控制感，如果你对生活哪怕有一点点的掌控，你的压力也会大大减少。一个办法是寻求帮助，让别人给你分担一点压力。而且主动帮助别人也能减轻自己的压力 —— 我猜这可能是因为当我们主动帮别人的时候，我们就握有控制感。</p><p>我们专栏第一季还讲过，身体疾病不是对压力的反应，而是对“你对压力的反应”的反应。如果你把压力当成挑战而不是威胁，积极应对，你的端粒不会因此变短。不过根据今天说的模式论，长期处在压力状态下，不管是威胁还是挑战，应该都是不好的。</p><p>那怎么才能去除压力呢？萨波尔斯基的一个建议是如果你确实控制不了，那就换个角度看这个问题，别把它当成压力。比如这次考试确实考不好了，这怎么办呢？你可以换一个想法，告诉自己这并不是一次失败，而是一种提醒！</p><p>这有点像《万维钢·精英日课1：斯多葛派哲学的安心之法》中的，分清楚哪些是可控的，哪些是不可控的 —— 可控的话你就好好控制，不可控的就把它放下。</p><p>所有这些道理和方法，大约可以理解为，要有一个主动切换模式的意识。斑马总是活在当下，人总是想得太多。如果能常常意识到自己有权从压力模式中退出来，能自主切换到放松模式，对身体健康将会大大有利。</p><p>所以我们多么希望能像打游戏一样一键切换姿态！时刻对自己的状态有个强认知，能主动切换模式，这不就是高手的境界吗？</p><h2 id="学习心得"><a href="#学习心得" class="headerlink" title="学习心得"></a>学习心得</h2><h3 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h3><blockquote><ol><li><p>模式是指一个系统整体的状态。</p></li><li><p>自主神经系统可以分为压力模式和放松模式：压力模式由交感神经系统控制，使人紧张、积极；放松模式由副交感神经系统控制，使人放松、缓慢。</p></li><li><p>一般动物大部分时间都是处于放松模式，只有当面临生存危机的时候才会开启压力模式。</p></li><li><p>如果长期处在压力模式下，人会感到很疲惫，免疫系统不能完全发挥作用，从而带来各种疾病。</p></li><li><p>我们应该时刻对自己的状态有个强认知，能主动切换模式。</p></li></ol></blockquote><h3 id="延伸"><a href="#延伸" class="headerlink" title="延伸"></a>延伸</h3><h4 id="学会主动切换模式"><a href="#学会主动切换模式" class="headerlink" title="学会主动切换模式"></a>学会主动切换模式</h4><p>我确实有过这种体验。如果加班到深夜，睡前满脑子想着工作和接下来的计划，结果就翻来覆去半个小时，很难入睡。这时候起来喝小半杯温水，放点缓慢的音乐，在卧室里晃两圈，再到阳台上静一静，回来就能很快入睡。这就是主动切换到放松模式。</p><p>意识到真相，并能按照自己意愿做出选择，才是最重要的。</p><p>正如现在是北京时间凌晨3点32分。我该放松放松、去睡觉了。</p><p>课程发布时间：2018.3.14</p>]]></content>
      
      
      <categories>
          
          <category> 舞空术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 课程笔记 </tag>
            
            <tag> 万维钢·精英日课2 </tag>
            
            <tag> 高手的心法 </tag>
            
            <tag> 模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>知识图谱支持搜索</title>
      <link href="/hexo/knowledge-graph/support-search/"/>
      <url>/hexo/knowledge-graph/support-search/</url>
      
        <content type="html"><![CDATA[<h2 id="1-背景"><a href="#1-背景" class="headerlink" title="1 背景"></a>1 背景</h2><p>这些天对博客进行整体地梳理，发现文章里涉及的知识概念和联系竟意外的多。仅仅十余篇文章，却在知识图谱中产生了 300 余个节点、400 余条连线 —— 这已经是一个具有相当体量的知识体系。</p><p><img src="http://q4kbn37nl.bkt.clouddn.com/knowledge-graph_20200207190230.png?e=1581076982&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:fsfA_8RGVNzuzJ_W44wf2B61jW4" alt="《龙珠雷达》2020.2.7"></p><p>在为数众多的节点中，想要凭借肉眼寻找到自己关注的节点实属不易。而且关系紧密的节点可能发生重叠，更为我们的寻找带来困难。</p><p>这时就需要知识图谱具备搜索的功能，以提高图谱的使用效率。</p><h2 id="2-功能描述"><a href="#2-功能描述" class="headerlink" title="2 功能描述"></a>2 功能描述</h2><p>知识图谱搜索的具体功能如下：</p><blockquote><ol><li><p>在知识图谱的展示区域附近，提供一个搜索框，供用户输入关键字进行模糊搜索。</p></li><li><p>用户在搜索框中输入关键字时，使用一个下拉列表展示包含该关键字的节点名称列表，可以点击列表项改变搜索框中的内容；若没有匹配任何节点，则显示“无结果”。</p></li><li><p>同时，系统将包含搜索内容的节点高亮显示，其余节点做一定程度的透明化处理。</p></li><li><p>此外，用户还能通过节点的关联数（出、入度之和）对节点总量进行筛选。</p></li></ol></blockquote><h2 id="3-技术设计"><a href="#3-技术设计" class="headerlink" title="3 技术设计"></a>3 技术设计</h2><p>我在 ECharts 的<a href="https://www.echartsjs.com/zh/tutorial.html#5%20%E5%88%86%E9%92%9F%E4%B8%8A%E6%89%8B%20ECharts" target="_blank" rel="noopener">官方文档</a>进行了一番搜索，并没有找到它有自带相关的搜素工具或者插件 —— 通常图表中的数据是通过查询服务端而返回的，未提供客户端的搜素功能也合理 —— 这也是我专门写下这篇文章的原因，如果简单的调用插件就能实现，我也没必要再花一章的工夫来记录。</p><p>这里只有自己来实现上述的搜素功能了。</p><h3 id="3-1-搜索工具栏布局"><a href="#3-1-搜索工具栏布局" class="headerlink" title="3.1 搜索工具栏布局"></a>3.1 搜索工具栏布局</h3><p>根据我们的构想，需要在关系图的附近提供搜索工具栏。</p><p>具体做法是，在原关系图 <code>&lt;div&gt;</code> 标签外包一层容器，再在容器中放置我们的搜索工具。如此一来，DOM 结构大概会变成下面这样：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>graph-container<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">520</span>px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token comment" spellcheck="true">&lt;!-- 关系图容器 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>graph<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span> <span class="token comment" spellcheck="true">&lt;!-- 关系图 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-tool<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token comment" spellcheck="true">&lt;!-- 搜索工具 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>关键字：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>keyword<span class="token punctuation">"</span></span> <span class="token attr-name">autocomplete</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>off<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>icon-right<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token comment" spellcheck="true">&lt;!-- 关键字输入框 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fas fa-search<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span> <span class="token comment" spellcheck="true">&lt;!-- 放大镜图标 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>result-list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>请输入关键字...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span> <span class="token comment" spellcheck="true">&lt;!-- 搜索结果列表 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>关联数：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>min-degree<span class="token punctuation">"</span></span> <span class="token attr-name">autocomplete</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>off<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token comment" spellcheck="true">&lt;!-- 关联数最小值 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>divider<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>≤ N &lt;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>max-degree<span class="token punctuation">"</span></span> <span class="token attr-name">autocomplete</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>off<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token comment" spellcheck="true">&lt;!-- 关联数最大值 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>搜索工具之所以使用 <code>&lt;table&gt;</code> 标签，是因为它的对齐方式比较方便，用类似“田”字格的方式就能组织两个搜索条件的摆放。</p><p>接下来，我们只需要给 <code>.graph-container table.search-tool</code> 设置绝对定位，便能使其位于容器的右上角。</p><pre class="line-numbers language-css"><code class="language-css"><span class="token selector"><span class="token class">.graph-container</span> </span><span class="token punctuation">{</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.graph-container</span> table<span class="token class">.search-tool</span> </span><span class="token punctuation">{</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以及给结果列表 <code>.graph-container table.search-tool .result-list</code> 设置绝对定位，使其位于关键字输入框下方。</p><pre class="line-numbers language-css"><code class="language-css"><span class="token selector"><span class="token class">.graph-container</span> table<span class="token class">.search-tool</span> <span class="token class">.result-list</span> </span><span class="token punctuation">{</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span>  <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">min-width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>  <span class="token property">max-height</span><span class="token punctuation">:</span> <span class="token number">240</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如此便能实现 DOM 元素在页面上的布局。</p><h3 id="3-2-搜索过程"><a href="#3-2-搜索过程" class="headerlink" title="3.2 搜索过程"></a>3.2 搜索过程</h3><p>页面首次加载时，会在内存中保存一份生成的节点数据。大概会是下面这样：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 存放数据</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 页面加载完成</span>  <span class="token keyword">var</span> myChart <span class="token operator">=</span> echarts<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'graph'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 初始化图表</span>  <span class="token function">loadData</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> nodes <span class="token operator">=</span> response<span class="token punctuation">.</span>nodes<span class="token punctuation">;</span>    <span class="token operator">...</span>    <span class="token comment" spellcheck="true">// 生成节点信息</span>    data <span class="token operator">=</span> nodes<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">...</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">search</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 使用 data 作为数据集</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>用户可以输入关键字、关联数最小值和关联数最大值进行搜索。此时，被搜索的数据集就是这份数据 <code>data</code>。</p><p>在 <code>search()</code> 方法的内部，为了防止对 <code>data</code> 造成更改，而引起不必要的麻烦，需要先对其做一份深拷贝。接着对这份拷贝数据，使用 <code>Array.filter()</code> 方法过滤“关联数”不满足要求的数据；然后使用 <code>Array.map()</code> 方法，匹配其中包含“关键字”的节点高亮展示，其余节点则做一定程度的透明化处理。</p><p>最后我们将搜索结果整合进新的 <code>option</code> 中，再通过 ECharts API 提供的 <code>echartsInstance.setOption()</code> 方法重绘图表，以达到更新搜索结果的目的。</p><p>同时，关键字输入的过程中会弹出下拉列表，展示匹配到的节点名称，可供用户选择。</p><h3 id="3-3-事件监听"><a href="#3-3-事件监听" class="headerlink" title="3.3 事件监听"></a>3.3 事件监听</h3><p>为了追求高实时性的用户体验，搜索工具栏不设置“搜索”按钮，而通过对输入框的事件监听触发 <code>search()</code> 搜索方法。</p><p>jQuery 提供的 <code>on()</code> 方法就足以实现了，对于关键字和关联数的输入，我们可以通过 <code>$(...).on(&#39;keydown&#39;)</code> 的方式为其绑定监听事件。这里不监听 <code>change</code> 事件，而监听 <code>keydown</code> 事件，是因为 <code>change</code> 事件在输入框失去焦点的时候才会触发，体验上不如监听 <code>keydown</code> 流畅。</p><p>但监听 <code>keydown</code> 的同时也会带来新的问题。例如在关键字输入的次数会很多，尤其是当我们需要输入中文时，<code>keydown</code> 会先监听到一部分的拼音字母。这个过程会引起频繁地搜索，这些搜索很可能是没有意义的，且在节点数量较多的情况下，可能引起卡顿。</p><p>你也许想到，为什么不选择监听 <code>keyup</code> 事件呢？原因是考虑到长按（比如一直按着 <code>backspace ←</code> / <code>delete</code> 按键进行删除）的过程中，<code>keyup</code> 事件不会触发，中途还是会发生不必要的搜索。</p><p>这里使用了事件延迟处理的小技巧。以关键字输入框 <code>&lt;input name=&quot;keyword&quot;&gt;</code> 的监听为例：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token operator">...</span>  <span class="token keyword">var</span> timer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.graph-container .search-tool input[name="keyword"]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'keydown'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>timer<span class="token punctuation">)</span> window<span class="token punctuation">.</span><span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 清除延时</span>    timer <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 延时处理</span>      <span class="token comment" spellcheck="true">// search()</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 延时 200 毫秒</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面的例子中，用户在持续输入时，如果停顿的时间不超过 200 毫秒，则不会触发搜索。尽管有 200 毫秒的短暂延时才会进行搜索，但这在很大程度上减少了无意义搜索的占比。</p><h3 id="3-4-下拉列表"><a href="#3-4-下拉列表" class="headerlink" title="3.4 下拉列表"></a>3.4 下拉列表</h3><p>当关键字输入框被点击而获得焦点时，会展示一个下拉列表；而点击其余空白处时（除了关键字输入框和下拉列表），会再次将这个下拉列表隐藏。这也是个很典型的事件处理的例子 ——</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token operator">...</span>  <span class="token comment" spellcheck="true">// 展示搜索结果列表</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.graph-container .search-tool input[name="keyword"]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> $<span class="token keyword">this</span> <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> $resultList <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.graph-container .search-tool .result-list'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    $resultList<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 展示结果列表</span>    <span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 给 document 绑定点击事件</span>      <span class="token keyword">var</span> $target <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>$target<span class="token punctuation">.</span><span class="token function">closest</span><span class="token punctuation">(</span>$resultList<span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">||</span> $target<span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span>$<span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 如果点击的元素是结果列表或者关键字输入框</span>        event<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 阻止事件冒泡</span>      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        $resultList<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 隐藏结果列表</span>        <span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unbind</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 解除点击事件</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>实现这个功能时，需要判断事件的来源，并合理地阻止事件继续冒泡。</p><h2 id="4-代码实现"><a href="#4-代码实现" class="headerlink" title="4 代码实现"></a>4 代码实现</h2><p>设计固然是可行的，但在实现的过程中总会遇到更多的阻力，比如框架本身带来的限制、样式的干扰，还有一些细节上的处理，需要谨慎思考、反复雕琢。</p><p>这些过程很难一点一点全都细说，得自己动手做一遍才能体会。</p><p>以下是完整的源代码和相关注释：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>graph-container<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">520</span>px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token comment" spellcheck="true">&lt;!-- 关系图容器 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>graph<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span> <span class="token comment" spellcheck="true">&lt;!-- 关系图 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>search-tool<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token comment" spellcheck="true">&lt;!-- 搜索工具 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>关键字：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>keyword<span class="token punctuation">"</span></span> <span class="token attr-name">autocomplete</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>off<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>icon-right<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token comment" spellcheck="true">&lt;!-- 关键字输入框 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fas fa-search<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span> <span class="token comment" spellcheck="true">&lt;!-- 放大镜图标 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>result-list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>请输入关键字...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span> <span class="token comment" spellcheck="true">&lt;!-- 搜索结果列表 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>关联数：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>min-degree<span class="token punctuation">"</span></span> <span class="token attr-name">autocomplete</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>off<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token comment" spellcheck="true">&lt;!-- 关联数最小值 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>divider<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>≤ N ≤<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>number<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>max-degree<span class="token punctuation">"</span></span> <span class="token attr-name">autocomplete</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>off<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token comment" spellcheck="true">&lt;!-- 关联数最大值 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/libs/echarts/echarts.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!-- 引入 ECharts 库 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"><span class="token keyword">var</span> DEGREE_TO_SHOW_NODE <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 节点的度大于等于这个数值才展示</span>    DEGREE_TO_SHOW_LABEL <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 节点的度大于等于这个数值才展示标签</span><span class="token keyword">var</span> ACTIVE_COLOR <span class="token operator">=</span> <span class="token string">'#E88C30'</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// '#E88C30'</span><span class="token keyword">var</span> MIN_NODE_SIZE <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 节点大小下限</span>    MAX_NODE_SIZE <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 节点大小上限</span>    NODE_SIZE_INCREASE_STEP <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 节点大小增长步长</span><span class="token keyword">var</span> DEFAULT_MIN_OPACITY <span class="token operator">=</span> <span class="token number">0.3</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 透明度下限</span>    DEFAULT_MAX_OPACITY <span class="token operator">=</span> <span class="token number">0.96</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 透明度上限</span>    DEFAULT_MAX_OPACITY_VALUE <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 大于等于该值能达到透明度上限</span>    OPACITY_INDEX <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 透明度指数，该值越大，透明的节点越多</span><span class="token keyword">var</span> SEARCH_DELAY <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 搜索延时，单位毫秒</span>    MATCHED_NODE_COLOR <span class="token operator">=</span> <span class="token string">'#FF2A68'</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 搜索结果中匹配节点的颜色</span>    MISMATCHED_MAX_OPACITY <span class="token operator">=</span> <span class="token number">0.5</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 搜索结果中不匹配节点的透明度上限</span><span class="token keyword">function</span> <span class="token function">loadData</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 数据加载方法</span>  $<span class="token punctuation">.</span><span class="token function">when</span><span class="token punctuation">(</span>$<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'/data/knowledge-base/nodes.json'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> $<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'/data/knowledge-base/lines.json'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>nodesResponse<span class="token punctuation">,</span> linesResponse<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">{</span> nodes<span class="token punctuation">:</span> nodesResponse<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> lines<span class="token punctuation">:</span> linesResponse<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">getNodeSize</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 计算节点大小</span>  <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>MIN_NODE_SIZE <span class="token operator">+</span> <span class="token punctuation">(</span>value <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> NODE_SIZE_INCREASE_STEP<span class="token punctuation">,</span> MAX_NODE_SIZE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">getNodeOpacity</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> maxOpacity<span class="token punctuation">,</span> minOpacity<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 计算节点透明度</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>maxOpacity <span class="token operator">===</span> undefined<span class="token punctuation">)</span> maxOpacity <span class="token operator">=</span> DEFAULT_MAX_OPACITY<span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>minOpacity <span class="token operator">===</span> undefined<span class="token punctuation">)</span> minOpacity <span class="token operator">=</span> DEFAULT_MIN_OPACITY<span class="token punctuation">;</span>  <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>minOpacity <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>value <span class="token operator">/</span> DEFAULT_MAX_OPACITY_VALUE<span class="token punctuation">,</span> OPACITY_INDEX<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> minOpacity<span class="token punctuation">)</span><span class="token punctuation">,</span> maxOpacity<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">var</span> myChart<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 图表实例</span>    data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 存放初始数据</span>    option<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 图表配置信息</span><span class="token keyword">function</span> <span class="token function">search</span><span class="token punctuation">(</span>keyword<span class="token punctuation">,</span> min<span class="token punctuation">,</span> max<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 搜索</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>myChart <span class="token operator">||</span> <span class="token operator">!</span>option<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>keyword<span class="token punctuation">)</span> keyword <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.graph-container .search-tool input[name="keyword"]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 获取关键字</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>min<span class="token punctuation">)</span> min <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.graph-container .search-tool input[name="min-degree"]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 获取关联数最小值</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>max<span class="token punctuation">)</span> max <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.graph-container .search-tool input[name="max-degree"]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 获取关联数最大值</span>  <span class="token keyword">var</span> resultData <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 深拷贝，不改变 data 中的数据</span>  resultData <span class="token operator">=</span> resultData<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 筛选满足关联数的节点</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span>min <span class="token operator">===</span> <span class="token string">''</span> <span class="token operator">||</span> item<span class="token punctuation">.</span>value <span class="token operator">>=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>min<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>max <span class="token operator">===</span> <span class="token string">''</span> <span class="token operator">||</span> item<span class="token punctuation">.</span>value <span class="token operator">&lt;=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>max<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> $resultList <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.graph-container .search-tool .result-list'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>keyword<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 关键字不为空时进行匹配</span>    <span class="token keyword">var</span> results <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 列表结果</span>    resultData <span class="token operator">=</span> resultData<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 重绘搜索结果数据</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>keyword<span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 匹配</span>        results<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 添加结果至列表</span>        <span class="token keyword">return</span> $<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> <span class="token punctuation">{</span>          itemStyle<span class="token punctuation">:</span> <span class="token punctuation">{</span>            color<span class="token punctuation">:</span> MATCHED_NODE_COLOR<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 设置节点为高亮颜色</span>            opacity<span class="token punctuation">:</span> DEFAULT_MAX_OPACITY <span class="token comment" spellcheck="true">// 设置透明度为最大</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>          label<span class="token punctuation">:</span> <span class="token punctuation">{</span>            show<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 显示标签</span>            color<span class="token punctuation">:</span> MATCHED_NODE_COLOR <span class="token comment" spellcheck="true">// 设置标签为高亮颜色</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 不匹配</span>        <span class="token keyword">return</span> $<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> <span class="token punctuation">{</span>          itemStyle<span class="token punctuation">:</span> <span class="token punctuation">{</span>            opacity<span class="token punctuation">:</span> <span class="token function">getNodeOpacity</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>value<span class="token punctuation">,</span> MISMATCHED_MAX_OPACITY<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 透明化处理</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>results<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 如果有结果</span>      $resultList<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 先将提示信息清空</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> results<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 生成结果列表</span>        $resultList<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'&lt;div>'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">'item'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span>results<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 没有结果</span>      $resultList<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">'很遗憾，没有找到结果...'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 关键字为空时</span>    $resultList<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">'请输入关键字...'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  option<span class="token punctuation">.</span>series<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>data <span class="token operator">=</span> resultData<span class="token punctuation">;</span>  myChart<span class="token punctuation">.</span><span class="token function">setOption</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  myChart <span class="token operator">=</span> echarts<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'graph'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  myChart<span class="token punctuation">.</span><span class="token function">showLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">loadData</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> nodes <span class="token operator">=</span> response<span class="token punctuation">.</span>nodes <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 节点信息</span>    <span class="token keyword">var</span> lines <span class="token operator">=</span> response<span class="token punctuation">.</span>lines <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 连线信息</span>    <span class="token comment" spellcheck="true">// 生成分类信息</span>    <span class="token keyword">var</span> categories <span class="token operator">=</span> nodes<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 过滤重复的分类</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> index<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>category <span class="token operator">===</span> nodes<span class="token punctuation">.</span>category<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 前面出现过相同的名称</span>      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token punctuation">{</span> name<span class="token punctuation">:</span> item<span class="token punctuation">.</span>category <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 按名称排序</span>      <span class="token keyword">return</span> a<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">localeCompare</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    categories<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">'其它'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 无分类的节点被归类为“其它”</span>    <span class="token comment" spellcheck="true">// 生成图例信息</span>    <span class="token keyword">var</span> legends <span class="token operator">=</span> categories<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> item<span class="token punctuation">.</span>name<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 生成节点信息</span>    data <span class="token operator">=</span> nodes<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 过滤名称重复的节点</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> index<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>name <span class="token operator">===</span> nodes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 前面出现过相同的名称</span>      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">var</span> name <span class="token operator">=</span> item<span class="token punctuation">.</span>name<span class="token punctuation">;</span>      <span class="token keyword">var</span> value <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 节点的数值</span>      lines<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 节点的出度、入度之和</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">===</span> line<span class="token punctuation">.</span>subject <span class="token operator">||</span> name <span class="token operator">===</span> line<span class="token punctuation">.</span>object<span class="token punctuation">)</span> value<span class="token operator">++</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> value <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 至少是 1</span>      <span class="token keyword">var</span> categoryIndex <span class="token operator">=</span> legends<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 分类下标，默认最大值，对应“其它”</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> legends<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>category <span class="token operator">===</span> legends<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          categoryIndex <span class="token operator">=</span> i<span class="token punctuation">;</span>          <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>      <span class="token keyword">return</span> <span class="token punctuation">{</span>        name<span class="token punctuation">:</span> name<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 节点名称</span>        value<span class="token punctuation">:</span> value<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 节点数值</span>        category<span class="token punctuation">:</span> categoryIndex<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 节点分类</span>        symbolSize<span class="token punctuation">:</span> <span class="token function">getNodeSize</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 节点大小</span>        itemStyle<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 图形样式</span>          opacity<span class="token punctuation">:</span> <span class="token function">getNodeOpacity</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 透明度</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        label<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 标签</span>          show<span class="token punctuation">:</span> value <span class="token operator">>=</span> DEGREE_TO_SHOW_LABEL <span class="token comment" spellcheck="true">// 数值足够大时展示</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        link<span class="token punctuation">:</span> item<span class="token punctuation">.</span>link<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 链接，点击事件时获取</span>        date<span class="token punctuation">:</span> item<span class="token punctuation">.</span>date      <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> item<span class="token punctuation">.</span>value <span class="token operator">>=</span> DEGREE_TO_SHOW_NODE<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 生成连线信息</span>    <span class="token keyword">var</span> links <span class="token operator">=</span> lines<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">return</span> <span class="token punctuation">{</span>        source<span class="token punctuation">:</span> item<span class="token punctuation">.</span>subject<span class="token punctuation">,</span>        target<span class="token punctuation">:</span> item<span class="token punctuation">.</span>object<span class="token punctuation">,</span>        value<span class="token punctuation">:</span> item<span class="token punctuation">.</span>predicate<span class="token punctuation">,</span>        lineStyle<span class="token punctuation">:</span> <span class="token punctuation">{</span>          color<span class="token punctuation">:</span> item<span class="token punctuation">.</span>link <span class="token operator">?</span> ACTIVE_COLOR <span class="token punctuation">:</span> <span class="token keyword">null</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        link<span class="token punctuation">:</span> item<span class="token punctuation">.</span>link<span class="token punctuation">,</span>        date<span class="token punctuation">:</span> item<span class="token punctuation">.</span>date      <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    option <span class="token operator">=</span> <span class="token punctuation">{</span>      legend<span class="token punctuation">:</span> <span class="token punctuation">{</span>        type<span class="token punctuation">:</span> <span class="token string">'scroll'</span><span class="token punctuation">,</span>        left<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>        orient<span class="token punctuation">:</span> <span class="token string">'vertical'</span><span class="token punctuation">,</span>        data<span class="token punctuation">:</span> legends      <span class="token punctuation">}</span><span class="token punctuation">,</span>      tooltip<span class="token punctuation">:</span> <span class="token punctuation">{</span>        position<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        formatter<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>params<span class="token punctuation">.</span>dataType <span class="token operator">===</span> <span class="token string">'node'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            str <span class="token operator">=</span> params<span class="token punctuation">.</span>data<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">'&lt;br/>关联 '</span> <span class="token operator">+</span> params<span class="token punctuation">.</span>data<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token string">' 个节点'</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>params<span class="token punctuation">.</span>dataType <span class="token operator">===</span> <span class="token string">'edge'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            str <span class="token operator">=</span> params<span class="token punctuation">.</span>data<span class="token punctuation">.</span>source <span class="token operator">+</span> <span class="token string">' '</span> <span class="token operator">+</span> params<span class="token punctuation">.</span>data<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token string">' '</span> <span class="token operator">+</span> params<span class="token punctuation">.</span>data<span class="token punctuation">.</span>target<span class="token punctuation">;</span>          <span class="token punctuation">}</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>params<span class="token punctuation">.</span>data<span class="token punctuation">.</span>link<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> str <span class="token operator">+</span><span class="token operator">=</span> <span class="token string">'&lt;br/>'</span><span class="token punctuation">;</span>            str <span class="token operator">+</span><span class="token operator">=</span> <span class="token string">'点击查看详情'</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>          <span class="token keyword">return</span> str<span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      series<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>        type<span class="token punctuation">:</span> <span class="token string">'graph'</span><span class="token punctuation">,</span>        layout<span class="token punctuation">:</span> <span class="token string">'force'</span><span class="token punctuation">,</span>        force<span class="token punctuation">:</span> <span class="token punctuation">{</span>          edgeLength<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">,</span>          repulsion<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span>          gravity<span class="token punctuation">:</span> <span class="token number">0.5</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        roam<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        draggable<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        focusNodeAdjacency<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// edgeSymbol: ['none', 'arrow'],</span>        itemStyle<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 图形样式</span>          borderColor<span class="token punctuation">:</span> <span class="token string">'#fff'</span><span class="token punctuation">,</span>          borderWidth<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>          shadowBlur<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>          shadowColor<span class="token punctuation">:</span> <span class="token string">'rgba(0, 0, 0, 0.3)'</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        label<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 图形上的文本标签</span>          position<span class="token punctuation">:</span> <span class="token string">'right'</span><span class="token punctuation">,</span>          distance<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>          formatter<span class="token punctuation">:</span> <span class="token string">'{b}'</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        edgeLabel<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 关系边上的文本标签</span>          formatter<span class="token punctuation">:</span> <span class="token string">'{c}'</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        emphasis<span class="token punctuation">:</span> <span class="token punctuation">{</span>          lineStyle<span class="token punctuation">:</span> <span class="token punctuation">{</span>            width<span class="token punctuation">:</span> <span class="token number">4</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        categories<span class="token punctuation">:</span> categories<span class="token punctuation">,</span>        data<span class="token punctuation">:</span> data<span class="token punctuation">,</span>        links<span class="token punctuation">:</span> links        <span class="token comment" spellcheck="true">// animation: false</span>      <span class="token punctuation">}</span><span class="token punctuation">]</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span>    myChart<span class="token punctuation">.</span><span class="token function">setOption</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">;</span>    myChart<span class="token punctuation">.</span><span class="token function">hideLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    myChart<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 绑定点击事件，打开新的标签页跳转至节点 link 指向的地址</span>      <span class="token keyword">var</span> data <span class="token operator">=</span> event<span class="token punctuation">.</span>data <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>      <span class="token keyword">var</span> link <span class="token operator">=</span> data<span class="token punctuation">.</span>link<span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>link<span class="token punctuation">)</span> <span class="token punctuation">{</span>        window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>link<span class="token punctuation">,</span> <span class="token string">'\_blank'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 页面自动滚动至合适位置</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'html, body'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    scrollTop<span class="token punctuation">:</span> <span class="token number">250</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 按关键字搜索</span>  <span class="token keyword">var</span> timer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.graph-container .search-tool input[name="keyword"]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'keydown'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.graph-container .search-tool .result-list'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">'拼命搜索中ing...'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>timer<span class="token punctuation">)</span> window<span class="token punctuation">.</span><span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 清空延时器</span>    timer <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">search</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span> SEARCH_DELAY<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 延时搜索，防止输入过程卡顿</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 展示搜索结果列表</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.graph-container .search-tool input[name="keyword"]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> $<span class="token keyword">this</span> <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> $resultList <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.graph-container .search-tool .result-list'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    $resultList<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 展示结果列表</span>    <span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 给 document 绑定点击事件</span>      <span class="token keyword">var</span> $target <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>$target<span class="token punctuation">.</span><span class="token function">closest</span><span class="token punctuation">(</span>$resultList<span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">||</span> $target<span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span>$<span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 如果点击的元素是结果列表或者关键字输入框</span>        event<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 阻止事件冒泡</span>      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        $resultList<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 隐藏结果列表</span>        <span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unbind</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 解除点击事件</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 查询结果列表项关联关键字</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.graph-container .search-tool .result-list'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token string">'.item'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> keyword <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 获取关键字</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.graph-container .search-tool input[name="keyword"]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span>keyword<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 将关键字输入框中的内容设置为该关键字</span>    <span class="token function">search</span><span class="token punctuation">(</span>keyword<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 按关键字搜索</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 隐藏结果列表</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 按关联数筛选</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.graph-container .search-tool input[name="min-degree"]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'keydown'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 最小值</span>    <span class="token function">search</span><span class="token punctuation">(</span>undefined<span class="token punctuation">,</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.graph-container .search-tool input[name="max-degree"]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'keydown'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 最大值</span>    <span class="token function">search</span><span class="token punctuation">(</span>undefined<span class="token punctuation">,</span> undefined<span class="token punctuation">,</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css"><span class="token selector"><span class="token class">.graph-container</span> </span><span class="token punctuation">{</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token id">#articleContent</span> <span class="token class">.graph-container</span> table<span class="token class">.search-tool</span>,<span class="token id">#articleContent</span> <span class="token class">.graph-container</span> table<span class="token class">.search-tool</span> tr,<span class="token id">#articleContent</span> <span class="token class">.graph-container</span> table<span class="token class">.search-tool</span> tr th,<span class="token id">#articleContent</span> <span class="token class">.graph-container</span> table<span class="token class">.search-tool</span> tr td </span><span class="token punctuation">{</span> <span class="token comment" spellcheck="true">/*覆盖 matery.css 中的样式*/</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token important">!important</span><span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token id">#articleContent</span> <span class="token class">.graph-container</span> table<span class="token class">.search-tool</span> </span><span class="token punctuation">{</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token id">#articleContent</span> <span class="token class">.graph-container</span> table<span class="token class">.search-tool</span> th,<span class="token id">#articleContent</span> <span class="token class">.graph-container</span> table<span class="token class">.search-tool</span> td </span><span class="token punctuation">{</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">3</span>px <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">14</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token id">#articleContent</span> <span class="token class">.graph-container</span> table<span class="token class">.search-tool</span> th </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">80</span>px<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>  <span class="token property">font-weight</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token id">#articleContent</span> <span class="token class">.graph-container</span> table<span class="token class">.search-tool</span> tr td input </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">120</span>px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#aaa</span><span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">3</span>px<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">3</span>px<span class="token punctuation">;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">12</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token id">#articleContent</span> <span class="token class">.graph-container</span> table<span class="token class">.search-tool</span> tr td input<span class="token pseudo-class">:focus</span> </span><span class="token punctuation">{</span> <span class="token comment" spellcheck="true">/*覆盖 materialize.min.css 样式*/</span>  <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#aaa</span><span class="token punctuation">;</span>  <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token id">#articleContent</span> <span class="token class">.graph-container</span> table<span class="token class">.search-tool</span> tr td input<span class="token class">.icon-right</span> </span><span class="token punctuation">{</span>  <span class="token property">padding-right</span><span class="token punctuation">:</span> <span class="token number">18</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token id">#articleContent</span> <span class="token class">.graph-container</span> table<span class="token class">.search-tool</span> tr td input<span class="token attribute">[type="number"]</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">36</span>px<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token id">#articleContent</span> <span class="token class">.graph-container</span> table<span class="token class">.search-tool</span> tr td input<span class="token attribute">[type="number"]</span><span class="token pseudo-element">::-webkit-inner-spin-button</span>,<span class="token id">#articleContent</span> <span class="token class">.graph-container</span> table<span class="token class">.search-tool</span> tr td input<span class="token attribute">[type="number"]</span><span class="token pseudo-element">::-webkit-outer-spin-button</span> </span><span class="token punctuation">{</span> <span class="token comment" spellcheck="true">/*覆盖原生样式*/</span>  <span class="token property">-webkit-appearance</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token id">#articleContent</span> <span class="token class">.graph-container</span> table<span class="token class">.search-tool</span> tr td span<span class="token class">.divider</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">40</span>px<span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> inline-table<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">12</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token id">#articleContent</span> <span class="token class">.graph-container</span> table<span class="token class">.search-tool</span> tr td <span class="token class">.fas</span> </span><span class="token punctuation">{</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">9</span>px<span class="token punctuation">;</span>  <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">7</span>px<span class="token punctuation">;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">12</span>px<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#aaa</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token id">#articleContent</span> <span class="token class">.graph-container</span> table<span class="token class">.search-tool</span> tr td <span class="token class">.result-list</span> </span><span class="token punctuation">{</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span>  <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">min-width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>  <span class="token property">max-height</span><span class="token punctuation">:</span> <span class="token number">240</span>px<span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>  <span class="token property">overflow-y</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">6</span>px<span class="token punctuation">;</span>  <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">0</span> <span class="token number">5</span>px <span class="token hexcode">#aaa</span><span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">10</span>px <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#888</span><span class="token punctuation">;</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token number">24</span>px<span class="token punctuation">;</span>  <span class="token property">text-indent</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token id">#articleContent</span> <span class="token class">.graph-container</span> table<span class="token class">.search-tool</span> tr td <span class="token class">.result-list</span> <span class="token class">.item</span> </span><span class="token punctuation">{</span>  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">10</span>px<span class="token punctuation">;</span>  <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token id">#articleContent</span> <span class="token class">.graph-container</span> table<span class="token class">.search-tool</span> tr td <span class="token class">.result-list</span> <span class="token class">.item</span><span class="token pseudo-class">:hover</span> </span><span class="token punctuation">{</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#fefede</span><span class="token punctuation">;</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>相较于<a href="/hexo/knowledge-graph/build/">最初版本</a>，代码量确实多出不少。这里边也做了些重构，将一些公共方法抽离出来，同时将一些配置信息单独定义和管理，在逻辑性和可读性上是不输给上个版本的，但难度也不会减。</p><p>来看看具体的效果：</p><p><img src="http://q4kbn37nl.bkt.clouddn.com/knowledge-graph_20200208040546.png?e=1581109587&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:xmduc8ClE_8Nu3aOH-UTGjxlLLg" alt="关键字搜索效果"></p><p>支持按关键字进行搜索，并且匹配的节点会被高亮显示，其余节点则更加透明。</p><p>另外，按关联数的搜索过滤了一部分不符合要求的节点，节点的总数也会随之减少：</p><p><img src="http://q4kbn37nl.bkt.clouddn.com/knowledge-graph_20200208040834.png?e=1581109779&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:Hv6nNDcFovNjLk1SEE_OzMo5unI" alt="关联数搜索效果"></p><p>这样一来，对知识图谱的日常管理会更加方便。</p><p>新版支持搜索的知识图谱已上线，速速前去体验吧~</p><h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><p>知识图谱<a href="/tools/knowledge-graph/">传送门</a></p><p>上一篇：<a href="/hexo/knowledge-graph/build/">《构建知识图谱》</a></p>]]></content>
      
      
      <categories>
          
          <category> 精神时光屋 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 知识 </tag>
            
            <tag> 图谱 </tag>
            
            <tag> 优化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>构建知识图谱</title>
      <link href="/hexo/knowledge-graph/build/"/>
      <url>/hexo/knowledge-graph/build/</url>
      
        <content type="html"><![CDATA[<h2 id="1-背景"><a href="#1-背景" class="headerlink" title="1 背景"></a>1 背景</h2><p>本博客除了分享，它的重要作用是 —— <em>学习</em>。</p><p>我们博客的名字之所以取材于日本动漫《龙珠Z》中的场景“精神时光屋”，就是因为这是一个跨时空的修炼圣地，允许人们忘我地投入进去，使修炼效率得以上百倍地提高。</p><p><img src="http://q4kbn37nl.bkt.clouddn.com/jing-shen-shi-guang-wu.jpg?e=1580247922&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:Z8FZdNQ7yKUvPUgUIBWdd7_Sadg" alt="精神时光屋"></p><p>学习是有法可依的。《万维钢·精英日课2：正确的学习方法只有一种风格》这篇课程告诉我们，什么样的学习方法才是“<a href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-2/20180607_zheng-que-de-xue-xi-fang-fa-zhi-you-yi-zhong-feng-ge/#you-xiao-de-fang-fa">有效的学习方法</a>”，其中提到的“把新学到的知识和以前的知识建立连接”这种做法，就是我认为最重要的。《万维钢·精英日课2：特别放松丨给高手的学习方法建议》中提到了一种高强度的读书方法，叫做“<a href="/tools/knowledge-handbook/#qiang-li-yan-du">强力研读</a>”。它也提出，读书笔记中应该<a href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-2/20171110_te-bie-fang-song-gei-gao-shou-de-xue-xi-fang-fa-jian-yi/#fa-xian-lian-xi">包含书与书之间的联系</a>，同时使用的记录工具要<a href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-2/20171110_te-bie-fang-song-gei-gao-shou-de-xue-xi-fang-fa-jian-yi/#chuang-zao">便于创造</a>。创造，就是<a href="/tools/knowledge-formula/#chuang-zao">想法的连接</a>。</p><p>所谓“连接”，就是新旧知识之间的联系。它能巩固我们对知识的认知，也能催生出具有创造性的想法。</p><p>此前我一直有一个习惯，就是在写作的过程中，利用 <code>超链接</code> 将有联系的知识点关联起来。但这只是一个跳转的途径。</p><p>我仍然迫切需要一个可视化的界面，能看到这些“连接”的全貌。这也给了我<a href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-2/20180607_zheng-que-de-xue-xi-fang-fa-zhi-you-yi-zhong-feng-ge/#li-yong-bo-ke-xue-xi">灵感</a> —— 构建一份自己的知识图谱。</p><h2 id="2-预备知识"><a href="#2-预备知识" class="headerlink" title="2 预备知识"></a>2 预备知识</h2><p>要构建知识图谱，我们首先得知道它是什么，以及它能给我们带来什么。</p><h3 id="2-1-信息与知识"><a href="#2-1-信息与知识" class="headerlink" title="2.1 信息与知识"></a>2.1 信息与知识</h3><p>如果你看过网络综艺《奇葩说》第五季第 17 期：你是否支持全人类一秒知识共享，你也许会对辩手陈铭的辩论印象深刻。他在节目中区分了信息和知识两个概念：</p><blockquote><p>信息是指外部的客观事实。举例：这里有一瓶水，它现在是 7℃。</p><p>知识是对外部客观规律的归纳和总结。举例：水在 0℃ 及以下会结冰。</p></blockquote><p>“客观规律的归纳和总结” 似乎有些难以实现。Quora 上有另一种经典的解读，区分“信息”和“知识”。</p><p><img src="http://q4kbn37nl.bkt.clouddn.com/information-and-knowledge.jpg?e=1580631425&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:xGamemhPRMgNiC1aC00CPOF-ZVQ" alt="信息和知识"></p><p>有了这样的参考，我们就很容易理解，在信息的基础上，建立实体之间的联系，就能行成 “知识”。</p><h3 id="2-2-知识图谱"><a href="#2-2-知识图谱" class="headerlink" title="2.2 知识图谱"></a>2.2 知识图谱</h3><p><a href="/tools/knowledge-handbook/#zhi-shi-tu-pu">知识图谱（Knowledge Graph）</a>是显示知识发展进程与结构关系的一系列各种不同的图形，用可视化技术描述知识资源及其载体，有利于构建、绘制、显示、分析和挖掘知识及它们之间的相互联系。它的本质是揭示实体之间关系的语义网络。</p><p>这个概念最先由 Google 在2012年5月17日提出，最初是为了将传统的基于关键字的（keyword-based）搜索模型向基于语义的搜索升级，增强用户搜索质量和体验。</p><p>知识图谱的主要目的是用来描述知识本身以及他们之间的关联关系。</p><div class="anchor" id="zhi-shi-de-biao-shi-fang-shi"></div><h3 id="2-3-知识的表式方式"><a href="#2-3-知识的表式方式" class="headerlink" title="2.3 知识的表式方式"></a>2.3 知识的表式方式</h3><p>知识图谱是由一条条知识组成，比如 ——</p><blockquote><ol><li><p>姚明出生于上海</p></li><li><p>姚明是中国人</p></li><li><p>姚明的配偶是叶莉</p></li></ol></blockquote><p><img src="http://q4kbn37nl.bkt.clouddn.com/knowledge-graph-example-of-yao-ming.webp?e=1580631946&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:DlISW87JlGZobV2Hf21NwzQPdEE" alt="姚明的知识图谱"></p><p>而每条知识表示为一个 SPO（Subject-Predicate-Object）三元组。比如 ——</p><blockquote><p>“姚明出生于上海”可以用三元组表示为 <code>(&quot;Yao Ming&quot;, &quot;born-in&quot;, &quot;Shanghai&quot;)</code>。</p><p>把自然语言转化为三元组的过程，用到的技术是自然语言处理 (Natural Language Processing，简称 NLP）。</p></blockquote><p>如果我们把三元素两端的实体看作是节点，把关系（包括属性、类别等）看作是一条边，那么大量的三元组就可以组成了一张庞大的知识图谱。</p><div class="anchor" id="zhi-shi-ku"></div><h3 id="2-4-知识库"><a href="#2-4-知识库" class="headerlink" title="2.4 知识库"></a>2.4 知识库</h3><p>随着新知识的录入和机器的自动推理，这些结构化的知识会被存储起来，进而得到一个庞大、丰富的数据库，这个数据库就叫做“知识库（Knowledge Base）”。</p><p>从结构化的数据类型上看，知识库有两种类型 —— Curated KBs 和 Extracted KBs。</p><blockquote><p><em>Curated KBs</em>：由标准的、结构化的三元组所表达的知识组成的知识库，每条知识的结构和刚才的例子很像，<em>每个关系都是标准定义好的</em>。以 freebase（一个创作共享类的网站）为代表，它从维基百科和 WordNet 等知识库抽取了大量的实体及实体关系，相当于实现了一种结构化的维基百科。</p><p><em>Extracted KBs</em>：直接从网页中抽取实体关系三元组所组成的知识库，它的实体和关系更多是自然语言的形式表达的。与 freebase 相比，这样得到的知识更具有多样性，但也会存在一定的噪声，其精确度低于 Curated KBs。</p></blockquote><p>目前行业内使用的比较多的还是简单、易构建的 Curated KBs。</p><div class="anchor" id="zhi-shi-tui-li"></div><h3 id="2-5-知识推理"><a href="#2-5-知识推理" class="headerlink" title="2.5 知识推理"></a>2.5 知识推理</h3><p>知识推理和人类的逻辑是一样，可以分为“归纳”和“演绎”两类。所谓归纳（induction）是指从某类事物的大量实例出发，推理出关于这类事物的一般性结论。将归纳的过程调转方向，得到的就是演绎。演绎（deduction）指的是从一般性的前提出发，推导出个别结论或者具体陈述的过程。</p><p>举个例子 ——</p><blockquote><p>“阿里巴巴是一个数据驱动的公司”可以用三元组表示为 <code>(&quot;阿里巴巴&quot;, &quot;is-a&quot;, 数据驱动的公司&quot;)</code>；</p><p>“阿里巴巴是一种科技公司”可以表示为 <code>(&quot;阿里巴巴&quot;, &quot;subclass&quot;, &quot;科技公司&quot;)</code>。</p><p>如果以后再录入了一条这样的知识：<code>(&quot;Google&quot;, &quot;is-a&quot;, &quot;数据驱动的公司&quot;)</code>，</p><p>机器就可以自动推理出一个新知识： <code>(&quot;Google&quot;, &quot;subclass&quot;, &quot;科技公司&quot;)</code>。</p></blockquote><p>归纳推理能够从已知知识中获取未知知识，是知识的增殖过程。而演绎推理可以用来解决复杂的问题，但它只是将已有事实揭示出来，而不能够产生新知识。上面例子中的推理过程用的就是演绎推理，虽然产生了新的知识记录，但是只是揭示了已有的事实，并没有推理出未知。</p><p>知识推理的背后涉及到一些算法。其中，归纳推理所使用的算法叫 <em>路径排序算法</em>（path ranking algorithm）；演绎推理则使用了 <em>马尔可夫逻辑网</em>（Markov logic network）和 <em>概率软逻辑</em>（probabilistic soft logic）。</p><h2 id="3-功能描述"><a href="#3-功能描述" class="headerlink" title="3 功能描述"></a>3 功能描述</h2><p>第一版的知识图谱功能相对简单，能纵观全貌，体现知识点之间的联系即可。</p><p>具体包含了下列功能：</p><blockquote><ol><li><p>构建一个知识库，博客的编写者（我本人）可以往里录入知识点（实体、概念等）和关联关系。</p></li><li><p>系统根据知识库中的内容，生成相应的知识图谱，通过一篇独立的博客文章来展示。</p></li><li><p>生成的知识图谱是一张关系图，图中的节点代表知识点，连线代表知识的“连接”。</p></li><li><p>默认可以看到知识图谱中的每个节点的名称。鼠标悬停在连线上时，可以看见关系的描述。点击节点或者连线，可以跳转至相关信息的详细页面。</p></li></ol></blockquote><p>后续会考虑添加对已录入知识进行自动的<a href="#zhi-shi-tui-li">知识推理</a>。</p><h2 id="4-技术设计"><a href="#4-技术设计" class="headerlink" title="4 技术设计"></a>4 技术设计</h2><h3 id="4-1-知识库"><a href="#4-1-知识库" class="headerlink" title="4.1 知识库"></a>4.1 知识库</h3><p>知识库用于知识点和关联关系的存储。</p><div class="anchor" id="zhi-shi-ku-zai-ti"></div><h4 id="4-1-1-载体"><a href="#4-1-1-载体" class="headerlink" title="4.1.1 载体"></a>4.1.1 载体</h4><p>存储：由于是简单的前端项目，知识库使用 <code>.json</code> 文件存储于项目内部，暂不考虑使用外部数据源。</p><p>提取：直接加载上述 <code>.json</code> 文件中的原始数据，在展示前进行处理。</p><div class="anchor" id="zhi-shi-ku-shu-ju-jie-gou"></div><h4 id="4-1-2-数据结构"><a href="#4-1-2-数据结构" class="headerlink" title="4.1.2 数据结构"></a>4.1.2 数据结构</h4><p>简介中的三元组是标准的逻辑结构，且相对简单。</p><p>但为了实现相应的功能，应该将数据的物理结构拆分成 <em>节点（知识点）</em> 和 <em>连线（关联关系）</em>。</p><ol><li>节点（知识点）的数据结构如下：</li></ol><table><thead><tr><th>字段名</th><th>字段描述</th><th>数据类型</th><th>备注</th></tr></thead><tbody><tr><td>name</td><td>节点名称</td><td>String</td><td>不能重复</td></tr><tr><td>category</td><td>分类</td><td>String</td><td>分类名称</td></tr><tr><td>link</td><td>链接地址</td><td>String</td><td></td></tr><tr><td>date</td><td>收录时间</td><td>String</td><td>格式：<code>yyyy-MM-dd HH:mm:ss</code></td></tr></tbody></table><ol start="2"><li>连线（关联关系）的数据结构如下：</li></ol><table><thead><tr><th>字段名</th><th>字段描述</th><th>数据类型</th><th>备注</th></tr></thead><tbody><tr><td>subject</td><td>关系主体</td><td>String</td><td>源节点的名称</td></tr><tr><td>predicate</td><td>关系谓语</td><td>String</td><td>尽可能使用标准化的词汇</td></tr><tr><td>object</td><td>关系客体</td><td>String</td><td>目标节点的名称</td></tr><tr><td>link</td><td>链接地址</td><td>String</td><td></td></tr><tr><td>date</td><td>收录时间</td><td>String</td><td>格式：<code>yyyy-MM-dd HH:mm:ss</code></td></tr></tbody></table><p>这里的连线，相当于对三元组的扩充。</p><div class="anchor" id="tu-xing-jie-mian"></div><h3 id="4-2-图形界面"><a href="#4-2-图形界面" class="headerlink" title="4.2 图形界面"></a>4.2 图形界面</h3><h4 id="4-2-1-图表库选型"><a href="#4-2-1-图表库选型" class="headerlink" title="4.2.1 图表库选型"></a>4.2.1 图表库选型</h4><p>想要在页面上实现一个关系图，有很多现成的第三方库可以使用。</p><p>我发现，Matery 主题中的许多图表都使用了 <a href="https://www.echartsjs.com/zh/index.html" target="_blank" rel="noopener">ECharts</a>。这是一个不错的第三方图表库，功能强大、使用方便。我曾经用它实现了不少报表，对我而言早已轻车熟路。这次还是用它。</p><p>值得注意的是，尽管 Echarts 提供的关系图也是接收“节点和“连线”两组数据作为参数，但仔细查阅了<a href="https://www.echartsjs.com/zh/option.html#series-graph" target="_blank" rel="noopener">官方文档</a>后会发现，参数的字段定义与数据结构的设计稍有不同，需要做一些简单的格式转换。</p><h4 id="4-2-2-图表库的使用"><a href="#4-2-2-图表库的使用" class="headerlink" title="4.2.2 图表库的使用"></a>4.2.2 图表库的使用</h4><p>我们知道 Markdown 中也是可以使用 HTML 语法的，当然也可以使用 JavaScript 脚本，但这总归有些不方便。</p><p>实际上，Hexo 的<a href="https://hexo.io/plugins/" target="_blank" rel="noopener">官方插件</a>中就提供了一款 <a href="https://github.com/kchen0x/hexo-tag-echarts3" target="_blank" rel="noopener">hexo-tag-echarts3</a> 插件，支持在 <code>.md</code> 文章文件中使用 <code>echarts-tag</code> 标签来绘制 ECharts 图表。</p><p>可是，在<a href="chang-shi-hexo-tag-echarts3-cha-jian">初步尝试</a>后，发现这个插件存在一些缺陷，故暂停使用。</p><p>最终决定使用传统的 js 方式引入 ECharts 库，实现关系图。</p><h2 id="5-代码实现"><a href="#5-代码实现" class="headerlink" title="5 代码实现"></a>5 代码实现</h2><p>打开命令行，使用 Hexo 提供的 <code>hexo new [layout] &lt;title&gt;</code> 命令在 <code>source\_posts</code> 目录下创建一个 <code>.md</code> 格式的文章文件 —— 这是我们的常规操作，大家一定都很熟悉了。</p><p>然而，Hexo 在生成静态文件后，之会保留一些特定目录下的源文件。这时，我们应该如何引用我们想引用的文件呢？</p><div class="anchor" id="gou-jian-zhi-shi-ku"></div><h3 id="5-1-构建知识库"><a href="#5-1-构建知识库" class="headerlink" title="5.1 构建知识库"></a>5.1 构建知识库</h3><p><a href="#zhi-shi-ku-zai-ti">上面</a>我们提到，目前的知识库比较简单，仅采用一个 <code>.json</code> 文件存储。</p><p>新建 <code>source/data/knowledge-base.json</code> 文件，添加如下内容：</p><pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"nodes"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span> <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"创造"</span><span class="token punctuation">,</span> <span class="token property">"category"</span><span class="token operator">:</span> <span class="token string">"思维类"</span><span class="token punctuation">,</span> <span class="token property">"link"</span><span class="token operator">:</span> <span class="token string">"/tools/knowledge-formula/#chuang-zao"</span><span class="token punctuation">,</span> <span class="token property">"date"</span><span class="token operator">:</span> <span class="token string">"2020-02-03 14:24:27"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">{</span> <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"想法的连接"</span><span class="token punctuation">,</span> <span class="token property">"date"</span><span class="token operator">:</span> <span class="token string">"2020-02-03 14:24:39"</span> <span class="token punctuation">}</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token property">"lines"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">{</span> <span class="token property">"subject"</span><span class="token operator">:</span> <span class="token string">"创造"</span><span class="token punctuation">,</span> <span class="token property">"predicate"</span><span class="token operator">:</span> <span class="token string">"是"</span><span class="token punctuation">,</span> <span class="token property">"object"</span><span class="token operator">:</span> <span class="token string">"想法的连接"</span><span class="token punctuation">,</span> <span class="token property">"date"</span><span class="token operator">:</span> <span class="token string">"2020-02-03 14:24:55"</span> <span class="token punctuation">}</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>依照知识库的<a href="#zhi-shi-ku-shu-ju-jie-gou">数据结构</a>，其中 <code>nodes</code> 表示节点，<code>lines</code> 表示连线。正如我们录入一条知识：“创造就是想法的连接” —— 对应三元组<code>(&quot;创造&quot;, &quot;是&quot;, &quot;想法的连接&quot;)</code>。</p><p>然后我们的项目结构看起来会是下面这样：</p><pre><code>.├── .deploy_git├── public├── scaffolds├── source|   ├── _data|   ├── _drafts|   ├── _posts|   ...|   ├── data # 数据资源|   |   └── knowledge-base.json # 知识库|   ...|   └── CNAME├── themes├── _config.yml└── package.json</code></pre><h3 id="5-2-数据加载和处理"><a href="#5-2-数据加载和处理" class="headerlink" title="5.2 数据加载和处理"></a>5.2 数据加载和处理</h3><h4 id="5-2-1-数据加载"><a href="#5-2-1-数据加载" class="headerlink" title="5.2.1 数据加载"></a>5.2.1 数据加载</h4><p>由于 Matery 主题本身引入了 <code>jQuery</code> 库，可以直接使用里边的方法，还是非常方便的。</p><p>在 <code>.md</code> 文章文件中添加以下代码：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">loadData</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 数据加载方法</span>  $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    url<span class="token punctuation">:</span> <span class="token string">'/data/knowledge-base.json'</span><span class="token punctuation">,</span>    dataType<span class="token punctuation">:</span> <span class="token string">'json'</span><span class="token punctuation">,</span>    success<span class="token punctuation">:</span> callback  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">loadData</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中，<code>loadData</code> 方法是用于数据加载的方法。它接收一个回调函数作为参数，我们可以在这个回调函数内部处理返回的数据。</p><p>比如这里通过 <code>console.log()</code> 方法打印了响应的信息，这样就能在浏览器控制台上看到 <code>source/data/knowledge-base.json</code> 中保存的对象信息。</p><p><em>如果今后需要更换外部数据源，或是改变数据加载的方式，我们只需要修改 <code>loadData()</code> 方法即可。</em></p><h4 id="5-2-2-格式化处理"><a href="#5-2-2-格式化处理" class="headerlink" title="5.2.2 格式化处理"></a>5.2.2 格式化处理</h4><p>阅读 ECharts 的<a href="https://www.echartsjs.com/zh/option.html#series-graph" target="_blank" rel="noopener">配置文档</a>发现，配置中需要 <code>legend.data</code>、<code>categories</code>、<code>data</code>/<code>nodes</code>、<code>links</code>/<code>edges</code> 四项信息。这一步的目的就是将 <code>source/data/knowledge-base.json</code> 返回的信息转化为这四种信息，供 ECharts 渲染。</p><p>修改 <code>loadData()</code> 方法如下：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">loadData</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">var</span> nodes <span class="token operator">=</span> response<span class="token punctuation">.</span>nodes <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 节点信息</span>      lines <span class="token operator">=</span> response<span class="token punctuation">.</span>lines <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 连线信息</span>  <span class="token comment" spellcheck="true">// 生成分类信息</span>  <span class="token keyword">var</span> categories <span class="token operator">=</span> nodes<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 过滤重复的分类</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> index<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>category <span class="token operator">===</span> nodes<span class="token punctuation">.</span>category<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 前面出现过相同的名称</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span> name<span class="token punctuation">:</span> item<span class="token punctuation">.</span>category <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  categories<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">'其它'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 无分类的节点被归类为“其它”</span>  <span class="token comment" spellcheck="true">// 生成图例信息</span>  <span class="token keyword">var</span> legends <span class="token operator">=</span> categories<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> item<span class="token punctuation">.</span>name<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 生成节点信息</span>  <span class="token keyword">var</span> data <span class="token operator">=</span> nodes<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 过滤名称重复的节点</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> index<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>name <span class="token operator">===</span> nodes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 前面出现过相同的名称</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> name <span class="token operator">=</span> item<span class="token punctuation">.</span>name<span class="token punctuation">;</span>    <span class="token keyword">var</span> value <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 节点的数值</span>    lines<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 节点的出度、入度之和</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">===</span> line<span class="token punctuation">.</span>subject <span class="token operator">||</span> name <span class="token operator">===</span> line<span class="token punctuation">.</span>object<span class="token punctuation">)</span> value<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> value <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 至少是 1</span>    <span class="token keyword">var</span> categoryIndex <span class="token operator">=</span> legends<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 分类下标，默认最大值，对应“其它”</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> legends<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>category <span class="token operator">===</span> legends<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        categoryIndex <span class="token operator">=</span> i<span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      name<span class="token punctuation">:</span> name<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 节点名称</span>      value<span class="token punctuation">:</span> value<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 节点数值</span>      category<span class="token punctuation">:</span> categoryIndex<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 节点分类</span>      symbolSize<span class="token punctuation">:</span> <span class="token number">10</span> <span class="token operator">+</span> <span class="token punctuation">(</span>value <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 节点大小</span>      label<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 标签</span>        show<span class="token punctuation">:</span> value <span class="token operator">>=</span> <span class="token number">1</span> <span class="token comment" spellcheck="true">// 数值足够大时展示</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      link<span class="token punctuation">:</span> item<span class="token punctuation">.</span>link<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 链接，点击事件时获取</span>      date<span class="token punctuation">:</span> item<span class="token punctuation">.</span>date    <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 生成连线信息</span>  <span class="token keyword">var</span> links <span class="token operator">=</span> lines<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      source<span class="token punctuation">:</span> item<span class="token punctuation">.</span>subject<span class="token punctuation">,</span>      target<span class="token punctuation">:</span> item<span class="token punctuation">.</span>object<span class="token punctuation">,</span>      value<span class="token punctuation">:</span> item<span class="token punctuation">.</span>predicate<span class="token punctuation">,</span>      link<span class="token punctuation">:</span> item<span class="token punctuation">.</span>link<span class="token punctuation">,</span>      date<span class="token punctuation">:</span> item<span class="token punctuation">.</span>date    <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-3-Echarts-关系图绘制"><a href="#5-3-Echarts-关系图绘制" class="headerlink" title="5.3 Echarts 关系图绘制"></a>5.3 Echarts 关系图绘制</h3><div class="anchor" id="chang-shi-hexo-tag-echarts3-cha-jian"></div><h4 id="5-3-1-尝试-hexo-tag-echarts3-插件"><a href="#5-3-1-尝试-hexo-tag-echarts3-插件" class="headerlink" title="5.3.1 尝试 hexo-tag-echarts3 插件"></a>5.3.1 尝试 hexo-tag-echarts3 插件</h4><p><em>本小节不是关键内容，可以<a href="">跳过</a>。</em></p><p>打开命令行，执行 <code>npm install hexo-tag-echarts3 --save</code> 安装 Hexo 的 ECharts 标签插件。</p><p>在文章中就可以使用标签的方式来绘制图表了。</p><pre class="line-numbers language-markdown"><code class="language-markdown">{% echarts 400 '85%' %} // 高度默认 400，宽度默认 '85%'{ // echarts option  series: [{<span class="token code keyword">    type: 'graph',</span><span class="token code keyword">    layout: 'force',</span><span class="token code keyword">    label: {</span><span class="token code keyword">      show: true</span><span class="token code keyword">    },</span><span class="token code keyword">    draggable: true,</span><span class="token code keyword">    categories: [],</span><span class="token code keyword">    data: [{ name: '孤独的测试节点' }],</span><span class="token code keyword">    links: []</span>  }]}{% endecharts %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>而当我使用上述代码绘制一张关系图时，出现了一个出乎意料的报错 ——</p><p><img src="http://q4kbn37nl.bkt.clouddn.com/hexo-tag-echart3-unsupport-graph-error.png?e=1580708740&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:Yrmp9F5EJeRSxU0PiWBfxnlPGOs" alt="未加载 graph 组件"></p><p>排查发现，<code>hexo-tag-echarts3</code> 插件所引用的 ECharts 库地址是 <code>https://cdn.bootcss.com/echarts/3.8.0/echarts.common.min.js</code>，这个 <code>echarts.common.min.js</code> 中并未包含对 graph 关系图的支持。</p><p>我们知道 Echarts 包含了非常多样化的图表（chart）、坐标系（coordinate systems）和组件（component），在其官网的<a href="https://www.echartsjs.com/zh/builder.html" target="_blank" rel="noopener">下载页面</a>支持定制自己需要的部分。这样的好处是可以按需引入，以减少依赖包的大小。随之带来的问题是，可能遗漏一些依赖，比如上面的方式引入的 js 文件中就不包含我们需要的 graph 关系图组件。这时就需要更新原有的依赖了。</p><p>具体方法是，首先如下修改 <code>node_modules/hexo-tag-echarts3/template.html</code> 插件源文件中的内容：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>&lt;%- id %<span class="token punctuation">></span><span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span> &lt;<span class="token number">%</span>- width <span class="token number">%</span>><span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> &lt;<span class="token number">%</span>- height <span class="token number">%</span>>px<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> auto</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- &lt;script src="https://cdn.bootcss.com/echarts/3.8.0/echarts.common.min.js">&lt;/script> --></span> <span class="token comment" spellcheck="true">&lt;!-- 不使用该 cdn 资源 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">  <span class="token comment" spellcheck="true">// 基于准备好的dom，初始化echarts实例</span>  <span class="token keyword">var</span> myChart <span class="token operator">=</span> echarts<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'&lt;%- id %>'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 指定图表的配置项和数据</span>  <span class="token keyword">var</span> option <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">=</span> option <span class="token operator">%</span><span class="token operator">></span>  <span class="token comment" spellcheck="true">// 使用刚指定的配置项和数据显示图表。</span>  myChart<span class="token punctuation">.</span><span class="token function">setOption</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后修改文章文件中的内容：</p><pre class="line-numbers language-markdown"><code class="language-markdown"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/libs/echarts/echarts.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span> <span class="token comment" spellcheck="true">&lt;!-- 引用自己的 ECharts 库 --></span>{% echarts 400 '85%' %} // 高度默认 400，宽度默认 '85%'{ // echarts option  series: [{<span class="token code keyword">    type: 'graph',</span><span class="token code keyword">    layout: 'force',</span><span class="token code keyword">    label: {</span><span class="token code keyword">      show: true</span><span class="token code keyword">    },</span><span class="token code keyword">    draggable: true,</span><span class="token code keyword">    categories: [],</span><span class="token code keyword">    data: [{ name: '孤独的测试节点' }],</span><span class="token code keyword">    links: []</span>  }]}{% endecharts %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在 <code>echarts tag</code> 标签之前引用自己的 ECharts 库，这个库可以去 ECharts 的<a href="https://www.echartsjs.com/zh/download.html" target="_blank" rel="noopener">官网</a>下载。当然直接这么引用也是没问题的，因为 Matery 主题的源文件目录 <code>themes/matery/source/libs</code> 下已经包含了 ECharts 库了，且其支持 graph。</p><div class="anchor" id="hexo-tag-echarts3-cha-jian-yi-liu-wen-ti"></div><blockquote><p>这么做虽然解决了问题，但也留了个坑。我们修改的 <code>hexo-tag-echarts3</code> 插件的源文件位于 <code>node_modules</code> 目录下，假如重新执行 <code>npm install</code> 命令安装依赖（更换设备的时候一定会出现这种情况），对源文件的修改就白费了。</p><p>我又回顾了一下 <code>hexo-tag-ehcart3</code> 插件的历史版本，它们都引用了类似的 <code>echarts.common.min.js</code>，且都不包含关系图组件。换言之，回退插件的版本也没法解决问题。</p><p>这个遗留问题我已<a href="/tools/to-do-list/#hexo-tag-echarts3-cha-jian-yi-liu-wen-ti">记录在案</a>。未来可能的解决方法是重写该插件，以支持 ECharts 组件的按需引入。</p></blockquote><p>另外，由于是通过模板创建，这段代码并不能在数据加载后异步执行。这是个很致命的缺点。</p><p>因此，<em>这里先暂停使用该插件</em>。但不得不说，这是一个有趣的尝试。</p><h4 id="5-3-2-传统方式实现"><a href="#5-3-2-传统方式实现" class="headerlink" title="5.3.2 传统方式实现"></a>5.3.2 传统方式实现</h4><p>以下是 <code>.md</code> 文章文件的完整代码：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>graph<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">600</span>px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/libs/echarts/echarts.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!-- 引入 ECharts 库 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"><span class="token keyword">var</span> myChart <span class="token operator">=</span> echarts<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'graph'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">loadData</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 数据加载方法</span>  $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    url<span class="token punctuation">:</span> <span class="token string">'/data/knowledge-base.json'</span><span class="token punctuation">,</span>    dataType<span class="token punctuation">:</span> <span class="token string">'json'</span><span class="token punctuation">,</span>    success<span class="token punctuation">:</span> callback  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>myChart<span class="token punctuation">.</span><span class="token function">showLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">loadData</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">var</span> nodes <span class="token operator">=</span> response<span class="token punctuation">.</span>nodes <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 节点信息</span>      lines <span class="token operator">=</span> response<span class="token punctuation">.</span>lines <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 连线信息</span>  <span class="token comment" spellcheck="true">// 生成分类信息</span>  <span class="token keyword">var</span> categories <span class="token operator">=</span> nodes<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 过滤重复的分类</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> index<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>category <span class="token operator">===</span> nodes<span class="token punctuation">.</span>category<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 前面出现过相同的名称</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span> name<span class="token punctuation">:</span> item<span class="token punctuation">.</span>category <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  categories<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">'其它'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 无分类的节点被归类为“其它”</span>  <span class="token comment" spellcheck="true">// 生成图例信息</span>  <span class="token keyword">var</span> legends <span class="token operator">=</span> categories<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> item<span class="token punctuation">.</span>name<span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 生成节点信息</span>  <span class="token keyword">var</span> data <span class="token operator">=</span> nodes<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 过滤名称重复的节点</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> index<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>name <span class="token operator">===</span> nodes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 前面出现过相同的名称</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">var</span> name <span class="token operator">=</span> item<span class="token punctuation">.</span>name<span class="token punctuation">;</span>    <span class="token keyword">var</span> value <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 节点的数值</span>    lines<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 节点的出度、入度之和</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">===</span> line<span class="token punctuation">.</span>subject <span class="token operator">||</span> name <span class="token operator">===</span> line<span class="token punctuation">.</span>object<span class="token punctuation">)</span> value<span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> value <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 至少是 1</span>    <span class="token keyword">var</span> categoryIndex <span class="token operator">=</span> legends<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 分类下标，默认最大值，对应“其它”</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> legends<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>category <span class="token operator">===</span> legends<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        categoryIndex <span class="token operator">=</span> i<span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      name<span class="token punctuation">:</span> name<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 节点名称</span>      value<span class="token punctuation">:</span> value<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 节点数值</span>      category<span class="token punctuation">:</span> categoryIndex<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 节点分类</span>      symbolSize<span class="token punctuation">:</span> <span class="token number">10</span> <span class="token operator">+</span> <span class="token punctuation">(</span>value <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 节点大小</span>      label<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 标签</span>        show<span class="token punctuation">:</span> value <span class="token operator">>=</span> <span class="token number">1</span> <span class="token comment" spellcheck="true">// 数值足够大时展示</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      link<span class="token punctuation">:</span> item<span class="token punctuation">.</span>link<span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 链接，点击事件时获取</span>      date<span class="token punctuation">:</span> item<span class="token punctuation">.</span>date    <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 生成连线信息</span>  <span class="token keyword">var</span> links <span class="token operator">=</span> lines<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span>      source<span class="token punctuation">:</span> item<span class="token punctuation">.</span>subject<span class="token punctuation">,</span>      target<span class="token punctuation">:</span> item<span class="token punctuation">.</span>object<span class="token punctuation">,</span>      value<span class="token punctuation">:</span> item<span class="token punctuation">.</span>predicate<span class="token punctuation">,</span>      link<span class="token punctuation">:</span> item<span class="token punctuation">.</span>link<span class="token punctuation">,</span>      date<span class="token punctuation">:</span> item<span class="token punctuation">.</span>date    <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  myChart<span class="token punctuation">.</span><span class="token function">setOption</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    legend<span class="token punctuation">:</span> <span class="token punctuation">{</span>      type<span class="token punctuation">:</span> <span class="token string">'scroll'</span><span class="token punctuation">,</span>      left<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>      orient<span class="token punctuation">:</span> <span class="token string">'vertical'</span><span class="token punctuation">,</span>      data<span class="token punctuation">:</span> legends    <span class="token punctuation">}</span><span class="token punctuation">,</span>    tooltip<span class="token punctuation">:</span> <span class="token punctuation">{</span>      formatter<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>params<span class="token punctuation">.</span>dataType <span class="token operator">===</span> <span class="token string">'node'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          str <span class="token operator">=</span> params<span class="token punctuation">.</span>data<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">'&lt;br/>关联 '</span> <span class="token operator">+</span> params<span class="token punctuation">.</span>data<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token string">' 个节点'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>params<span class="token punctuation">.</span>dataType <span class="token operator">===</span> <span class="token string">'edge'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          str <span class="token operator">=</span> params<span class="token punctuation">.</span>data<span class="token punctuation">.</span>source <span class="token operator">+</span> <span class="token string">' '</span> <span class="token operator">+</span> params<span class="token punctuation">.</span>data<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token string">' '</span> <span class="token operator">+</span> params<span class="token punctuation">.</span>data<span class="token punctuation">.</span>target<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>params<span class="token punctuation">.</span>data<span class="token punctuation">.</span>link<span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> str <span class="token operator">+</span><span class="token operator">=</span> <span class="token string">'&lt;br/>'</span><span class="token punctuation">;</span>          str <span class="token operator">+</span><span class="token operator">=</span> <span class="token string">'点击查看详情'</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> str<span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    series<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>      type<span class="token punctuation">:</span> <span class="token string">'graph'</span><span class="token punctuation">,</span>      layout<span class="token punctuation">:</span> <span class="token string">'force'</span><span class="token punctuation">,</span>      force<span class="token punctuation">:</span> <span class="token punctuation">{</span>        edgeLength<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">,</span>        repulsion<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span>        gravity<span class="token punctuation">:</span> <span class="token number">0.12</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      draggable<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>      focusNodeAdjacency<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">// edgeSymbol: ['none', 'arrow'],</span>      itemStyle<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 图形样式</span>        borderColor<span class="token punctuation">:</span> <span class="token string">'#fff'</span><span class="token punctuation">,</span>        borderWidth<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>        shadowBlur<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>        shadowColor<span class="token punctuation">:</span> <span class="token string">'rgba(0, 0, 0, 0.3)'</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      label<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 图形上的文本标签</span>        position<span class="token punctuation">:</span> <span class="token string">'right'</span><span class="token punctuation">,</span>        formatter<span class="token punctuation">:</span> <span class="token string">'{b}'</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      edgeLabel<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 关系边上的文本标签</span>        formatter<span class="token punctuation">:</span> <span class="token string">'{c}'</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      emphasis<span class="token punctuation">:</span> <span class="token punctuation">{</span>        lineStyle<span class="token punctuation">:</span> <span class="token punctuation">{</span>          width<span class="token punctuation">:</span> <span class="token number">3</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      categories<span class="token punctuation">:</span> categories<span class="token punctuation">,</span>      data<span class="token punctuation">:</span> data<span class="token punctuation">,</span>      links<span class="token punctuation">:</span> links<span class="token punctuation">,</span>      animation<span class="token punctuation">:</span> <span class="token boolean">false</span>    <span class="token punctuation">}</span><span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  myChart<span class="token punctuation">.</span><span class="token function">hideLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  myChart<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 绑定点击事件，打开新的标签页跳转至节点 link 指向的地址</span>    <span class="token keyword">var</span> data <span class="token operator">=</span> event<span class="token punctuation">.</span>data <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> link <span class="token operator">=</span> data<span class="token punctuation">.</span>link<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>link<span class="token punctuation">)</span> <span class="token punctuation">{</span>      window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>link<span class="token punctuation">,</span> <span class="token string">'\_blank'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>简简单单的百余行代码，就实现了知识图谱。</p><h2 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h2><h3 id="知识库结构优化-2020-2-4"><a href="#知识库结构优化-2020-2-4" class="headerlink" title="知识库结构优化 2020.2.4"></a>知识库结构优化 2020.2.4</h3><p>在构建知识库的<a href="gou-jian-zhi-shi-ku">开发过程</a>中，我们将知识库的节点（nodes）数据和连线（lines）数据都存放在 <code>source/data/knowledge-base.json</code> 文件中。</p><p>随着数据量的增长，节点数据和连线数据同时存放在一个文件中的方式，不利于数据的管理和维护。</p><h4 id="1-数据存储优化"><a href="#1-数据存储优化" class="headerlink" title="1 数据存储优化"></a>1 数据存储优化</h4><p>现将两块数据分开存放，具体如下：</p><pre><code>....├── source|   ...|   ├── data # 数据资源|   |   └── knowledge-base # 知识库|   |       ├── lines.json # 连线数据|   |       └── nodes.json # 节点数据|   ......</code></pre><p>其中，<code>source/data/knowledge-base/nodes.json</code> 文件用来存放节点数据，例如：</p><pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">[</span>  <span class="token punctuation">{</span> <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"创造"</span><span class="token punctuation">,</span> <span class="token property">"category"</span><span class="token operator">:</span> <span class="token string">"思维类"</span><span class="token punctuation">,</span> <span class="token property">"link"</span><span class="token operator">:</span> <span class="token string">"/tools/knowledge-formula/#chuang-zao"</span><span class="token punctuation">,</span> <span class="token property">"date"</span><span class="token operator">:</span> <span class="token string">"2020-02-03 14:24:27"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span> <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"想法的连接"</span><span class="token punctuation">,</span> <span class="token property">"date"</span><span class="token operator">:</span> <span class="token string">"2020-02-03 14:24:39"</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><code>source/data/knowledge-base/lines.json</code> 则用来存放连线数据 ——</p><pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">[</span>  <span class="token punctuation">{</span> <span class="token property">"subject"</span><span class="token operator">:</span> <span class="token string">"创造"</span><span class="token punctuation">,</span> <span class="token property">"predicate"</span><span class="token operator">:</span> <span class="token string">"是"</span><span class="token punctuation">,</span> <span class="token property">"object"</span><span class="token operator">:</span> <span class="token string">"想法的连接"</span><span class="token punctuation">,</span> <span class="token property">"date"</span><span class="token operator">:</span> <span class="token string">"2020-02-03 14:24:55"</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="2-数据加载优化"><a href="#2-数据加载优化" class="headerlink" title="2 数据加载优化"></a>2 数据加载优化</h4><p>将数据分散存储至两个 <code>.json</code> 文件后，需要分开两次分别请求。我们允许这两次请求都是异步、并发的，各自独立执行，但最后共同处理它们返回的结果。jQuery 提供的 <code>$.when()</code> 方法就可以做到这点。</p><p>修改 <code>.md</code> 文章文件中的 <code>loadData()</code> 方法：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">loadData</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 数据加载方法</span>  $<span class="token punctuation">.</span><span class="token function">when</span><span class="token punctuation">(</span>$<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'/data/knowledge-base/nodes.json'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> $<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'/data/knowledge-base/lines.json'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>nodesResponse<span class="token punctuation">,</span> linesResponse<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">{</span> nodes<span class="token punctuation">:</span> nodesResponse<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> lines<span class="token punctuation">:</span> linesResponse<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>相较之前的方式，这么做会增加一次请求资源的网络开销，但能使数据的存储更有条理，更有利于管理和维护。</p><h3 id="图例排序-2020-2-7"><a href="#图例排序-2020-2-7" class="headerlink" title="图例排序 2020.2.7"></a>图例排序 2020.2.7</h3><p>随着节点类型的增加，图例的数量也在增多。</p><p>图例的顺序即是节点分类的顺序，这与节点录入的顺序有关。为了使其更利于查找，现按名称对分类信息进行重新排序。</p><p>这里可以利用 js 的 <code>Array.sort()</code> 方法。</p><p>如下修改调用 <code>loadData(callback)</code> 方法时传入的 <code>callback</code> 参数：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token function">loadData</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token operator">...</span>  <span class="token comment" spellcheck="true">// 生成分类信息</span>  <span class="token keyword">var</span> categories <span class="token operator">=</span> nodes<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 过滤重复的分类</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> index<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>category <span class="token operator">===</span> nodes<span class="token punctuation">.</span>category<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 前面出现过相同的名称</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span> name<span class="token punctuation">:</span> item<span class="token punctuation">.</span>category <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 按名称排序</span>    <span class="token keyword">return</span> a<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">localeCompare</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  categories<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">'其它'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 无分类的节点被归类为“其它”</span>  <span class="token operator">...</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h2><p>知识图谱<a href="/tools/knowledge-graph/">传送门</a></p><p>下一篇：<a href="/hexo/knowledge-graph/support-search/">《知识图谱支持搜索》</a></p>]]></content>
      
      
      <categories>
          
          <category> 精神时光屋 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 知识 </tag>
            
            <tag> 图谱 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>忘记是为了更好的记住</title>
      <link href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-1/20160831_wang-ji-shi-wei-le-geng-hao-de-ji-zhu/"/>
      <url>/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-1/20160831_wang-ji-shi-wei-le-geng-hao-de-ji-zhu/</url>
      
        <content type="html"><![CDATA[<h5 id="《万维钢·精英日课1：忘记是为了更好的记住》课程笔记"><a href="#《万维钢·精英日课1：忘记是为了更好的记住》课程笔记" class="headerlink" title="《万维钢·精英日课1：忘记是为了更好的记住》课程笔记"></a>《万维钢·精英日课1：忘记是为了更好的记住》课程笔记</h5><p>万维钢的文章《超强记忆力是个邪道功夫》中，反对拿圆周率之类根本不是知识的东西搞刻意的记忆力训练。但另一方面，学习的确需要记忆。于是有人发问，既然说超强记忆力是邪道，那正道的记忆力，应该怎么用呢？</p><div class="anchor" id="ba-la-de-xiao-ying"></div><h2 id="1-巴拉德效应"><a href="#1-巴拉德效应" class="headerlink" title="1 巴拉德效应"></a>1 巴拉德效应</h2><p>本尼迪克特·凯里（Benedict Carey）的《我们如何学习：关于什么时间学、在哪学、为什么学的令人吃惊的真相》（How We Learn: The Surprising Truth About When, Where, and Why It Happens）里说了这么一个故事 ——</p><blockquote><p>一百多年前，伦敦有个叫菲利普·巴拉德（Philip Ballard）的英语老师，拿自己班的学生做了一个实验。他让学生阅读一首诗，并且要求尽量把诗背下来。学完休息五分钟，马上进行默写测试，结果成绩都一般。巴拉德老师没有要求学生继续学习这首诗，学生们以为这件事儿就算过去了。</p><p>两天后，巴拉德突然要求学生再次默写那首诗。在这期间学生们都没有进行任何复习，所以我们设想，这一次的测试成绩应该更差。</p><p>结果恰恰相反。成绩反而平均提高了10%。</p></blockquote><p>根据人们熟知的“<a href="/tools/knowledge-handbook/#ji-yi-qv-xian">记忆曲线</a>” —— 或者叫“<a href="/tools/knowledge-handbook/#yi-wang-qv-xian">遗忘曲线</a>”更合适 —— 的原理，人对事物的记忆应该随时间不断减弱，而且最初几天遗忘的速度还特别快，怎么可能还加强了呢？</p><p>我们知道心理学实验经常不靠谱，现在很多研究结果都陷入了“不可重复”危机。这个实验听着就不太靠谱。后来有好几个人拿别的实验证明巴拉德这个所谓“记忆增强”效应根本就不存在，可是偶尔又有人说他重复出来了。这件事反反复复，困扰了心理学家好几十年。</p><p>一直到1980年代，人们才算理出一点头绪。<em>原来这个关键在于记忆的东西是什么</em>。一般心理学家搞记忆力研究都是让人记若干组没有规律的字母组合，在这种情况下记忆的衰减的确符合遗忘曲线，<a href="/tools/knowledge-handbook/#ba-la-de-xiao-ying">巴拉德效应</a>不存在。但巴拉德实验用的不是随机字母组合，而是一首诗 —— 诗歌的词句彼此之间有联系，放在一起是有意义的，在这种情况下做实验，巴拉德效应的确存在。</p><p><img src="http://q4kbn37nl.bkt.clouddn.com/how-we-learn-the-surprising-truth-about-when-where-and-why-it-happens.jpg?e=1580566409&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:ZvLdHTv1sWelWvS-FMZZZOgJRds" alt="本尼迪克特·凯里《我们如何学习：关于什么时间学、在哪学、为什么学的令人吃惊的真相》"></p><div class="anchor" id="bi-yue-ke-de-ji-yi-li-li-lun-mo-xing"></div><h2 id="2-比约克的记忆力理论模型"><a href="#2-比约克的记忆力理论模型" class="headerlink" title="2 比约克的记忆力理论模型"></a>2 比约克的记忆力理论模型</h2><p>加州大学洛杉矶分校的一对教授夫妻 —— 罗伯特·比约克（Robert Bjork）和伊丽莎白·比约克（Elizabeth Bjork）—— 据此提出了一个非常漂亮的记忆力理论模型。它能完美解释各种关于记忆和遗忘的现象，它能为我们的学习提供指导，它非常简单而又非常反常识。</p><p>我们一般人心目中的记忆，大概就如同写在沙滩上的字，随着时间就会慢慢模糊掉……而这个比喻是错的。</p><blockquote><p>比约克家的理论说，人的记忆其实有两个强度：存储强度（storage strength）和提取强度（retrieval strength）。</p><p><em>存储强度不会随时间减弱！</em> 我们每时每刻都在接收大量的信息，而其中的绝大部分都被大脑自动忽略了 —— 这些被忽略的不算。那些剩下来的，你主动希望记住的东西 —— 比如说一个人名、一个电话号码、一个英语单词 —— 一旦进入记忆，就永远在那里了。下次再见到它，它在你大脑里的存储强度会增强，但是哪怕你再也不见它了，它的存储强度也不会减弱。<em>存储强度只增不减。</em></p><p>那么为什么我们会忘记一些东西呢？那是提取强度出了问题。<em>如果没有复习，提取强度就随着时间慢慢减弱。</em></p></blockquote><p>记忆一直都存在那里，只是不好提取了。</p><p>再用一个表来说明这两个强度的意思：</p><table><thead><tr><th>例子</th><th>存储强度</th><th>提取强度</th></tr></thead><tbody><tr><td>父母</td><td>高</td><td>高</td></tr><tr><td>多年不见的小学老师</td><td>高</td><td>低</td></tr><tr><td>新认识的邻居</td><td>低</td><td>高</td></tr><tr><td>几年前只有过一面之交的人</td><td>低</td><td>低</td></tr></tbody></table><p>心理学家说，提取强度是越用越高。每一次提取记忆，提取强度都会增加；而因为这个记忆在你脑子里又过了一遍，所以存储强度也增加了。</p><p>这也是为什么会有巴拉德效应。学生们第一次测试的时候，他们要提取刚刚得到的记忆，这个提取动作把那个记忆给加强了。这样虽然此后两天学生们没有复习，但他们等于在课堂上已经复习了！两天后再测试，上次就已经背写出来的诗句这次就毫不费力，所以他们就有时间去想想上次没写出来的诗句。而因为诗句之间都是有联系的，他们也许就能联想填空，这次多写几句。</p><p>如此说来，考试就是最好的复习。有的人背单词其实是念单词，拿本单词书在那从头到尾反复念——这种效率很低，因为你没有提取动作！复习的时候你应该先考自己这个单词什么意思，实在想不起来了再去看答案。</p><p>而最重要的是这个：<em>提取的时候越困难，这个提取动作对两个强度的增加值就越大</em>。</p><p>既然如此，最有效率的学习方法就不是天天复习，而是故意把它放在那里等几天，等到提取强度慢慢变弱了，我们已经有点“忘记”了，再搞一次测试式的复习。如此一来你不但用最少的时间学习，而且还能通过遗忘过滤掉一些不必要的信息。</p><p>以背单词为例，这就要求我们 ——</p><blockquote><p>第一次复习是在一天之后；</p><p>第二次就要拉长，比如说再等一周之后；</p><p>然后是一个月之后；</p><p>然后是几个月甚至更长时间。</p></blockquote><p>具体应该怎么间隔最有效，甚至早就有人搞了软件用专门算法来设定回忆间隔，比如“Fresh Memory”。</p><p>而有实验证明，哪怕第一次复习是在两个月之后，你感觉什么都不记得了，其实还是能找到一点印象，这种学法还是有效的！ </p><p><em>所以要想记住，最好先忘了。</em></p><div class="anchor" id="wan-wei-gang-de-ping-lun"></div><h2 id="3-万维钢的评论"><a href="#3-万维钢的评论" class="headerlink" title="3 万维钢的评论"></a>3 万维钢的评论</h2><blockquote><p>我上大学的时候，一度觉得一本书学一个学期实在效率太低了。实际上我用突击的方法学完了好多课程 —— 拿本教材直接读，读完一章就做做习题，然后就读下一章，其实总共用不了多少时间，而且考试成绩都挺好。 </p><p>后来我才发现，这种学法其实是不对的。学得快，忘得也快。应付考试很方便，将来再用到，还得重新找书来看。因为学得太快，这个知识没有更彻底地长在大脑之中 —— 毕竟大脑不是硬盘，是肉长的，而长肉需要时间。 </p></blockquote><p>用这本书的话说，就是存储强度不够高。 </p><p>从这个角度讲，慢慢学才是好办法。这周学了一点就放下，下周接着学得先提取一下前面的记忆，这样多次提取，记忆就加深了很多。交叉着在同一时期内学习几门课程，比学完一门再学另一门的效果好得多。 </p><p>读书也是这样。我们应该随时都有好几本书在读。一本书拿过来读上一章就放下，明天换另一本书读，然后过几天再回到这本书接着读。这样每次读的时候都要先提取一下上一次的记忆，最后能记住的东西是最多的。 </p><p>工作最强调专注，每次最好只干一件事儿，一个团队最好先彻底干完一个项目再去干别的项目。这是因为不同事情，不同项目之间的转换成本太高。然而如果是想要记住什么东西的话，一定程度的多任务 —— 当然也不是说每隔几分钟就切换一次 —— 反而是好事，因为转换就要提取，而提取能增加记忆。</p><h2 id="学习心得"><a href="#学习心得" class="headerlink" title="学习心得"></a>学习心得</h2><h3 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h3><blockquote><ol><li><p>如果记忆的东西有意义，会存在所谓的巴拉德效应，也就是说，记忆会随着时间增强。</p></li><li><p>比约克家的理论认为，记忆分为存储强度和提取强度，存储强度不会减弱，而提取强度会随时间减弱。</p></li><li><p>最好的复习是考试。</p></li><li><p>最高效的记忆是先“忘掉”。</p></li><li><p>记忆式的学习，可以搞战略性的多任务。</p></li></ol></blockquote><h3 id="延伸"><a href="#延伸" class="headerlink" title="延伸"></a>延伸</h3><div class="anchor" id="ji-yi-de-chang-qi-zhan-lue"></div><h4 id="记忆的长期战略"><a href="#记忆的长期战略" class="headerlink" title="记忆的长期战略"></a>记忆的长期战略</h4><p>把以前学习过的课程，再在博客上写一遍发表出来，加上自己的观点，这就是提高了记忆的 <em>存储强度</em> 和 <em>提取强度</em>。同时这也是<a href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-2/20180607_zheng-que-de-xue-xi-fang-fa-zhi-you-yi-zhong-feng-ge/#you-xiao-de-fang-fa">有效的学习方法</a>中所提倡的“换一种方式学习”。</p><p>为了进一步加深印象，应该几个学科主题轮流写作，而不应该集中式地只写某一方面的内容。下一次切换回来时，又增加了提取。还可以趁此机会，寻找跨越学科边界的知识的“连接”。</p><p>在存储记忆时，对有意义的东西，尤其是有用的知识，哪怕它再枯燥，也不应该启用大脑的忽略机制。最好在一开始就尽可能把它们都理解一遍，确保它们都已经存储在脑子里。即使后面忘了也没关系，因为一旦有一天这个记忆点被提取（比如电视剧里的人先是失忆了，后来丢失的记忆又被熟悉的事物唤醒了），它还是能继续在脑海中生长，成为长期的记忆。</p><p>我们平时所说的“既视感”就是对“记忆” —— 这里的记忆并非源于真实世界，而是来自想象力 —— 的提取。</p><p>课程发布日期：2016.8.31</p>]]></content>
      
      
      <categories>
          
          <category> 舞空术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 课程笔记 </tag>
            
            <tag> 万维钢·精英日课1 </tag>
            
            <tag> 记忆 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>正确的学习方法只有一种风格</title>
      <link href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-2/20180607_zheng-que-de-xue-xi-fang-fa-zhi-you-yi-zhong-feng-ge/"/>
      <url>/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-2/20180607_zheng-que-de-xue-xi-fang-fa-zhi-you-yi-zhong-feng-ge/</url>
      
        <content type="html"><![CDATA[<h5 id="《万维钢·精英日课2：正确的学习方法只有一种风格》课程笔记"><a href="#《万维钢·精英日课2：正确的学习方法只有一种风格》课程笔记" class="headerlink" title="《万维钢·精英日课2：正确的学习方法只有一种风格》课程笔记"></a>《万维钢·精英日课2：正确的学习方法只有一种风格》课程笔记</h5><p>老一辈的人谈起学习来总爱说什么“书山有路勤为径，学海无涯苦作舟”。现在认同这句话的人好像已经很少了，没人以吃苦耐劳为荣。</p><p>新一代更愿意追求“科学的”学习方法，人们认为学习这件事儿应该是快乐的，最好能寓教于乐，让每个人都能轻松愉快地获得知识。</p><p>所谓的“科学的”方法真的有效吗？</p><div class="anchor" id="ge-xing-hua-de-xue-xi-fang-fa"></div><h2 id="1-个性化的学习方法"><a href="#1-个性化的学习方法" class="headerlink" title="1 个性化的学习方法"></a>1 个性化的学习方法</h2><p>现在有个思想，说既然每个人的性格和喜好不同，那就应该根据每个人的喜好，给他量身定制一套学习方法。用自己最喜欢的方法学习，就好像选择发型、时装和卡拉OK 歌曲的风格一样，这岂不是很好吗？</p><h3 id="1-1-VARK-学习风格"><a href="#1-1-VARK-学习风格" class="headerlink" title="1.1 VARK 学习风格"></a>1.1 VARK 学习风格</h3><p>现在有一个流行的学习风格分类模型叫 VARK，你可以到它的<a href="https://vark-learn.com/" target="_blank" rel="noopener">官方网站</a>测试一下自己喜欢的学习风格。</p><p>VARK 把学习风格分成四种：视觉（visual）、听觉（aural）、读写（read/write）和动手实践（kinesthetic）。如果你是视觉型的，你可能喜欢用看图片的方式学习；听觉型的可能更愿意听老师讲；读写型的人爱用读书和记笔记的方法；动手实践型的人最爱做实验和演示。</p><p>测试结果是学生们的确有不同的类型，还有的学生是混合型。</p><p>问题是，用自己喜欢的风格学习，是不是就能取得更好的学习效果呢？</p><h3 id="1-2-研究的结论"><a href="#1-2-研究的结论" class="headerlink" title="1.2 研究的结论"></a>1.2 研究的结论</h3><p>这个问题已经被人研究过很多年，结论是……否定的。</p><p>2018年5月29号，《科学美国人》网站刊登了一篇研究综述 <a href="#references">[1]</a>，介绍了最新的研究结果。这个研究是这样的 ——</p><blockquote><p>先用 VARK 模型对学生进行测试，发现的确，每个人都有自己喜欢的学习方法。而且这个研究发现，大部分学生，并没有使用自己喜欢的方法。比如有的学生说自己最喜欢动手实践，但是他实际的学习过程里并没有多少动手实践。等于是这些人都在用自己不喜欢的方法学习。</p><p>但是有差不多 1/3 的学生，他们的学习方法跟自己的喜好是匹配的 —— 他测试出来喜欢用哪种方法学习，实际上用的就是那种方法。可以想见他们的学习过程肯定更愉快。那这些学生的学习成绩是不是比别人更好呢？没有！虽然他们在用最喜欢的方法学习，他们可能很享受学习的过程，但他们并没有获得更好的成效。</p></blockquote><p>研究还发现，特别是有一些很多学生都喜欢的方法，恰恰是对谁都没好处。</p><p>比如一个常见的办法是把单词、公式、各种知识点做成一摞卡片，没事儿拿出来翻看，人们认为这个方法有利于加强记忆。还有些学生喜欢使用外部网站检索一些相关的信息，按理说这有利于开拓视野。</p><p><img src="http://q4kbn37nl.bkt.clouddn.com/shan-shi-ka-pian.jpg?e=1580546244&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:peR7mrZW9OM9Sk7GFEkRSUndPe0" alt="闪视卡片"></p><p>但是研究表明这些方法的效果并不好。闪视卡片只是简单的重复，外部信息可能跟你要学的知识点关系没有那么大 —— 它们不能加深对知识的理解和掌握。</p><div class="anchor" id="you-xiao-de-fang-fa"></div><h2 id="2-有效的方法"><a href="#2-有效的方法" class="headerlink" title="2 有效的方法"></a>2 有效的方法</h2><p>心理学家几十年的研究结果，真正有效的方法对每个人都有效，不管你喜不喜欢都有效。总结来说，有效的方法是这样的 ——</p><blockquote><p>第一，<em>对于一定的内容，你要在学习时间上安排一定的间隔，不要突击学习</em>。</p><p>这个间隔学习法的原理是人脑的“<a href="/tools/knowledge-handbook/#ji-yi-qv-xian">记忆曲线</a>”。隔一段时间回想前面学过的，然后再学新的，这个方法最有利于记忆。《万维钢·精英日课1：忘记是为了更好的记住》专门讲过<a href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-1/20160831_wang-ji-shi-wei-le-geng-hao-de-ji-zhu/">这个方法</a>。</p><p>第二，<em>你可以在不同的场景下、用不同的方式学习同一个内容</em>。</p><p>比如说，同一个知识点，在课堂上看老师演示一遍，这是视觉；回家自己精读课本，这是读写；下一堂课再动手操作一下，这样用不同的方法来学习同一个内容，效果很好。</p><p>而且有些特定的内容适合特定的方法。<a href="https://cft.vanderbilt.edu/2011/01/learning-styles-fact-and-fiction-a-conference-report/" target="_blank" rel="noopener">相关研究</a>表明，让学习方法和学习内容相匹配，而不是跟学生的喜好相匹配，才是科学的做法。</p><p>第三，<em>你要经常参加测验，看看自己是不是真的掌握了相关的知识</em>。</p><p>这其实就是<a href="/tools/knowledge-handbook/#ke-yi-lian-xi">刻意练习</a>的“反馈”。不测验，你就无法知道自己是不是真学会了。</p><p>第四，<em>你要把新学到的知识和以前的知识建立连接</em>。</p><p>“<a href="/tools/knowledge-handbook/#qiang-li-yan-du">强力研读</a>”其中有一条就是要把你在读的内容跟以前读过的书连接起来。</p><p>新旧知识连在一起，<a href="/tools/knowledge-formula/#xi-huan">熟悉 + 意外</a>，它才算是真正长在了你的大脑之中。</p></blockquote><p>这些方法并 <em>不神奇</em>。没有用到什么高科技，也不需要家长和老师配合、一惊一乍地给你演个节目才能让你学会一点知识。</p><p>但是这些方法 <em>不简单</em>。而像什么闪视卡片，还有中国老师特别强调的、工整漂亮的课堂笔记，则是简单、可操作、的确能证明你在学习、但是实际上没什么用的方法。</p><p>更值得注意的是，这些方法也 <em>不好玩</em>。</p><div class="anchor" id="wan-wei-gang-de-ping-lun"></div><h2 id="3-万维钢的评论：真正的学习不好玩"><a href="#3-万维钢的评论：真正的学习不好玩" class="headerlink" title="3 万维钢的评论：真正的学习不好玩"></a>3 万维钢的评论：真正的学习不好玩</h2><p>孩子在玩的过程中能学到宝贵的技能。但学习可不全是玩。特别是高年级学生，如果你想掌握什么高级技能，你需要刻意练习 —— 刻意练习不好玩。</p><p><a href="/tools/knowledge-handbook/#ke-yi-lian-xi">刻意练习</a>要求重复训练，重复的东西不好玩，我们看个小说电影电视剧，最不喜欢剧情重复。刻意练习的时候，你一直在遭遇挫折、在犯错误。犯了错误被人指出来，这件事儿一点儿都不愉快。你要不停地重复这个过程，直到真正学会为止。这是一个艰难的过程。</p><p>尼尔·波兹曼的《娱乐至死》中早就提出了类似的观点。这本书是上世纪八十年代出版的，那时候还没有“刻意练习”这个词，但是波兹曼的论述正好说到了点子上，简直振聋发聩。</p><blockquote><p>波兹曼说，从来没有任何一位先贤说应该寓教于乐。教育哲学家从来都认为获得知识是一件困难的事情，学习是要付出代价的，耐力和汗水不可少。</p><p>波兹曼说，教育的目的，本来应该是摆脱现实的奴役！要想获得出色的思辨能力，对年轻人来说绝非易事，这是异常艰苦卓绝的斗争。</p></blockquote><p>学习是一场斗争。这个知识你不懂，这个技能你不会，这个现实你改变不了，你得斗争！你以为看个电视纪录片、看个科幻电影、听一段故事掉几滴眼泪就算斗争了吗？</p><p>现在很多人把看电视当学习。电视节目不是让你学习用的。纪录片吸引观众的唯一办法是讲故事，用讲故事取代说理，用动之以情取代晓之以理。看完故事你得到了精神上的享受，觉得很愉悦，你能记住一件新鲜事儿 —— 但这跟真正的掌握是两码事。</p><p>寓教于乐不是最有效的学习方法。我们喜欢愉快的学习过程，但更喜欢获得真知。管用的方法不好玩，只有付出了努力和汗水，有过挣扎和斗争，才能真正掌握知识。</p><h2 id="学习心得"><a href="#学习心得" class="headerlink" title="学习心得"></a>学习心得</h2><h3 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h3><blockquote><ol><li><p>符合个人喜好的个性化学习方法收效甚微，正确的学习方法只有一种风格。</p></li><li><p>真正有效的学习方法有四个特点：间隔学习、用不同的方式学习、经常测验，以及建立新旧知识的连接。</p></li><li><p>学习好的同学的学习方法都是相似的，学习不好的同学各有各的学习方法。</p></li><li><p>寓教于乐不是最有效的学习方法，只有付出了努力和汗水，有过挣扎和斗争，才能真正掌握知识。</p></li></ol></blockquote><h3 id="延伸"><a href="#延伸" class="headerlink" title="延伸"></a>延伸</h3><div class="anchor" id="li-yong-bo-ke-xue-xi"></div><h4 id="利用博客学习"><a href="#利用博客学习" class="headerlink" title="利用博客学习"></a>利用博客学习</h4><p>正确的学习方法给了我一些使用博客的灵感。</p><p>对应<a href="#you-xiao-de-fang-fa">有效方法</a>的第一条 <code>要在学习时间上安排一定的间隔，不要突击学习</code>，为了加深记忆，博客里的学习笔记应该被经常翻阅和回顾。为此，在书写笔记时应该观点鲜明，同时不宜过度精简，适当保留一些与外部的联系。</p><p>对应第二条 <code>在不同的场景下、用不同的方式学习同一个内容</code>，博客显然是一种额外的学习途径。</p><p>关于第三条 <code>要经常参加测验，看看自己是不是真的掌握了相关的知识</code>，确实可以考虑自建题库。但有的知识说起来简单，却蕴含深刻的道理；有的知识没法给出标准的问题，更没有固定的答案。</p><p>最好的方式是在生活中找问题，利用博客右上角的“全文检索”功能寻找解答，并在定期回顾的过程中梳理和巩固。反过来说，能解决实际问题的知识，才是真正体现价值的知识。</p><p>第四条 <code>要把新学到的知识和以前的知识建立连接</code> 给了我很大的启发。<a href="/tools/knowledge-formula/#chuang-zao">创造是想法的连接</a>，在文章的书写过程中应该经常利用超链接，及时将知识之间的关联关系保留下来，也方便知识回顾时可以跳转 —— 每次点击这样的链接前，最好先回忆回忆下一站是什么，思考思考还可以是什么。</p><p>此外，为了使这些“连接”变得可视化、能够被人们站在高处俯瞰，我创建了一个<a href="/tools/to-do-list/#kai-fa-zhi-shi-tu-pu">待办事项</a>来为博客构建一份<a href="/tools/knowledge-graph/">知识图谱</a>。尽管它一开始看不来并不起眼，但我相信，它会渐渐展现出巨大的作用。</p><h4 id="学习和受教育"><a href="#学习和受教育" class="headerlink" title="学习和受教育"></a>学习和受教育</h4><p>学习和受教育有本质区别。学习是主动获取知识，受教育则是被动的。这也验证了“兴趣是最好的老师”这句话。</p><p>反过来，好的教育应该激起学生的学习兴趣、培养自主学习的强烈意愿、鼓励学生自己独立思考。</p><p>课堂应该是个交流的平台，是个展现知识魅力的舞台。它的时间非常有限，灌输不了太多的知识，并且我们能从“<a href="/tools/knowledge-handbook/#ji-yi-qv-xian">记忆曲线</a>”上看出来，课堂上的知识很可能隔天就忘得差不多了。课堂的时间应该被用来播种，一颗在学生心底里生根、交给他们自己去浇灌的种子。</p><h4 id="学霸与学渣的区别"><a href="#学霸与学渣的区别" class="headerlink" title="学霸与学渣的区别"></a>学霸与学渣的区别</h4><p>“学霸”们热爱学习，不仅天资聪颖，还非常努力，他们永远都是班里的尖子。</p><p>但不得不说，从小到大总有那么些人，没见他们怎么学习，但每次考试都能拿到很高的分数。这样的人叫“学神”。</p><p>学霸和学神都很擅长考试，但学神花的效率显然更高。二者的区别在哪？</p><p><a href="#you-xiao-de-fang-fa">有效的方法</a>中有答案！相较学霸，学神在间隔学习上的单次效果更好，维持的时间更久，回顾的频率低，间隔周期也更长；在学习方式上，学神能以更少的方式获得更好的学习效果；同样的在测验上，学神并不需要那么频繁的反馈，他们有谜一样的自信。在这三点上，显然是学霸的刻苦和努力占尽了优势。</p><p>那么答案就很明显了，学神更擅长的是 <code>建立连接</code>。学神有很强的理解能力，遇到新的知识，能很迅速地将其整合到已有的知识框架里。同时他们思维活跃、懂得思辨，能以更多的角度看待问题。这使他们的知识框架极具弹性，向内可深钻，向外可延伸。</p><p>学霸知道自己的上限在哪，能力内的会做到极致，而遇到能力之外的问题，他们收得住。学神却不甘被所谓的“上限”束缚，他们更乐于挑战那些不可能。</p><p>我认为，学神与学霸的差异，本质上是思维方式的差异，也是大脑性能的差异。这更像是“硬件”上的差异。</p><p>研究得到的是普遍规律，而我们应该相信，世上会有学神这般特例的存在。</p><div class="anchor" id="references"></div><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p>[1] Cindi May, The Problem with “Learning Styles”, Scientific American, May 29, 2018.</p><p>课程发布时间：2018.6.7</p>]]></content>
      
      
      <categories>
          
          <category> 舞空术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 课程笔记 </tag>
            
            <tag> 万维钢·精英日课2 </tag>
            
            <tag> 高手的心法 </tag>
            
            <tag> 学习方法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>龙珠雷达</title>
      <link href="/tools/knowledge-graph/"/>
      <url>/tools/knowledge-graph/</url>
      
        <content type="html"><![CDATA[<h5 id="持续构建的知识图谱"><a href="#持续构建的知识图谱" class="headerlink" title="持续构建的知识图谱"></a>持续构建的知识图谱</h5><div class="graph-container" style="height: 520px;"> <!-- 关系图容器 -->  <div id="graph" style="height: 100%;"></div> <!-- 关系图 -->  <table class="search-tool"> <!-- 搜索工具 -->    <tr>      <th>关键字：</th>      <td>        <input type="text" name="keyword" autocomplete="off" class="icon-right"/> <!-- 关键字输入框 -->        <i class="fas fa-search"></i> <!-- 放大镜图标 -->        <div class="result-list">请输入关键字...</div> <!-- 搜索结果列表 -->        </div>      </td>    </tr>    <tr>      <th>关联数：</th>      <td>        <input type="number" name="min-degree" autocomplete="off"/> <!-- 关联数最小值 -->        <span class="divider">≤ N ≤</span>        <input type="number" name="max-degree" autocomplete="off"/> <!-- 关联数最大值 -->      </td>    </tr>  </table></div><script type="text/javascript" src="/libs/echarts/echarts.min.js"></script>  <!-- 引入 ECharts 库 --><script type="text/javascript">var DEGREE_TO_SHOW_NODE = 1, // 节点的度大于等于这个数值才展示    DEGREE_TO_SHOW_LABEL = 1; // 节点的度大于等于这个数值才展示标签var ACTIVE_COLOR = '#E88C30'; // '#E88C30'var MIN_NODE_SIZE = 10, // 节点大小下限    MAX_NODE_SIZE = 50, // 节点大小上限    NODE_SIZE_INCREASE_STEP = 2; // 节点大小增长步长var DEFAULT_MIN_OPACITY = 0.3, // 透明度下限    DEFAULT_MAX_OPACITY = 0.96, // 透明度上限    DEFAULT_MAX_OPACITY_VALUE = 7, // 大于等于该值能达到透明度上限    OPACITY_INDEX = 2; // 透明度指数，该值越大，透明的节点越多var SEARCH_DELAY = 200, // 搜索延时，单位毫秒    MATCHED_NODE_COLOR = '#FF2A68', // 搜索结果中匹配节点的颜色    MISMATCHED_MAX_OPACITY = 0.5; // 搜索结果中不匹配节点的透明度上限function loadData(callback) { // 数据加载方法  $.when($.get('/data/knowledge-base/nodes.json'), $.get('/data/knowledge-base/lines.json')).done(function(nodesResponse, linesResponse) {    callback({ nodes: nodesResponse[0], lines: linesResponse[0] });  });}function getNodeSize(value) { // 计算节点大小  return Math.min(MIN_NODE_SIZE + (value - 1) * NODE_SIZE_INCREASE_STEP, MAX_NODE_SIZE);}function getNodeOpacity(value, maxOpacity, minOpacity) { // 计算节点透明度  if (maxOpacity === undefined) maxOpacity = DEFAULT_MAX_OPACITY;  if (minOpacity === undefined) minOpacity = DEFAULT_MIN_OPACITY;  return Math.min(minOpacity + Math.pow(value / DEFAULT_MAX_OPACITY_VALUE, OPACITY_INDEX) * (1 - minOpacity), maxOpacity);}var myChart, // 图表实例    data = [], // 存放初始数据    option; // 图表配置信息function search(keyword, min, max) { // 搜索  if (!myChart || !option) return;  if (!keyword) keyword = $('.graph-container .search-tool input[name="keyword"]').val(); // 获取关键字  if (!min) min = $('.graph-container .search-tool input[name="min-degree"]').val(); // 获取关联数最小值  if (!max) max = $('.graph-container .search-tool input[name="max-degree"]').val(); // 获取关联数最大值  var resultData = JSON.parse(JSON.stringify(data)); // 深拷贝，不改变 data 中的数据  resultData = resultData.filter(function(item) { // 筛选满足关联数的节点    console.log(item.value <= parseInt(max))    return (min === '' || item.value >= parseInt(min)) && (max === '' || item.value <= parseInt(max));  });  var $resultList = $('.graph-container .search-tool .result-list');  if (keyword.length > 0) { // 关键字不为空时进行匹配    var results = []; // 列表结果    resultData = resultData.map(function(item) { // 重绘搜索结果数据      if (item.name.indexOf(keyword) >= 0) { // 匹配        results.push(item.name); // 添加结果至列表        return $.extend(item, {          itemStyle: {            color: MATCHED_NODE_COLOR, // 设置节点为高亮颜色            opacity: DEFAULT_MAX_OPACITY // 设置透明度为最大          },          label: {            show: true, // 显示标签            color: MATCHED_NODE_COLOR // 设置标签为高亮颜色          }        });      } else { // 不匹配        return $.extend(item, {          itemStyle: {            opacity: getNodeOpacity(item.value, MISMATCHED_MAX_OPACITY) // 透明化处理          }        });      }    });    if (results.length) { // 如果有结果      $resultList.text(''); // 先将提示信息清空      for (var i = 0; i < results.length; i++) { // 生成结果列表        $resultList.append($('<div>').addClass('item').text(results[i]));      }    } else { // 没有结果      $resultList.text('很遗憾，没有找到结果...');    }  } else { // 关键字为空时    $resultList.text('请输入关键字...');  }  option.series[0].data = resultData;  myChart.setOption(option);}$(function() {  myChart = echarts.init(document.getElementById('graph'));  myChart.showLoading();  loadData(function(response) {    var nodes = response.nodes || []; // 节点信息    var lines = response.lines || []; // 连线信息    // 生成分类信息    var categories = nodes.filter(function(item, index) { // 过滤重复的分类      for (var i = 0; i < index; i++) if (item.category === nodes.category) return false; // 前面出现过相同的名称      return true;    }).map(function(item) {      return { name: item.category };    }).sort(function(a, b) { // 按名称排序      return a.name.localeCompare(b.name);    });    categories.push({ name: '其它' }); // 无分类的节点被归类为“其它”    // 生成图例信息    var legends = categories.map(function(item) {      return item.name;    });    // 生成节点信息    data = nodes.filter(function(item, index) { // 过滤名称重复的节点      for (var i = 0; i < index; i++) if (item.name === nodes[i].name) return false; // 前面出现过相同的名称      return true;    }).map(function(item) {      var name = item.name;      var value = 0; // 节点的数值      lines.forEach(function(line) { // 节点的出度、入度之和        if (name === line.subject || name === line.object) value++;      });      if (value === 0) value = 1; // 至少是 1      var categoryIndex = legends.length - 1; // 分类下标，默认最大值，对应“其它”      for (var i = 0; i < legends.length; i++) {        if (item.category === legends[i]) {          categoryIndex = i;          break;        }      }      return {        name: name, // 节点名称        value: value, // 节点数值        category: categoryIndex, // 节点分类        symbolSize: getNodeSize(value), // 节点大小        itemStyle: { // 图形样式          opacity: getNodeOpacity(value) // 透明度        },        label: { // 标签          show: value >= DEGREE_TO_SHOW_LABEL // 数值足够大时展示        },        link: item.link, // 链接，点击事件时获取        date: item.date      };    }).filter(function(item) {      return item.value >= DEGREE_TO_SHOW_NODE;    });    // 生成连线信息    var links = lines.map(function(item) {      return {        source: item.subject,        target: item.object,        value: item.predicate,        lineStyle: {          color: item.link ? ACTIVE_COLOR : null        },        link: item.link,        date: item.date      };    });    option = {      legend: {        type: 'scroll',        left: 0,        orient: 'vertical',        data: legends      },      tooltip: {        position: [100, 0],        formatter: function(params) {          var str = '';          if (params.dataType === 'node') {            str = params.data.name + '<br/>关联 ' + params.data.value + ' 个节点';          } else if (params.dataType === 'edge') {            str = params.data.source + ' ' + params.data.value + ' ' + params.data.target;          }          if (params.data.link) {            if (str.length > 0) str += '<br/>';            str += '点击查看详情';          }          return str;        }      },      series: [{        type: 'graph',        layout: 'force',        force: {          edgeLength: 30,          repulsion: 50,          gravity: 0.5        },        roam: true,        draggable: true,        focusNodeAdjacency: true,        // edgeSymbol: ['none', 'arrow'],        itemStyle: { // 图形样式          borderColor: '#fff',          borderWidth: 1,          shadowBlur: 10,          shadowColor: 'rgba(0, 0, 0, 0.3)'        },        label: { // 图形上的文本标签          position: 'right',          distance: 2,          formatter: '{b}'        },        edgeLabel: { // 关系边上的文本标签          formatter: '{c}'        },        emphasis: {          lineStyle: {            width: 4          }        },        categories: categories,        data: data,        links: links        // animation: false      }]    };    myChart.setOption(option);    myChart.hideLoading();    myChart.on('click', function(event) { // 绑定点击事件，打开新的标签页跳转至节点 link 指向的地址      var data = event.data || {};      var link = data.link;      if (link) {        window.open(link, '\_blank');      }    });  });  // 页面自动滚动至合适位置  $('html, body').animate({    scrollTop: 250  }, 2000);  // 按关键字搜索  var timer = null;  $('.graph-container .search-tool input[name="keyword"]').on('keydown', function(event) {    $('.graph-container .search-tool .result-list').text('拼命搜索中ing...');    if (timer) window.clearTimeout(timer); // 清空延时器    timer = window.setTimeout(function() {      search(event.target.value);    }, SEARCH_DELAY); // 延时搜索，防止输入过程卡顿  });  // 展示搜索结果列表  $('.graph-container .search-tool input[name="keyword"]').on('click', function() {    var $this = $(this);    var $resultList = $('.graph-container .search-tool .result-list');    $resultList.show(); // 展示结果列表    $(document).on('click', function(event) { // 给 document 绑定点击事件      var $target = $(event.target);      if ($target.closest($resultList).length || $target.is($this)) { // 如果点击的元素是结果列表或者关键字输入框        event.stopPropagation(); // 阻止事件冒泡      } else {        $resultList.hide(); // 隐藏结果列表        $(document).unbind('click'); // 解除点击事件      }    });  });  // 查询结果列表项关联关键字  $('.graph-container .search-tool .result-list').on('click', '.item', function() {    var keyword = $(this).text(); // 获取关键字    $('.graph-container .search-tool input[name="keyword"]').val(keyword); // 将关键字输入框中的内容设置为该关键字    search(keyword); // 按关键字搜索    $(this).hide(); // 隐藏结果列表  });  // 按关联数筛选  $('.graph-container .search-tool input[name="min-degree"]').on('keydown', function(event) { // 最小值    search(undefined, event.target.value);  });  $('.graph-container .search-tool input[name="max-degree"]').on('keydown', function(event) { // 最大值    search(undefined, undefined, event.target.value);  });});</script><style type="text/css">.graph-container {  position: relative;}#articleContent .graph-container table.search-tool,#articleContent .graph-container table.search-tool tr,#articleContent .graph-container table.search-tool tr th,#articleContent .graph-container table.search-tool tr td { /*覆盖 matery.css 中的样式*/  border: 0 !important;  background-color: rgba(0, 0, 0, 0);}#articleContent .graph-container table.search-tool {  position: absolute;  top: 0;  right: 0;  width: auto;}#articleContent .graph-container table.search-tool th,#articleContent .graph-container table.search-tool td {  padding: 3px 0;  font-size: 14px;}#articleContent .graph-container table.search-tool th {  width: 80px;  text-align: right;  font-weight: normal;}#articleContent .graph-container table.search-tool tr td input {  width: 120px;  height: 20px;  margin: 0;  box-sizing: border-box;  border: 1px solid #aaa;  border-radius: 3px;  background-color: #fff;  padding: 3px;  font-size: 12px;}#articleContent .graph-container table.search-tool tr td input:focus { /*覆盖 materialize.min.css 样式*/  border: 1px solid #aaa;  box-shadow: 0 0;}#articleContent .graph-container table.search-tool tr td input.icon-right {  padding-right: 18px;}#articleContent .graph-container table.search-tool tr td input[type="number"] {  width: 36px;  text-align: center;}#articleContent .graph-container table.search-tool tr td input[type="number"]::-webkit-inner-spin-button,#articleContent .graph-container table.search-tool tr td input[type="number"]::-webkit-outer-spin-button { /*覆盖原生样式*/  -webkit-appearance: none;  margin: 0;}#articleContent .graph-container table.search-tool tr td span.divider {  width: 40px;  display: inline-table;  background-color: rgba(0, 0, 0, 0);  text-align: center;  font-size: 12px;}#articleContent .graph-container table.search-tool tr td .fas {  position: absolute;  top: 9px;  right: 7px;  font-size: 12px;  color: #aaa;}#articleContent .graph-container table.search-tool tr td .result-list {  position: absolute;  top: 30px;  right: 0;  min-width: 200px;  max-height: 240px;  display: none;  overflow-y: auto;  border-radius: 6px;  box-shadow: 0 0 5px #aaa;  background-color: #fff;  padding: 10px 0;  color: #888;  line-height: 24px;  text-indent: 10px;}#articleContent .graph-container table.search-tool tr td .result-list .item {  width: 100%;  padding: 0 10px;  cursor: pointer;}#articleContent .graph-container table.search-tool tr td .result-list .item:hover {  background-color: #fefede;}</style>]]></content>
      
      
      <categories>
          
          <category> 万能胶囊 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 知识 </tag>
            
            <tag> 图谱 </tag>
            
            <tag> 联系 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>筋斗云</title>
      <link href="/tools/to-do-list/"/>
      <url>/tools/to-do-list/</url>
      
        <content type="html"><![CDATA[<h5 id="待办事项"><a href="#待办事项" class="headerlink" title="待办事项"></a>待办事项</h5><p>通常文章写作的优先级为★★☆☆☆。</p><div class="anchor" id="hexo-tag-echarts3-cha-jian-yi-liu-wen-ti"></div><h2 id="hexo-tag-echarts3-插件遗留问题"><a href="#hexo-tag-echarts3-插件遗留问题" class="headerlink" title="hexo-tag-echarts3 插件遗留问题"></a>hexo-tag-echarts3 插件遗留问题</h2><p>在构建知识图谱的过程中发现，<code>hexo-tag-echarts3</code> 插件引入的 ECharts 功能不全，且该插件的所有历史版本都存在同样的问题。</p><p>优先级：★☆☆☆☆<br>起因：《构建知识图谱》中遇到的 <a href="/hexo/knowledge-graph/build/#hexo-tag-echarts3-cha-jian-yi-liu-wen-ti">hexo-tag-echarts3 插件问题</a><br>提出时间：2020.2.3</p><hr><h2 id="√-知识图谱支持搜索"><a href="#√-知识图谱支持搜索" class="headerlink" title="√ 知识图谱支持搜索"></a>√ 知识图谱支持搜索</h2><p>知识图谱支持按关键字进行模糊搜索，匹配包含关键字的节点，并突出展示。</p><p>优先级：★★★☆☆<br>起因：随着节点数量的增加，凭肉眼寻找节点变得困难。<br>过程：<a href="/hexo/knowledge-graph/support-search/">《知识图谱支持搜索》</a><br>成果：<a href="/tools/knowledge-graph/">知识图谱</a><br>提出时间：2020.2.7<br>开始时间：2020.2.7<br>完成时间：2020.2.8</p><div class="anchor" id="kai-fa-zhi-shi-tu-pu"></div><h2 id="√-构建知识图谱"><a href="#√-构建知识图谱" class="headerlink" title="√ 构建知识图谱"></a>√ 构建知识图谱</h2><p>以文章为载体，构建一份知识图谱，保存知识的“连接”，以关系图的形式展现。</p><p>优先级：★★★★☆<br>起因：《万维钢·精英日课2：正确的学习方法只有一种风格》给我的<a href="(/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-2/20180607_zheng-que-de-xue-xi-fang-fa-zhi-you-yi-zhong-feng-ge/#li-yong-bo-ke-xue-xi">灵感</a><br>过程：<a href="/hexo/knowledge-graph/build/">《构建知识图谱》</a><br>成果：<a href="/tools/knowledge-graph/">知识图谱</a><br>提出时间：2020.2.1<br>开始时间：2020.2.2<br>结束时间：2020.2.3</p>]]></content>
      
      
      <categories>
          
          <category> 万能胶囊 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 待办事项 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>“思维模式”理论</title>
      <link href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-2/20180329_ti-gao-xue-xi-cheng-ji-de-zui-jian-dan-xin-fa/"/>
      <url>/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-2/20180329_ti-gao-xue-xi-cheng-ji-de-zui-jian-dan-xin-fa/</url>
      
        <content type="html"><![CDATA[<h5 id="《万维钢·精英日课2：提高学习成绩的最简单心法》课程笔记"><a href="#《万维钢·精英日课2：提高学习成绩的最简单心法》课程笔记" class="headerlink" title="《万维钢·精英日课2：提高学习成绩的最简单心法》课程笔记"></a>《万维钢·精英日课2：提高学习成绩的最简单心法》课程笔记</h5><p>心理学家们做了一项有史以来投入力量最大、最严格的实验，来验证斯坦福大学心理学教授卡罗尔·德韦克（Carol S. Dweck）提出的“思维模式”理论（德韦克的招牌理论，甚至在她将来去世以后可以把这个理论刻在墓碑上）。</p><p>这项研究的预印本被英国心理学会研究文摘的一个撰稿人看到了，所以我们能提前得知 <a href="#references">[1]</a>。而论文的原文被研究者从预印本服务器上撤掉了，可能在做最后的修改。</p><div class="anchor" id="li-lun"></div><h2 id="1-理论"><a href="#1-理论" class="headerlink" title="1 理论"></a>1 理论</h2><p>德韦克的理论说，人对智能的思维模式可以分为两种。一种是所谓“成长思维模式（growth mindset）”，就是你认为学习不在天赋，而在于努力，只要努力用功，什么东西都能学会。另一种叫“固定思维模式（fixed mindset）”，就是你特别相信天赋的作用，擅长的东西就是擅长，要是不擅长怎么学都没用。</p><p><img src="http://q4kbn37nl.bkt.clouddn.com/growth-mindset-and-fixed-mindset.jpg?e=1580460849&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:THYCZtZBqA5PX-tZbWvTx1OiYKQ" alt="“思维模式”理论"></p><p>德韦克证明，成长思维模式有利于人的成长。而且她还建立了因果关系，也就是说只要你能向一个孩子灌输成长思维模式，你就能促进他的成长。</p><p>这个理论已经非常成熟了，很早之前就出了一本书，这本书的中文版都至少有三个版本，最新的一版叫《终身成长：重新定义成功的思维模式》（MINDSET: THE NEW PSYCHOLOGY OF SUCCESS）。</p><p><img src="http://q4kbn37nl.bkt.clouddn.com/mindset-the-new-psychology-of-success.jpg?e=1580460741&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:zQrMR_dkyeFKz5YBZ8rv66ium5g" alt="德韦克和她的著作《终身成长：重新定义成功的思维模式》"></p><div class="anchor" id="shi-yan"></div><h2 id="2-实验"><a href="#2-实验" class="headerlink" title="2 实验"></a>2 实验</h2><p>这项实验可谓心理学界的一桩盛事。它由 23 位心理学界的领军人物同时主导，其中包括德韦克，还有以“坚毅力（grit）”概念闻名的安杰拉·达克沃思（Angela Duckworth）等等。</p><blockquote><p>研究者从美国的 65 所中学里选了 12542 个九年级学生，把他们随机分成两组。一组叫实验组，他们看了关于成长思维模式的两段视频，视频告诉他们人的智能不是固定的，只要你愿意学习就可以变得更聪明。另一组叫控制组，也看了两段视频，但他们看的是一般的介绍大脑的视频，并没有涉及成长思维模式。</p><p>这个实验被设计得非常严格，就好像医学界测试新药一样。研究者请了独立的第三方来监督和管理整个实验，然后这还是一个“三盲”实验 —— 参加实验的学生、老师和最后分析实验数据的这三拨人，都不知道谁被分到了哪个组，不知道实验的目的是什么。</p><p>实验结果，学期结束的时候，实验组的平均 GPA 比控制组高出了 0.03 分。这个差距其实很小，美国的 GPA 系统中 A = 4 分，一般学生拿 3 分左右的话，0.03 分就相当于成绩高了 1% 而已。</p></blockquote><p>这个效应当然很微弱，可是考虑到这是一项针对一万多人进行的实验，它是一个显著的效应。只是让学生看了两段视频而已，这等于是不费吹灰之力就把成绩提高了 1%。对应到高考，这就相当于是 700 和 707 分的差别。</p><p>而且实验对差生的影响更大，GPA 高了 0.08 分。实验组期末考试得 D 和 F 的概率还降低了 3%。另外，有些学生在看了视频之后，更愿意选择有挑战性的课程。</p><p>研究者认为这个看视频的方法实在太简便易行了，应该在全国推广，等于是几乎不花一分钱就能提高学习成绩。</p><p><em>这项实验最大的意义在于再次证明了“成长思维模式”对人的干预确实是有效的。</em></p><h2 id="3-应用"><a href="#3-应用" class="headerlink" title="3 应用"></a>3 应用</h2><h3 id="3-1-思维模式可以被固定化"><a href="#3-1-思维模式可以被固定化" class="headerlink" title="3.1 思维模式可以被固定化"></a>3.1 思维模式可以被固定化</h3><p>有一个研究 <a href="#references">[2]</a> 说，如果系统性地把学生的思维模式给固定化，他们的整个学业都会发生明显变化。</p><p>咱们中国的教育系统默认每个孩子都有可能上大学，一直到高中，大部分人都是奔着大学去的，无非是最后能不能考上。而有些国家则是很早就把学生强行分流。</p><blockquote><p>波兰的学生到了一定年级之后，如果有关当局判断他不是上大学的料，将来应该去当个蓝领工人，他就会被送到职业学校去。</p><p>这些被判定“不是学习的料”的孩子，等于是被强行设定了“固定思维模式”。结果他们的学习成绩果然直线下降。有研究者认为美国基础教育之所以搞不好，也跟很多家长一开始就不打算让孩子上大学有关。</p></blockquote><div class="anchor" id="si-wei-mo-shi-hui-ying-xiang-tai-du"></div><h3 id="3-2-思维模式会影响态度"><a href="#3-2-思维模式会影响态度" class="headerlink" title="3.2 思维模式会影响态度"></a>3.2 思维模式会影响态度</h3><p>思维模式会影响人们对工作中各种挑战的态度 <a href="#references">[3]</a>。</p><p><em>固定思维模式的人，在面对一个任务的时候，会认为这个任务是对他个人能力的一种测试。比如让他考试，他会认为考试是证明他行还是不行。他非常担心万一搞砸了别人就会质疑他的能力。他很容易把任务当成威胁。</em></p><p><em>而成长思维模式的人，则会把任务当成一个学习的机会。他并不是通过任务来证明什么，而是通过任务来提高自己。他把任务当成机会，结果他的表现会好得多。</em></p><div class="anchor" id="si-wei-mo-shi-hui-shou-wai-jie-ying-xiang"></div><h3 id="3-3-思维模式会受外界影响"><a href="#3-3-思维模式会受外界影响" class="headerlink" title="3.3 思维模式会受外界影响"></a>3.3 思维模式会受外界影响</h3><p>思维模式是可以被外界影响的。有一个著名的例子 <a href="#references">[4]</a>。</p><blockquote><p>有一年，普林斯顿大学给刚入学的大一新生增加了一项考试。普林斯顿大学是美国最好的大学之一，这些人好不容易进来，可以说是优中选优的幸运儿，但是没想到，学校居然又给了个考试。</p><p>当然这次考试的真实目的其实是做个心理学实验。学校对一半的学生说，考试是为了确认他们是否真的够资格上普林斯顿。对另外一半学生，学校说的是你们能上普林斯顿已经很厉害了，但我们还要看看你到底有多牛，这些题比较难，看你能做到什么程度。</p><p>结果，第一组学生只答对了70%的题，而第二组的学生答对了90%的题。仅仅是考试前对心态的一个简单影响，就有这么大的作用。</p></blockquote><p>有大量的研究证明，人的智商是很难提高的。而成长思维模式能让人表现更好，是因为人的表现毕竟不仅仅是智商决定的，努力也很重要。</p><p>所以如果你是老师或者学生家长，可以给孩子讲讲，人要有成长的思维模式、人的智能是可以改变的。</p><h2 id="4-操作"><a href="#4-操作" class="headerlink" title="4 操作"></a>4 操作</h2><p>万维钢看了研究报道后，第一时间和儿子进行了一番对话 ——</p><blockquote><p>我问他，你说聪明的人是天生聪明呢，还是学习了之后变得聪明？我儿子马上说是学习之后变得聪明。他说，李白不就是听了铁杵磨成针的故事才开始努力学习的吗？我一看还行啊！</p><p>我还特地考证了一下，李白“铁杵磨成针”的故事是出自宋朝祝穆的一本书 <a href="#references">[5]</a>，原文一开头就说“世传李白读书象耳山中……”，所以这个故事很可能只是传说。古代就算技术落后，也不至于拿个那么粗的铁杵磨针，而且人们公认李白是个天才。怕这个故事的真相毁了儿子三观，所以得对他保密。</p></blockquote><p>德韦克发明了一个特别简单、但是更有效的灌输成长思维模式的方法 ——</p><blockquote><p>当你的小孩完成了一项任务，比如说考试考得不错，或者作业写得好，你要给他一个口头的表扬。这个表扬方式非常关键，你要字斟句酌。</p><p>如果你表扬孩子聪明，“这题你都会做？我儿子太聪明了！” —— 他就会陷入固定思维模式之中。他会把以后每一项任务都当成证明自己聪明或者不聪明的测试，他会非常害怕被证明不聪明，他会尽量选择简单的任务。</p><p>所以你一定一定，要表扬他 <em>努力</em>。“不错啊！这次做得很好，看来你下了很大功夫，很努力！下次继续！只要你努力，你就什么事都能做成！”</p></blockquote><p>德韦克的研究表明，这么说，你才能在他心中埋下成长思维模式的种子。他会把每一项任务都当成成长的机会，他会愿意花更长的时间钻研难题，他会主动选择困难的任务。</p><p><img src="http://q4kbn37nl.bkt.clouddn.com/growth-mindset-and-fixed-mindset_2.jpg?e=1580925458&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:S7A7ojsMhTAkartOEgJbxaNvdwk" alt="“固定思维模式”和“成长思维模式”"></p><h2 id="学习心得"><a href="#学习心得" class="headerlink" title="学习心得"></a>学习心得</h2><h3 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h3><blockquote><ol><li><p>卡罗尔·德韦克的“思维模式”理论说，人对智能的思维模式可以分为两种：一种是“成长思维模式（growth mindset）”，就是认为学习不在天赋，而在于努力，只要努力用功，什么东西都可以学会；另一种是“固定思维模式（fixed mindset）”，就是你特别相信天赋的作用，擅长的东西就是擅长，要是不擅长，怎么学都没用。</p></li><li><p>固定思维模式的人，在面对一项任务时，会认为这是对他个人能力的一种测试。他非常担心万一搞砸了别人就会质疑他的能力。他很容易把任务当威胁。</p></li><li><p>成长思维模式的人会把任务当成一个学习的机会。他并不是通过任务来证明什么，而是通过任务来提高自己。他把任务当成机会，结果他的表现会好很多。</p></li><li><p>智商很难提高，但是学习成绩和人生的成就是可以提高的。人的表现不仅仅由智商决定，努力也很重要。</p></li><li><p>我们应该告诉孩子，人要有成长思维模式、人的智能是可以改变的。</p></li></ol></blockquote><h3 id="延伸"><a href="#延伸" class="headerlink" title="延伸"></a>延伸</h3><h4 id="实验原文"><a href="#实验原文" class="headerlink" title="实验原文"></a>实验原文</h4><p>这项实验论文现已发布，原文<a href="https://digest.bps.org.uk/2018/03/23/this-cheap-brief-growth-mindset-intervention-shifted-struggling-students-onto-a-more-successful-trajectory/" target="_blank" rel="noopener">链接</a>。</p><div class="anchor" id="references"></div><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p>[1] Bradley Busch, This cheap, brief “growth mindset” intervention shifted struggling students onto a more successful trajectory, The BPS Research Digest, 3/23/2018. </p><p>[2] The Smartest Kids in the World: And How They Got That Way by Amanda Ripley. </p><p>[3] Ungifted: Intelligence Redefined by Scott Barry Kaufman.</p><p>[4] Top Dog: The Science of Winning and Losing.</p><p>[5] 宋·祝穆《方舆胜览·眉州·磨针溪》：世传李白读书象耳山中，学业未成，即弃去，“过是溪，逢老媪方磨铁杵，问之，曰：‘欲作针。’太白感其意，还卒业”。</p><p>课程发布日期：2018.3.29</p>]]></content>
      
      
      <categories>
          
          <category> 舞空术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 课程笔记 </tag>
            
            <tag> 万维钢·精英日课2 </tag>
            
            <tag> 高手的心法 </tag>
            
            <tag> 思维模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自制 SVG 图标</title>
      <link href="/design/zi-zhi-svg-tu-biao/"/>
      <url>/design/zi-zhi-svg-tu-biao/</url>
      
        <content type="html"><![CDATA[<p>新博客搭建的第 N 天，大体上用着还挺顺手，唯一的缺憾就是少一个自己专属的 LOGO。之前因为没有准备，索性把 LOGO 这玩意儿给去掉了，以无 LOGO 状态“裸跑”了好一阵子。可好些天下来了，一想到这茬，还是觉也睡不好，饭也吃不香（主要是让新型冠状病毒给禁足了，在家闲得慌）。</p><p>博主从小是个“龙珠”迷，陪伴着长大的。趁着这些天，结合“龙珠”里的概念，对博客整体做了<a href="/tools/map/">内容建设</a>和<a href="/hexo/build/#tian-jia-long-zhu-su-cai">改造</a>。</p><p>可是思来想去，还是急需一个 LOGO。</p><p>博主不是艺术专业出身，没有什么设计和绘画方面的经验。小时候涂涂教科书、出出黑板报、拿拿儿童绘画奖的那些“光辉事迹”，我也统统都不提了。/doge/doge/doge</p><p>可 LOGO 再怎么说，也是 <em>一个品牌的形象、一个网站的灵魂</em>。今儿无论如何，都要把这事儿给办喽！~</p><h2 id="1-LOGO-选型"><a href="#1-LOGO-选型" class="headerlink" title="1 LOGO 选型"></a>1 LOGO 选型</h2><p>LOGO 设计的第一原则就是要尽可能贴近主题。</p><p>我秉承着“简单、抽象、抓重点”的设计理念，在脑海中迅速绘制了一副草图 ——</p><blockquote><p>这不“龙珠”嘛，那就画一球儿，中间加一个标准的五角星。好办！</p><p>说实话，它刚开始的样子，看上去可真像个红印章。</p><p><img src="http://q4kbn37nl.bkt.clouddn.com/hong-yin-zhang.png?e=1580422290&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:5HvMM_gPnZdxNJw5rWoFQ_s4Kss" alt="红印章"></p></blockquote><p>可正当我打算把我的设想实现在电脑屏幕上的时候，我意识到了一个根本性问题：什么样的图片格式才适合用来承载一个 LOGO 呢？</p><div class="anchor" id="tu-pian-ge-shi-xuan-xing"></div><h3 id="1-1-图片格式选型"><a href="#1-1-图片格式选型" class="headerlink" title="1.1 图片格式选型"></a>1.1 图片格式选型</h3><p>常见的图片文件格式各有各的特点。</p><table><thead><tr><th>格式</th><th>文件后缀</th><th>伸缩后保真</th><th>透明色</th><th>动画</th></tr></thead><tbody><tr><td>JPEG</td><td><code>.jpg</code></td><td>不支持</td><td>不支持</td><td>不支持</td></tr><tr><td>PNG</td><td><code>.png</code></td><td>不支持</td><td>支持</td><td>不支持</td></tr><tr><td>SVG</td><td><code>.svg</code></td><td>支持</td><td>支持</td><td>不支持</td></tr><tr><td>GIF</td><td><code>.gif</code></td><td>不支持</td><td>支持</td><td>支持</td></tr></tbody></table><p>Matery 主题的博主<a href="https://blinkfox.github.io/" target="_blank" rel="noopener">闪烁之狐</a>使用的 LOGO 是 PNG 格式，先入为主，这一度成为我的第一选择。而在慎重考虑了更多的因素之后，我改变了我最初的选择 ——</p><blockquote><ol><li><p>我希望它在 <em>缩小和放大后图像能够保真</em>，有更好的通用性，因为我的 LOGO 可能会使用在不同的区域，有大有小。</p></li><li><p>它还需要 <em>支持透明色</em>，由于“龙珠”是一个需要立体感的圆，它得是空心的，而且允许有点光源形成的光亮效果。</p></li><li><p>而我对色彩种类和动画上没有特别的要求，支持白色的静态图片即可。</p></li></ol></blockquote><p>最后我选择了 SVG 格式。</p><div class="anchor" id="svg-jian-jie"></div><h3 id="1-2-SVG-简介"><a href="#1-2-SVG-简介" class="headerlink" title="1.2 SVG 简介"></a>1.2 SVG 简介</h3><p>SVG（Scalable Vector Graphics，可缩放矢量图）算是比较最火热的图像文件格式。</p><p>它基于 XML（Extensible Markup Language），由 World Wide Web Consortium（W3C）联盟进行开发。严格来说应该是一种开放标准的矢量图形语言，可让你设计激动人心的、高分辨率的Web图形页面。</p><p>用户可以直接用代码来描绘图像，可以用任何文字处理工具打开 SVG 文件，通过改变部分代码来使图像具有交互功能，并可以随时插入到 HTML 中通过浏览器进行查看。</p><h3 id="1-3-作图工具选择"><a href="#1-3-作图工具选择" class="headerlink" title="1.3 作图工具选择"></a>1.3 作图工具选择</h3><p>由于对 LOGO 的设想非常简单，工具的挑选上并没有什么特殊的要求，能画、能存、简单易用就行。</p><p>于是我在一番百度之后，选择了一款界面简洁的 <a href="https://svg.wxeditor.com/" target="_blank" rel="noopener">SVG 在线编辑工具</a>。</p><p><img src="http://q4kbn37nl.bkt.clouddn.com/svg-wxeditor-introduction.png?e=1580424605&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:Ys9YSMTqOkqtzOTugK5tJfHItmM" alt="SVG 作图工具图示"></p><h2 id="2-LOGO-制作"><a href="#2-LOGO-制作" class="headerlink" title="2 LOGO 制作"></a>2 LOGO 制作</h2><h3 id="2-1-SVG-图标设计"><a href="#2-1-SVG-图标设计" class="headerlink" title="2.1 SVG 图标设计"></a>2.1 SVG 图标设计</h3><p>我使用圆、五角星和简单的曲线，绘制了一个“龙珠”的图案。</p><p><img src="http://q4kbn37nl.bkt.clouddn.com/svg-wxeditor.png?e=1580256074&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:keM96mJ9YV3Qhx2MO8a9I2mGHTg" alt="SVG 图标制作"></p><p>画布的大小是 <code>200px × 200px</code>。大圆的直径要比 <code>200px</code> 稍小一些，线粗 <code>8px</code>。位于正中央的五角星最大，线粗 <code>5px</code>；周围的 3 个五角星则稍小一些。左下角添加了一段弧线，显得“龙珠”更加立体。</p><p>此外，我还在大圆左上角的位置添加了一块圆形的阴影，模拟点光源照射开来的图案，给整个“龙珠”增添了色彩和立体感。</p><h3 id="2-2-使用-LOGO"><a href="#2-2-使用-LOGO" class="headerlink" title="2.2 使用 LOGO"></a>2.2 使用 LOGO</h3><p>将文件下载保存为 <code>logo.svg</code>，添加至 Hexo 项目中的 <code>themes/matery/source/medias</code> 目录下，并修改 <code>themes/matery/_config.yml</code> 主题配置文件。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># Configure website favicon and LOGO</span><span class="token comment" spellcheck="true"># 配置网站favicon和网站LOGO</span><span class="token key atrule">favicon</span><span class="token punctuation">:</span> /favicon.png <span class="token comment" spellcheck="true"># 请忽略我，网页图标不是这篇文章的主角</span><span class="token key atrule">logo</span><span class="token punctuation">:</span> /medias/logo.svg <span class="token comment" spellcheck="true"># 添加 LOGO，看我看我！！</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>这样便自制了一个效果还不错的 LOGO 图标（见网站左上角）。</p><p><img src="http://q4kbn37nl.bkt.clouddn.com/my-logo.png?e=1580266436&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:3A5J3iBLHvQAcWutZT5f6OwfULk" alt="自制“龙珠”主题 LOGO 效果图"></p><h2 id="3-查看源代码"><a href="#3-查看源代码" class="headerlink" title="3 查看源代码"></a>3 查看源代码</h2><p>在之前的 <a href="#svg-jian-jie">SVG 简介</a>中，你可曾注意到，SVG 格式的文件是使用 <code>XML</code> 语言来描述的？</p><p>我们何不尝试读一读其中的代码呢？</p><p>用编辑器打开保存的 <code>logo.svg</code> 文件，可以查看它的源代码。</p><pre class="line-numbers language-svg"><code class="language-svg"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!-- Created with Method Draw - http://github.com/duopixel/Method-Draw/ --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>defs</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>radialGradient</span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0.25<span class="token punctuation">"</span></span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0.382<span class="token punctuation">"</span></span> <span class="token attr-name">spreadMethod</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>pad<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>svg_8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token comment" spellcheck="true">&lt;!-- 圆形阴影区域 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>stop</span> <span class="token attr-name">offset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">stop-color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#ffffff<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token comment" spellcheck="true">&lt;!-- 圆心颜色 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>stop</span> <span class="token attr-name">offset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">stop-color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>rgba(255, 255, 255, .3)<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token comment" spellcheck="true">&lt;!-- 圆周颜色 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>radialGradient</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>defs</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>g</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>background<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>-1<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>202<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>202<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>canvas_background<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>g</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>canvasGrid<span class="token punctuation">"</span></span> <span class="token attr-name">display</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>svg_6<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100%<span class="token punctuation">"</span></span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">stroke-width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>url(#gridpattern)<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>g</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>g</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>g</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Layer 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ellipse</span> <span class="token attr-name">fill-opacity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0.6<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>url(#svg_8)<span class="token punctuation">"</span></span> <span class="token attr-name">stroke-width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>8<span class="token punctuation">"</span></span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>svg_1<span class="token punctuation">"</span></span> <span class="token attr-name">rx</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>90<span class="token punctuation">"</span></span> <span class="token attr-name">ry</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>90<span class="token punctuation">"</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#fff<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token comment" spellcheck="true">&lt;!-- 大圆 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#ffffff<span class="token punctuation">"</span></span> <span class="token attr-name">stroke-width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>m51.03751,91.14299l37.81491,0l11.6851,-35.92401l11.6851,35.92401l37.81491,0l-30.59285,22.202l11.6857,35.92401l-30.59286,-22.20261l-30.59286,22.20261l11.68571,-35.92401l-30.59286,-22.202z<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>svg_2<span class="token punctuation">"</span></span> <span class="token attr-name">fill-opacity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0.3<span class="token punctuation">"</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#fff<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token comment" spellcheck="true">&lt;!-- 中间的大五角星 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#ffffff<span class="token punctuation">"</span></span> <span class="token attr-name">stroke-width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span> <span class="token attr-name">stroke-opacity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>null<span class="token punctuation">"</span></span> <span class="token attr-name">fill-opacity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0.3<span class="token punctuation">"</span></span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>m38.77375,53.14875l14.36866,0l4.44003,-13.65017l4.44003,13.65017l14.36866,0l-11.62447,8.43618l4.44026,13.65017l-11.62448,-8.43641l-11.62447,8.43641l4.44026,-13.65017l-11.62448,-8.43618z<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>svg_3<span class="token punctuation">"</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#fff<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token comment" spellcheck="true">&lt;!-- 左上角的小五角星 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#ffffff<span class="token punctuation">"</span></span> <span class="token attr-name">stroke-width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span> <span class="token attr-name">stroke-opacity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>null<span class="token punctuation">"</span></span> <span class="token attr-name">fill-opacity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0.3<span class="token punctuation">"</span></span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>m130.74999,42.98297l8.78624,0l2.71501,-8.3469l2.71502,8.3469l8.78624,0l-7.10821,5.1586l2.71516,8.34689l-7.10821,-5.15874l-7.10821,5.15874l2.71516,-8.34689l-7.1082,-5.1586z<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>svg_4<span class="token punctuation">"</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#fff<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token comment" spellcheck="true">&lt;!-- 右上角的小五角星 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#ffffff<span class="token punctuation">"</span></span> <span class="token attr-name">stroke-width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span> <span class="token attr-name">stroke-opacity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>null<span class="token punctuation">"</span></span> <span class="token attr-name">fill-opacity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0.3<span class="token punctuation">"</span></span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>m146.24873,128.01l10.06602,0l3.11047,-9.56267l3.11048,9.56267l10.06601,0l-8.14356,5.90998l3.11064,9.56267l-8.14357,-5.91014l-8.14356,5.91014l3.11064,-9.56267l-8.14357,-5.90998z<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>svg_5<span class="token punctuation">"</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#fff<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token comment" spellcheck="true">&lt;!-- 右下角的小五角星 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#ffffff<span class="token punctuation">"</span></span> <span class="token attr-name">stroke-width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>8<span class="token punctuation">"</span></span> <span class="token attr-name">stroke-opacity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>null<span class="token punctuation">"</span></span> <span class="token attr-name">fill-opacity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0.61<span class="token punctuation">"</span></span> <span class="token attr-name">opacity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0.5<span class="token punctuation">"</span></span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>m32.50126,127.10812c12.33775,34.10842 46.26656,44.01087 45.49545,43.89053<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>svg_15<span class="token punctuation">"</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#fff<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token comment" spellcheck="true">&lt;!-- 左下角的弧线 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>g</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>&lt;g&gt;</code> 元素表示一个图层。</p><p><code>&lt;radialGradient&gt;</code> 元素是左上角的圆形阴影，它的 <code>cx</code> 和 <code>cy</code> 属性确定了圆心的位置；内部的 <code>&lt;stop&gt;</code> 元素描述了阴影渐变的圆心和圆周两端。</p><p><code>&lt;ellipse&gt;</code> 元素是大圆，其中 <code>cx</code>、<code>cy</code> 属性代表圆心的位置，<code>rx</code>、<code>ry</code> 属性描述了椭圆在横、竖方向上的直径。</p><p>若干个 <code>&lt;path&gt;</code> 元素是五角星，<code>d</code> 属性中的字符 <code>m</code> 表示 <em>画笔的起始位置</em>，字符 <code>z</code> 表示 <em>自动闭合</em>，中间的数字是一系列的点的坐标。</p><p><code>&lt;ellipse&gt;</code> 和 <code>&lt;path&gt;</code> 元素的 <code>stroke-width</code> 属性就是上文提到的线粗。</p><p>如果你制作的图标线条是黑色的，将 <code>&lt;ellipse&gt;</code> 和 <code>&lt;path&gt;</code> 元素的 <code>stroke</code> 线条颜色属性值修改为 <code>#fff</code> 白色即可。</p><p>如此看来，SVG 格式的文件很有逻辑性可言，它告描述了渲染的规则和步骤，它比一般的“像素坐标 + 颜色”的描述方式更高级。</p>]]></content>
      
      
      <categories>
          
          <category> 太阳拳 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设计 </tag>
            
            <tag> 制作 </tag>
            
            <tag> SVG </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>灰度认知和黑白决策</title>
      <link href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-3/20190326_luo-ji-si-wei-5-hui-du-ren-zhi-he-hei-bai-jue-ce/"/>
      <url>/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-3/20190326_luo-ji-si-wei-5-hui-du-ren-zhi-he-hei-bai-jue-ce/</url>
      
        <content type="html"><![CDATA[<h5 id="《万维钢·精英日课3：逻辑思维5：灰度认知和黑白决策》课程笔记"><a href="#《万维钢·精英日课3：逻辑思维5：灰度认知和黑白决策》课程笔记" class="headerlink" title="《万维钢·精英日课3：逻辑思维5：灰度认知和黑白决策》课程笔记"></a>《万维钢·精英日课3：逻辑思维5：灰度认知和黑白决策》课程笔记</h5><div class="anchor" id="hui-du-ren-zhi-he-hei-bai-jue-ce"></div><p>我们知道世界不是非黑即白的，其中有很多灰色地带，所以我们必须有灰度的认知 —— 可是如果要做事的话，却不能是灰色的。</p><blockquote><p>天气预报说今天下雨的概率是40%，那意思就是可能下雨也可能不下雨，这就是灰度认知。<br>可是在行动上，你要么带伞，要么不带伞，你不可能带一把40%的伞，这就是黑白决策。</p></blockquote><p>“思圆形方”就是灰度认知，黑白决策。</p><blockquote><p>1957年，毛泽东访问苏联，当面向赫鲁晓夫介绍了自己可能的几个接班人。说刘少奇、周恩来、朱德，都是有优点也有缺点；唯独提到邓小平，毛泽东说的都是优点。毛泽东说邓小平“……思圆行方；既有原则性，又有高度的灵活性；柔中有刚，绵里藏针。很有发展前途。”</p></blockquote><p>到底怎么个思圆行方，怎么把握原则性和灵活性呢？这里面有逻辑。</p><div class="anchor" id="wei-shen-me-yao-jiang-yuan-ze"></div><h2 id="1-为什么要讲原则"><a href="#1-为什么要讲原则" class="headerlink" title="1 为什么要讲原则"></a>1 为什么要讲原则</h2><p>讲原则过了头可能有缺点，比如说做事太过死板、有点迂腐甚至有点“愣”；但是不讲原则，就没有优点。</p><h3 id="1-1-讲原则的优点"><a href="#1-1-讲原则的优点" class="headerlink" title="1.1 讲原则的优点"></a>1.1 讲原则的优点</h3><p>讲原则，你才能讲逻辑，你才是讲理的，你说的话才值得听，你的行为才是可预期的，别人才会和你合作。</p><p>如果一个人没原则，什么事情都干得出来，那就绝对不能让他承担任何重要的责任，这样的人就很难在社会上立足。</p><blockquote><p>尤金伲亚·程认为，讲原则，最符合逻辑的做法，是效法数学。数学讲“公理” —— 也就是无需证明的事实，是逻辑推导的起点。比如欧几里得，就是从五条最基本的公理出发，推导出整个平面几何学。我们的原则也应该构成一个合理的逻辑体系，最好能从几条基本原则出发推导出整个行动指南。</p></blockquote><div class="anchor" id="zhao-yuan-ze-de-fang-fa"></div><h3 id="1-2-找到自己的原则"><a href="#1-2-找到自己的原则" class="headerlink" title="1.2 找到自己的原则"></a>1.2 找到自己的原则</h3><p><em>找到自己的原则的最好办法就是不停地追问自己，我为什么这么认为？一直追问到没有为什么、我就相信这个，为止 —— 那就是你的原则。</em></p><blockquote><p>有的人认为政府应该通过社会福利项目救助穷苦的人，有的人认为每个人应该自立自强别指望别人。那你要问，你为啥这么认为呢？如果一个人的回答是“政府本来就应该这么干，我就这么认为！”那层次就有点低了。</p><p>高水平的回答得是这样的 —— 人不是孤立的动物，人与人之间充满了联系。穷苦人的生活得到改善，不仅仅对他们自己有好处，他的亲友、他周围的人都会受益，整个社会环境变好了对交税的人也有好处。帮助别人其实就是帮助自己。</p><p>这个答案提供了一个更底层的逻辑，一个更基本的原则。我们现在特别爱说“底层逻辑”、“第一性原理”这些词儿，其实就是在追问你的这套逻辑体系的的公理是什么 —— 也就是你的原则。</p></blockquote><p>效法数学的精神，原则应该是分层的，越深层的原则越少、越简单、越不容违反。反过来说，如果一个人把什么东西都当做原则，只知道说我喜欢这个不喜欢那个，不知道为啥喜欢为啥不喜欢，那其实是只剩下任性了。</p><div class="anchor" id="yuan-ze-de-zuo-yong"></div><h3 id="1-3-原则的作用"><a href="#1-3-原则的作用" class="headerlink" title="1.3 原则的作用"></a>1.3 原则的作用</h3><p>两个讲原则的人哪怕有矛盾，也可以谈，讲一讲各自相信什么，也许就能在某一层原则上达成共识。你是国民党我是共产党，咱俩政治理念不同，但是抗日救国你得赞成吧？那现在我的部队是去打日本人的，你怎么就不能给个方便呢？这就叫 <em>求同存异</em>。</p><p>从最底层的几个原则出发，去随时审视和判断自己的决策，你的行事就会非常笃定。别人看你特别靠谱，你自己看自己也有一种荣誉感。</p><div class="anchor" id="hui-du-ren-zhi"></div><h2 id="2-灰度认知"><a href="#2-灰度认知" class="headerlink" title="2 灰度认知"></a>2 灰度认知</h2><p>所谓灰度认知，就是真实世界的有些事儿，并不符合逻辑。</p><h3 id="2-1-世界是有灰度的"><a href="#2-1-世界是有灰度的" class="headerlink" title="2.1 世界是有灰度的"></a>2.1 世界是有灰度的</h3><blockquote><p>我要保持好身体，所以我重视食品安全，所以我不吃过期的食物，这很符合逻辑。那如果现在有一瓶牛奶，写着3月26号过期，而现在是3月25号深夜，我为了不浪费，是不是应该趁着零点还没到赶紧喝呢？</p><p>过期时间不可能是精确科学。牛奶的性质不会在半夜 11:59:59 到 12 点这一秒钟之内发生急剧变化，实在不想浪费的话等到明天早上再喝也没啥大问题。</p></blockquote><blockquote><p>再比如你决心戒酒。今天是中学毕业30周年聚会，30年没见的老师说要跟你喝一杯，请问你能不喝吗？酒喝多了有害，但是不喝到喝多之间，存在一个灰度。哪怕从纯逻辑来讲，这里面也没有明确的分界线。</p></blockquote><p>尤金伲亚·程举了一个美好的例子，是简·奥斯汀的小说《傲慢与偏见》的一个情节。伊丽莎白问达西先生是什么时候爱上她的，达西先生回答说 ——</p><blockquote><p>“我不知道是在哪一个时刻，哪一个地点，或者是你的哪一个形象、哪一句话让我爱上你了。那是在很长时间之前。在我意识到爱上你之前，我就已经爱上你了。”</p></blockquote><p>爱上一个人也不是非黑即白的，从完全没爱到确定爱上，它是连续过渡的一个过程。</p><h3 id="2-2-灰色地带不容易做决策"><a href="#2-2-灰色地带不容易做决策" class="headerlink" title="2.2 灰色地带不容易做决策"></a>2.2 灰色地带不容易做决策</h3><p>要划线，逻辑上不支持绝对的划线。</p><blockquote><p>比如你为了减肥，决心要少吃饼干，但是你真的喜欢吃饼干。你想，只吃一小口饼干，难道还能影响减肥大业吗？肯定不会。那再吃一口呢？应该也没事。符合逻辑的结论是不管今天你已经吃了多少饼干，再多吃一小口也不会有本质的区别。那你到底应该吃几口呢？</p><p>吃一小口饼干没事，再吃一小口也没事，吃着吃着你就胖了。</p></blockquote><blockquote><p>再比如前一段特别热门的 MeToo 话题。到底什么行为构成性骚扰？握手肯定没事，那碰一下肩膀算不算呢？</p><p>如果握个手没事，碰一下肩膀也没事，最后你可能就被性骚扰了。</p></blockquote><p>不划线，就有了得寸进尺的机会。那这条线到底应该怎么划呢？</p><div class="anchor" id="hei-bai-jue-ce"></div><h2 id="3-黑白决策"><a href="#3-黑白决策" class="headerlink" title="3 黑白决策"></a>3 黑白决策</h2><p>所谓黑白决策，就是哪怕不符合逻辑，也要划线。</p><blockquote><p>考大学有一个录取分数线，679分就能上清华，678分就不能。</p><p>如果两个同学只差一分，这一分之差完全可以用偶然来解释，也许678分那个同学平时的水平更高。这不符合逻辑，但是没办法，大学只能录取这么多人，就只能有这么一条线。</p></blockquote><h3 id="3-1-预留缓冲区"><a href="#3-1-预留缓冲区" class="headerlink" title="3.1 预留缓冲区"></a>3.1 预留缓冲区</h3><p>划线要预留一个“缓冲区（buffer zone）”。如下图所示 —— </p><p><img src="http://q4kbn37nl.bkt.clouddn.com/buffer-zone.jpg?e=1580429809&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:XS8S4blcsPJMk-k4qt9gyTXLiQI" alt="缓冲区图示"></p><p>左边是白，右边是黑，中间是灰。你的线要划在非常靠左的位置，以至于过线之后的很大一块灰色区域仍然是比较白的 —— 那块区域就是缓冲区。过了缓冲区，灰色才变得比较黑。</p><p>把线划在这里，有了缓冲区，你就有足够的安全感。这是因为哪怕稍微越线一点，你仍然是安全的。你的坚持、你的原则、你的纪律，应该在缓冲区之外。</p><blockquote><p>比如吃饼干，如果每天吃三块太多了，吃两块行不行在两可之间，那你就应该规定自己每天吃一块。</p><p>一块饼干是绝对安全的，偶尔越线其实问题不大，但这条线的存在会让你在越线的时候感到很内疚。</p></blockquote><blockquote><p>再比如职场性骚扰，我们可以这么划线：除了女方主动的握手之外，男女之间应该没有任何身体接触。</p><p>这条线有点严厉，但是非常安全：稍微的越线行为不会给女性带来巨大伤害，但是能给男性带来很大的警醒。</p></blockquote><blockquote><p>商家在设定食品过期时间的时候，就已经留了一定的缓冲区。宁可过分安全，也不能有一点危险。</p><p>事实上考虑到这一点，我们不应该过分在意过期时间。</p></blockquote><div class="anchor" id="yuan-ze-xing-he-ling-huo-xing"></div><h2 id="4-原则性和灵活性"><a href="#4-原则性和灵活性" class="headerlink" title="4 原则性和灵活性"></a>4 原则性和灵活性</h2><p>如果一个人完全没有灵活性，划了线就寸土不让，那似乎也不能叫灰度认知黑白决策，因为这跟黑白认知黑白决策没区别。</p><h3 id="4-1-中庸"><a href="#4-1-中庸" class="headerlink" title="4.1 中庸"></a>4.1 中庸</h3><blockquote><p>孔子有句话叫“不得中行而与之，必也狂狷乎？狂者进取，狷者有所不为也。”</p><p>如果做不到中庸的话，那狂、狷这两种人才也还行 —— 而这个“狷”，这个“有所不为”，就是原则性特别强的人。但是，我们从孔子这段话也能看出来，原则性特别强并不是最高级的人才 —— 中行，也就是中庸，才是最高级人才。</p></blockquote><p>中庸的意思就是像邓小平那样“既有原则性，又有高度的灵活性”。</p><p>简单地说，中庸，就是有灰度认知，就是在原则的基础上，可以讨价还价。</p><h3 id="4-2-度的把握"><a href="#4-2-度的把握" class="headerlink" title="4.2 度的把握"></a>4.2 度的把握</h3><p>问题的本质是“度”的把握。这个度，就是你和我之间灰色区域中的某一条线。</p><blockquote><p>比如我认为应该增加社会福利，你认为应该避免滥发福利。表面上看咱俩针锋相对，但是咱俩坐下来一谈，我发现虽然你反对滥发福利，但其实你也赞同提供一部分福利：最起码来说，如果一位士兵在战场上受伤、残疾了，国家不能不管吧？</p></blockquote><p>认识到这一点，我们就有了讨价还价的可能性，就不至于势同水火。</p><div class="anchor" id="ling-huo-ye-shi-yi-zhong-jiang-yuan-ze"></div><h3 id="4-3-灵活也是一种讲原则"><a href="#4-3-灵活也是一种讲原则" class="headerlink" title="4.3 灵活也是一种讲原则"></a>4.3 灵活也是一种讲原则</h3><p>有原则，但为了更高的原则，可以讨价还价，那仍然是有原则。</p><p>比如把首都放北京就是有原则 ——</p><blockquote><p>明朝的基本国策是绝对不跟外族侵略者妥协，什么和亲什么割地绝对没有。成祖朱棣把首都放在北京直面北方威胁，天子守国门，就是要明确不妥协这条线 —— 但是，请注意，当初的人划这条线，未尝没有设定缓冲区的意思：就算北京遭到重大威胁，至少南方大好江山还在。这是一条灰度认知之下的黑白决策。</p><p>可是到了朱由检这一代只剩下黑白决策，灰度认知已经没有了。和谈不能提，撤退不能议，一点灵活性都没有，这不是自己给自己挖坑吗？</p></blockquote><p><em>灵活性跟没原则有本质区别，但是不好把握，这里面没有统一的算法，只能自己斟酌。</em></p><h2 id="学习心得"><a href="#学习心得" class="headerlink" title="学习心得"></a>学习心得</h2><h3 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h3><blockquote><ol><li><p>世事不是非黑即白的，有很多灰色地带。相对应的，我们也要有灰色认知，而决策只能是黑或者白。</p></li><li><p>讲原则的人才讲逻辑道理，才更容易与人交流和协作；而找原则的方法就是不断追问为什么，找到最底层的逻辑。</p></li><li><p>所谓灰度认知，就是指世界上有些事情并没有明确的界限；而黑白决策就是指，当我们需要界定一个行为的好坏时，我们就必须划线。</p></li><li><p>划线的关键思想是预留一个缓冲区，保证经常处于安全区，偶尔可以越线到缓冲区。</p></li><li><p>灰度认知还需要有一定的灵活性，去把握一个“度” —— 有原则，但为了更高的原则去讨价还价，仍然是有原则。</p></li></ol></blockquote><h3 id="延伸"><a href="#延伸" class="headerlink" title="延伸"></a>延伸</h3><h4 id="灰度写作"><a href="#灰度写作" class="headerlink" title="灰度写作"></a>灰度写作</h4><p>在写作时，一篇如行云流水的好文章，思维必定是连贯的。尽管段落清晰，落实到具体的每一个字，都从属于独立的一段，但思绪的流转、表达的观念很可能没有明确的分界线。比如那些承上启下的部分，既是上一段的结尾，又是下一段的起首，且脱离文章没法独自成文。这也是灰度认知，黑白决策。</p><div class="anchor" id="feng-tian-de-zhui-wen"></div><h4 id="丰田的追问"><a href="#丰田的追问" class="headerlink" title="丰田的追问"></a>丰田的追问</h4><p>在遇到一个问题的时候，丰田公司会让基层员工连续问五个为什么，挖出这个问题的根本原因。举个例子 ——</p><blockquote><p>你在工厂车间看到，地上漏了一大片油。常规的处理方式就是先清理地上的油，最多再检查一下，机器哪个部位漏油，换掉有问题的零件就好了。</p><p>但是按照丰田的思路，会引导员工继续追问：“为什么地上会有油？因为机器漏油了。为什么机器会漏油？因为一个零件老化，磨损严重，导致漏油。为什么零件会磨损严重？因为质量不好。为什么要用质量不好的零件？因为采购成本低。为什么要控制采购成本？因为节省短期成本，是采购部门的绩效考核标准。”</p><p>连问了五个为什么，漏油的根本原因就找到了。所以改变这个问题的根本方法，是公司改变对采购部门的绩效考核标准，才能防止以后发生类似问题。</p></blockquote><p>这与<a href="#zhao-yuan-ze-de-fang-fa">找原则</a>的方法如出一辙。在这个例子中，员工的原则就是保证绩效。</p><p>课程发布日期：2019.3.26</p>]]></content>
      
      
      <categories>
          
          <category> 舞空术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 课程笔记 </tag>
            
            <tag> 万维钢·精英日课3 </tag>
            
            <tag> 灰度认知 </tag>
            
            <tag> 黑白决策 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>怎样才算“有自由意志”？</title>
      <link href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-3/20191123_wen-da-zen-yang-cai-suan-you-zi-you-yi-zhi/"/>
      <url>/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-3/20191123_wen-da-zen-yang-cai-suan-you-zi-you-yi-zhi/</url>
      
        <content type="html"><![CDATA[<h5 id="《万维钢·精英日课3：问答：怎样才算“有自由意志”？》课程笔记"><a href="#《万维钢·精英日课3：问答：怎样才算“有自由意志”？》课程笔记" class="headerlink" title="《万维钢·精英日课3：问答：怎样才算“有自由意志”？》课程笔记"></a>《万维钢·精英日课3：问答：怎样才算“有自由意志”？》课程笔记</h5><div class="anchor" id="dao-di-zen-me-yang-cai-suan-shi-you-zi-you-yi-zhi"></div><h2 id="到底怎么样才算是“有自由意志”？"><a href="#到底怎么样才算是“有自由意志”？" class="headerlink" title="到底怎么样才算是“有自由意志”？"></a>到底怎么样才算是“有自由意志”？</h2><h3 id="读者提问"><a href="#读者提问" class="headerlink" title="读者提问"></a>读者提问</h3><p>读者 <code>Chen82250043</code>：</p><blockquote><p>你说什么我偏不听，这叫自由意志吗？</p></blockquote><p>读者 <code>L.J</code>：</p><blockquote><p>万老师，您之前讲佛学是真的这本书时说大脑是个多元政体，会被不同脑区和情绪所劫持，而可以通过正念练习不被劫持的功夫，请问这种不被劫持的功夫可以算是自由意志吗？它是生物因素吗？</p></blockquote><h3 id="老师回答"><a href="#老师回答" class="headerlink" title="老师回答"></a>老师回答</h3><p>到底怎么样才算是“有自由意志”，这的确是一个需要仔细说明白的问题。咱们打一个简单的比方，比如你是一个受试者，你的面前有一个可以拨向左边或者右边的开关，我是实验人员。我向你发出拨动开关的指令，你决定如何拨动开关。我们看看你都有哪些策略。</p><blockquote><p>最简单的策略是你完全听我的，我说往左你就往左，我说往右你就往右。那你显然没有表现出自由意志，你就好像是我控制的机器一样。</p><p>于是你决定跟我对着干，我说往左你偏往右，我说往右你就偏往左，请问这是自由意志吗？这也不是自由意志：你仍然是完全根据我的指令决定自己的行动，只不过把我的指令取一个相反数而已。其实我仍然在控制你：我要想让你往左，只要对你说“往右”就可以了。</p><p>同样道理，如果你的策略是这一步听我的，下一步不听我的，然后再下一步听我的，然后再再下一步不听我的，这么交替进行，你也没有自由意志。因为你正在严格按照一个规律做决定，而我也可以根据这个规律预测你要干什么。</p><p>那好，你干脆就来个没规律的。你决定屏蔽我的声音，自己拿个硬币抛着玩，硬币正面朝上你就往左，反面朝上你就往右，这回我就再也无法控制你了，那你有自由意志吗？还是没有，因为现在是硬币在控制你！</p><p>所以硬币也不能用了，你决定只听从自己内心的召唤。你坐在那里，观想自己的内心。突然间你的心念一动，把开关拨向了左边。你说，这回我有自由意志了吧？</p><p>本杰明·李贝特笑着从核磁共振仪后面走了出来说，兄弟，你还是没有自由意志。请看这张实验结果图：我们在你意识到自己要往哪里拨动开关之前300 毫秒，就已经知道你要往哪拨了。你听从了自己大脑中某个神经信号的召唤，你被那个信号所控制。</p><p>可是这一次你没有屈服。你说，不对啊，那个神经信号难道不是我大脑的一部分吗？我的大脑是个多元政体，也许这个决定不是我的意识或者说我的叙事自我做出的，但毕竟也是我的大脑的某一部分做出的，那这也应该算是我的决定！</p><p>那么我就会说，是的，是你的神经信号的决定。可是咱们应该这么想：神经信号这个决定是从哪来的？它既然在你的意识之前就做出了决定，肯定就不是听你的意识的控制。它只能是由某些更低级的生物学或者物理学过程决定的，就如同眼睛收到和处理光信号一样：也许跟当时那一刹那的外界环境有关系，也许跟你体内的荷尔蒙有关系，甚至可能跟你的童年经历有关系，也许是个量子力学的不确定性决定的过程 —— 但不管怎么样，它都是由某个客观的原因、而不是“你”决定的。它那个决定既然不是你有意识地控制出来的，你就是被它那个决定所控制的。</p></blockquote><p>如果你是为了立功或者挣钱而杀一个人，你没有自由意志，因为你是被身外之物所控制。如果你是因为不忍心而不杀一个人，你仍然没有自由意志，因为你是被自己的情绪所控制。不管你是为了遵命还是抗命而做出的决定，你都没有自由意志，因为你仍然受到了外界或者以往经历的影响。就算你是为了证明自己有自由意志而做出一个决定，你也是没有自由意志：因为“想要证明”，这个念头，就已经控制了你。</p><p>什么叫有自由意志呢？<em>就是你这个决定，完全独立于过去和现在的一切外部原因。你就是你，不受任何因素控制。</em></p><p>人到底有没有这样的自由意志？佛学冥想，综合考虑各种因素，不被任何一项单独的因素所控制，这个过程算不算自由意志？</p><p>萨波斯基的说法是，如果人有自由意志的话，也必定是像今天早上穿哪件衣服这种小事情上才有。因为一切大的决定，都可以用《行为》这本书中提到的某个机制解释。就算在你的大脑里住着一个最终拍板做决定的小人，现代生物学也证明，外界各种因素都能强烈影响那个小人，他的独立性非常非常有限。</p><p>而即便是那么小的独立性，也许仅仅是我们现在还不能解释 —— 也许将来就能解释。</p><p>所以关于自由意志，你有两个立场可以选择。</p><p>第一，赞同萨波斯基和所有神经科学家的信念，相信最终一切行为都能在生物学上得到解释，所以人没有自由意志。你接受，人只是一台机器而已。自由意志只是幻觉。</p><p>又或者 ——</p><p>第二，你坚信，只要一直挖下去，人的内心最深处，一定有个东西，是独立于一切外部刺激的：那个东西的行为只能被影响，而不能被完全控制。如果你愿意的话，你可以把那个东西叫做“灵魂”：灵魂可能被污染，但终究是独立的。或者你也可以采纳一个更中性的称呼，比如丹尼尔·丹内特说的“魔法肌肉”。</p><p>你相信人脑中有个魔法肌肉吗？物理学不支持这样的假设，神经科学正在步步紧逼，绝大多数以前被以为肯定是自由意志的功能，现在都能被外界刺激解释了，各种所谓的主观能动性都被证明是幻觉。那面对这样的形势，你相信这个阵地退到最后还有个能守住的边界吗？</p><p>可能有少数哲学家相信最终有那么一个阵地，但是据我所知，他们谁也说服不了丹内特。不管你提出一个什么样的假想，丹内特都能给你解释掉。</p><p>不管你打算采纳哪个立场，我的建议是两点：</p><p>第一，<em>你必须充分认识到人的行为是可以被影响的 —— 你的行为是可以被影响的</em>。哪怕你以为是自己独立做出的决定，实际上也是被影响的结果。学习《行为》这本书的一个重大作用就是认识到这一点。</p><p>第二，<em>我们总可以假装自己有自由意志，倾向于被高级的、而不是低级的因素影响</em>。比如人通常在饥饿状态下意志力会薄弱，而你既然知道这个知识，也许就可以更敏感地观察自己，越是饿了越小心。</p><p>如果你采纳这两个建议，我大概可以说你是受到了我这一番话的影响；可是如果你故意不听这两个建议，那也不算你有自由意志。</p><p>课程发布日期：2019.11.23</p>]]></content>
      
      
      <categories>
          
          <category> 舞空术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 课程笔记 </tag>
            
            <tag> 万维钢·精英日课3 </tag>
            
            <tag> 自由意志 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>到底什么叫“智慧”</title>
      <link href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-1/20161018_dao-di-shen-me-jiao-zhi-hui/"/>
      <url>/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-1/20161018_dao-di-shen-me-jiao-zhi-hui/</url>
      
        <content type="html"><![CDATA[<h5 id="《万维钢·精英日课1：到底什么叫“智慧”》课程笔记"><a href="#《万维钢·精英日课1：到底什么叫“智慧”》课程笔记" class="headerlink" title="《万维钢·精英日课1：到底什么叫“智慧”》课程笔记"></a>《万维钢·精英日课1：到底什么叫“智慧”》课程笔记</h5><p>“智慧”这个词我们经常用，一般认为是个比“智商”和“知识”都高级的词。比如有人说《论语》、《道德经》、佛经这些古代经典里面，有智慧。</p><blockquote><p>“知识”，我们都知道是什么意思，不用解释。</p><p>“智商”，很多人知道，它的意思是一个人的认知能力。比如说逻辑推理、模式识别、短期记忆力这些与积累了多少知识关系不大的，但是能反映大脑运算水平的能力。</p><p>“情商”这个词经常被滥用，但心理学家有比较明确的定义，是指一个人控制自己情绪的能力，比如说意志力大小，遇到挫折能不能不崩溃，保持乐观。</p></blockquote><div class="anchor" id="xin-li-xue-jie-de-ding-yi"></div><h2 id="1-心理学界的定义"><a href="#1-心理学界的定义" class="headerlink" title="1 心理学界的定义"></a>1 心理学界的定义</h2><p>想要获得“智慧”，我们首先得给它找一个可操作的含义。</p><p>心理学家对这个词已经有比较明确的定义了。2016年6月，由加拿大、德国和荷兰的四位研究者发表的论文《面对日常挑战的明智推理》在引言部分介绍，目前心理学家们对“智慧”有了一个共识：所谓“智慧（wisdom）”，就是“明智的推理（wise reasoning）”。</p><p>这里万维钢把 reasoning 翻译成“推理” 是实属无奈。这里说的推理跟“逻辑推理”还不太一样，不是说做个什么数学题或者福尔摩斯分析案情 —— 它的意思更广泛一些，是指通过你的理性，来对生活中遇到的挑战，做出正确的选择和判断。</p><p>比如说现在有个质量很好，可以用很长时间的名牌包包，价格很贵，和一个质量一般，但是价格便宜的普通包包，你买哪个？国家放开让生二胎了，你生不生？教师节，你儿子同学的家长给班主任送了厚礼，你跟不跟？</p><p>能不能做好这些选择，跟数学成绩关系不算太大（当然也有相关性），这不是逻辑推理也不是脑筋急转弯问题。知识多，也未必对这些问题有“直接的”帮助 —— 科普知识可以明确告诉你不要花冤枉钱买高价保健品，但名牌包包不是保健品，也的确有更多的效用啊？ —— <em>这些问题没有标准答案</em>。</p><p>你必须考虑到自身的情况，还要考虑到当时你所处环境的情况，综合判断，才能做出明智的选择。</p><p>这种选择能力，不是知识，不是智商，也不是情商。心理学家干脆就把这种能力，叫做“智慧”。</p><div class="anchor" id="zhi-hui-xu-yao-de-neng-li"></div><h2 id="2-智慧需要的能力"><a href="#2-智慧需要的能力" class="headerlink" title="2 智慧需要的能力"></a>2 智慧需要的能力</h2><p>智慧，都需要什么能力呢？你得对周围环境非常敏感，能从一个更大的视野中看待这个问题；你得有灵活度，能同时考虑不同的观点；你得善于自我反省，承认自己的认识是有限的。此前就有研究表明，这种能够具体问题具体分析的能力，对个人生活好坏来说，比智商更有用。</p><p>在这篇论文中，研究者特别从三个方面考察一个人的智慧水平：</p><blockquote><ol><li><p><em>智识上的谦逊</em> —— 我知道我需要更多的信息，才能合理评估这件事，我知道未来可能还有不确定性；</p></li><li><p><em>超越自我</em> —— 我知道我身在这个事情之中可能会当局者迷，如果能从旁观者的视角看问题，也许更好；</p></li><li><p><em>考虑他人观点，达成妥协</em> —— 我知道不同观点的利弊，能理解这个事件的参与各方的想法和立场，我不仅仅考虑自己的利益，也考虑跟别人的关系。</p></li></ol></blockquote><div class="anchor" id="zhi-hui-zai-ren-qun-zhong-de-fen-bu"></div><h2 id="3-智慧在人群中的分布"><a href="#3-智慧在人群中的分布" class="headerlink" title="3 智慧在人群中的分布"></a>3 智慧在人群中的分布</h2><p>研究者想知道智慧是怎么在人群之中分布的。是一些人就是比另一些人更有智慧呢，还是每个人面对不同局面会表现出不同水平的智慧？</p><blockquote><p>研究者找来 176 个受试者，这些人男女各占一半，年龄和受教育程度都不一样。而且其中有一点，这次特意选的是一些没有什么心理学知识的受试者！</p><p>研究者先让这些人做一个问卷调查，然后每人发 50 欧元作为酬谢。之后，研究者要求他们在未来的 9 天之中，每天记一个详细的日志 —— 记录自己在遇到生活中各种情况的时候，是否使用了上面说的三个智慧能力。每天早上研究者给他们发电子邮件提醒，而且完成日志就给 25 欧元。</p><p>结果，论文的主要结论是，智慧在不同人中的差异，比平均每个人，在不同场合之间的差异，要小。</p></blockquote><p>这个结论非常有 <em>学术味道</em>，说白了，就是说智慧可能并不是一个个人特点。也就是说，大概不是这个人比那个人有智慧，而是每个人有时候面对这种情况就很有智慧，面对别的情况就没有智慧。</p><p>这其实是个好消息，说明智慧跟智商不一样。智商主要是人与人之间的差异！一个智商高的人不但考试成绩好，其他方面也好，很难通过训练提高。那么现在既然智慧是个面对不同情况的差异，那它也许就是可以学的！如果我们多熟悉一些不同的局面，也许我们就能学会更多地使用智慧！</p><p>这个研究还发现两个小结论，也很有意思。一个是当你跟别人在一起的时候，你就更有可能使用智慧。这个可以理解，有别人在场，我们就更容易从其他的视角去考虑问题。</p><p>另一个结论是智慧跟这些受试者的性别和受教育程度关系不大，唯一有关系的是年龄 —— 年龄越大的，越有智慧。所以智慧跟智齿差不多，到了一定年龄它就长出来了。</p><div class="anchor" id="wan-wei-gang-de-ping-lun"></div><h2 id="4-万维钢的评论"><a href="#4-万维钢的评论" class="headerlink" title="4 万维钢的评论"></a>4 万维钢的评论</h2><p>万维钢看了这篇论文后，最大的收获是，在智商、情商、性格等等维度之外，心理学家研究人，还有这么一个叫做“智慧”的维度。这个“智慧”的定义未必跟我们心目中的“智慧”一致 —— 比如你可能说“进化是大自然的智慧”。在这里，心理学家把“智慧”的定义给缩小了，但是也给了它可操作性。</p><p>如果你不喜欢缩小智慧的定义，我们也可以把今天说的这个概念，就按论文标题的说法，称为“明智推理”。</p><p>论文里说的这三条明智推理能力，值得好好体会！以后再遇到个什么事情，就能多个心眼儿，想想我能不能先别冲动决定，能不能用点智慧。</p><p>万维钢不太相信“人与人的智慧差别不大”这个结论。统计实验研究的都是“普通人”，真有个高人在里面的话，他的数据恐怕会被研究者视为“异类”，他就是格拉德威尔说的“outlier”。如果一个人好好提高自己，他就有可能获得比一般人高得多的智慧。</p><h2 id="学习心得"><a href="#学习心得" class="headerlink" title="学习心得"></a>学习心得</h2><h3 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h3><blockquote><ol><li><p>心理学家们给智慧（wisdom）定义为“明智推理（wise reasoning）”，代表很强的推理和判断能力。</p></li><li><p>明智推理包含三个重要能力：<em>谦逊<em>、</em>超越自我</em> 和 <em>达成妥协</em>。</p></li><li><p>研究发现，明智推理的差异在人与人之间很小，在应对不同场合时更大。</p></li><li><p>明智推理主要受年龄和他人的影响。</p></li></ol></blockquote><h3 id="延伸"><a href="#延伸" class="headerlink" title="延伸"></a>延伸</h3><h4 id="结合一点棘手问题"><a href="#结合一点棘手问题" class="headerlink" title="结合一点棘手问题"></a>结合一点棘手问题</h4><p>明智推理要求人们具体站在多个视角考虑问题的能力。这与罗胖提出的应对<a href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-3/20190523_dan-chun-wen-ti-liang-nan-wen-ti-he-ji-shou-wen-ti/#ji-shou-wen-ti">棘手问题</a>的心法 —— <a href="/online-course-notes/luo-ji-si-wei/season-7/20190528_zen-me-chu-li-ji-shou-wen-ti/">内心的董事会</a> —— 很是相似。</p><p>正如这一课中提到的几个明智推理所应对的问题的<a href="#xin-li-xue-jie-de-ding-yi">例子</a>，买不买包、生不生二胎、送不送礼都至少是<a href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-3/20190523_dan-chun-wen-ti-liang-nan-wen-ti-he-ji-shou-wen-ti/#liang-nan-wen-ti">两难问题</a>。这么看来，明智推理确实能为应对这些问题，提供很大的帮助。</p><p><a href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-2/20180201_ke-guan-ti-he-zhu-guan-ti/">《万维钢·精英日课2：客观题和主观题》课程笔记</a></p><p>课程发布日期：2016.10.18</p>]]></content>
      
      
      <categories>
          
          <category> 舞空术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 课程笔记 </tag>
            
            <tag> 万维钢·精英日课1 </tag>
            
            <tag> 智慧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>怎样优雅地跟人谈政治</title>
      <link href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-1/20160929_zen-yang-you-ya-de-gen-ren-tan-zheng-zhi-yi-ji-ren-he-you-zheng-yi-de-hua-ti/"/>
      <url>/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-1/20160929_zen-yang-you-ya-de-gen-ren-tan-zheng-zhi-yi-ji-ren-he-you-zheng-yi-de-hua-ti/</url>
      
        <content type="html"><![CDATA[<h5 id="《万维钢·精英日课1：怎样优雅地跟人谈政治…以及任何有争议的话题》课程笔记"><a href="#《万维钢·精英日课1：怎样优雅地跟人谈政治…以及任何有争议的话题》课程笔记" class="headerlink" title="《万维钢·精英日课1：怎样优雅地跟人谈政治…以及任何有争议的话题》课程笔记"></a>《万维钢·精英日课1：怎样优雅地跟人谈政治…以及任何有争议的话题》课程笔记</h5><div class="anchor" id="zheng-zhi-shi-ge-min-gan-hua-ti"></div><h2 id="1-政治是个敏感话题"><a href="#1-政治是个敏感话题" class="headerlink" title="1 政治是个敏感话题"></a>1 政治是个敏感话题</h2><p>2016年是美国大选年，支持希拉里和支持特朗普的两派选民针尖对麦芒，分歧之大前所未有，不惜以最狠毒的语言攻击对方阵营，简直是不可调和的矛盾。在这种情况下，一个美国人是不敢轻易跟人谈论政治的，一言不合，友谊的小船可真是说翻就翻。</p><p>政治话题的杀伤力太大，跟亲朋好友最好干脆不谈。而《哈佛商业评论》上的一篇文章专门教人怎么谈政治 <a href="#references">[1]</a>。</p><p>这几位研究者专门做了调查统计，有三分之一的美国人曾经因为暴露自己的政治观点而遭到直接点名的人身攻击；有四分之一的美国人曾经因为讨论政治而永久性地损害了跟亲友和同事的关系。</p><p>以前一到大选年，美国街上就会有很多汽车贴上车贴，自豪地宣布自己属于哪个阵营 —— 可是2016年这种车贴就很少见，舆论压力实在太大。</p><p>那么这就形成了一个所谓<a href="/tools/knowledge-handbook/#hui-sheng-shi-xiao-ying">“回音室”效应</a>，就是人们只跟自己阵营的人谈政治，双方阵营根本听不进去对方的声音。</p><div class="anchor" id="ji-qiao-shi-tan-hua-bian-de-you-ya"></div><h2 id="2-技巧使谈话变得优雅"><a href="#2-技巧使谈话变得优雅" class="headerlink" title="2 技巧使谈话变得优雅"></a>2 技巧使谈话变得优雅</h2><p>研究者号召我们去跟对方阵营的人搞搞双边的政治对话。</p><p>他们搞了一套谈论政治的对话技巧 ——</p><blockquote><ol><li><p><em>一上来要摆一个向对方学习的姿态</em>。</p></li><li><p><em>在说自己的观点之前，还要先征得对方的允许</em>。</p></li><li><p><em>全程要充分尊重对方</em>。作者说，尊重就如同空气，如果你突然把尊重拿走，那对方满脑子想的就只是尊重！我非常珍视你的视角！我想听到你的观点，而且我也不敢假设我的观点是对的。</p></li><li><p><em>寻找双方的共同点</em>。先得找到共识，才能从这个共识出发去谈具体的问题。</p></li></ol></blockquote><p>然后他们拍了一段用这些技巧谈政治的短片，再用一段用普通方式谈政治的短片作对比。然后他们在网上找了3688人观看不同的短片来做评测实验，结果非常明显：如果你使用这些技巧谈政治，那么听众不管是不是你同一阵营的，都会认为你这个人处事圆滑老练，受人喜欢，很有见识，有说服力，愿意跟你对话和交往。</p><div class="anchor" id="wan-wei-gang-de-ping-lun"></div><h2 id="3-万维钢的评论"><a href="#3-万维钢的评论" class="headerlink" title="3 万维钢的评论"></a>3 万维钢的评论</h2><ol><li><p>如果有人用上述的技巧跟你谈话，明明不是一个阵营还能让你如沐春风，还跟你找共识，你最好重视他，这不是一般老百姓说话的方式。</p></li><li><p>这套方法并不算新鲜，有本很有名的书叫《关键对话》（Crucial Conversations: Tools for Talking When Stakes Are High），早就总结过类似的对话技巧。事实上，这篇文章的第一作者 Joseph Grenny，正是《关键对话》一书的作者之一。<br>《关键对话》这本书提出的一个对话关键，就是一定要让双方都有心理安全感。哪怕你觉得这个人差到不行，你也得在他身上找到一个值得尊重的地方，否则这个话就没法谈。一旦有一方失去安全感，进入防守反击的状态，肯定谈崩。</p></li><li><p>我们谈话的目的从来都不应该是为了赢得什么争论，我们的目的是为了让这个人按我们的想法去把事儿办了，是为了赢得这个人！把一个希拉里的支持者给气哭了不算本事，你能说服她去给特朗普投票，这才算本事！就算说服不了她，能了解她的想法，能让她心平气和地了解你的想法，也算一得。你了解了对方阵营的视角，而且也许你就在她心中埋下了一颗将来可能会发芽的种子。这样的对话才有意义。</p></li></ol><h2 id="学习心得"><a href="#学习心得" class="headerlink" title="学习心得"></a>学习心得</h2><h3 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h3><blockquote><ol><li><p>直白地各抒己见不是好的谈话方式，优雅的谈话方式需要技巧。</p></li><li><p>优雅的谈话建立在双方的尊重和安全感之上。</p></li><li><p>谈话的目的不在于争论对错，而在于赢得对方。</p></li><li><p>谈话技巧只是其次，明确目的和态度才是关键。</p></li></ol></blockquote><h3 id="延伸"><a href="#延伸" class="headerlink" title="延伸"></a>延伸</h3><div class="anchor" id="jie-he-yi-dian-qin-mi-guan-xi"></div><h4 id="结合一点亲密关系"><a href="#结合一点亲密关系" class="headerlink" title="结合一点亲密关系"></a>结合一点亲密关系</h4><p>这一课中提到的技巧，以及具体的操作流程都不是绝对的，它更适用于在正式的场合下、和不那么熟的人谈话。</p><p><a href="/tools/knowledge-formula/#qin-mi-liang-hao-de-guan-xi">亲密良好的关系</a>的形成条件之一是“开放”，即互不设防。尊重和安全感是对的，但使用过多的谈话技巧，反而疏远了彼此之间的距离。“自黑”与“互黑”是我们拉近彼此关系的常用方法，它并不代表不尊重，反而很有趣，甚至还意味着即便是这样的对话，我们的关系依旧很牢固。</p><p>所以，不要受表面上的谈话状态所束缚，深层次的人际关系才更重要。即便谈崩，父母兄弟都还是亲的，世上没那么多解不开的仇和恨。</p><div class="anchor" id="references"></div><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p>[1] Joseph Grenny, David Maxfield, Candace Bertotti, Chase McMillan, How to Talk Politics at Work Without Alienating People（怎样在不疏远别人的情况下谈论政治）</p><p>课程发布日期：2016.9.29</p>]]></content>
      
      
      <categories>
          
          <category> 舞空术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 课程笔记 </tag>
            
            <tag> 万维钢·精英日课1 </tag>
            
            <tag> 优雅 </tag>
            
            <tag> 政治 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>客观题和主观题</title>
      <link href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-2/20180201_ke-guan-ti-he-zhu-guan-ti/"/>
      <url>/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-2/20180201_ke-guan-ti-he-zhu-guan-ti/</url>
      
        <content type="html"><![CDATA[<h5 id="《万维钢·精英日课2：客观题和主观题》课程笔记"><a href="#《万维钢·精英日课2：客观题和主观题》课程笔记" class="headerlink" title="《万维钢·精英日课2：客观题和主观题》课程笔记"></a>《万维钢·精英日课2：客观题和主观题》课程笔记</h5><p>这一课的主题是有关“认知”的认知。</p><div class="anchor" id="ke-guan-he-zhu-guan"></div><h2 id="1-客观和主观"><a href="#1-客观和主观" class="headerlink" title="1 客观和主观"></a>1 客观和主观</h2><p>我们都知道“客观事实”和“主观观点”的区别。</p><h3 id="1-1-客观题"><a href="#1-1-客观题" class="headerlink" title="1.1 客观题"></a>1.1 客观题</h3><p>客观题的答案是客观事实，是非常直截了当的。</p><p>比如这段对话，老张和老王就是在讨论一道客观题。</p><blockquote><p>老张：2197 的立方根等于 13。<br>老王：不对，2197 的立方根等于 14。</p></blockquote><p>2197 的立方根是非常直截了当的，任何人拿个计算器算算都知道答案是 13。数学是绝对客观的，是无可争议的客观事实。</p><h3 id="1-2-主观题"><a href="#1-2-主观题" class="headerlink" title="1.2 主观题"></a>1.2 主观题</h3><p>主观题没有固定的答案，人们阐述的是各自的主观观点。</p><p>为主观题争论似乎是没有意义的，我们在主观题上应该尊重彼此的观点或者喜好。</p><blockquote><p>老张：豆腐脑这种东西就应该是咸的。<br>老王：不对，咸豆腐脑怎么吃啊，甜豆腐脑才好吃。</p></blockquote><p>可能老张是北方人喜欢吃咸的，老王是南方人喜欢吃甜的。两人只是口味不同，根本没有绝对的对错。</p><h3 id="1-3-主观还是客观？"><a href="#1-3-主观还是客观？" class="headerlink" title="1.3 主观还是客观？"></a>1.3 主观还是客观？</h3><p>下面这道题是主观题还是客观题呢？</p><blockquote><p>老张：堕胎是完全符合道德的行为，应该合法。<br>老王：堕胎是不道德的，应该用法律禁止。</p></blockquote><p>有些人认为答案是明摆着的，要么就应该合法要么就应该不合法，这个题目是个客观题。有些人则认为到底应不应该允许堕胎这个问题没有绝对的对错，只有各人观点不同，是一道主观题。</p><div class="anchor" id="fei-she-er-deng-ren-de-yan-jiu"></div><h3 id="1-4-费舍尔等人的研究"><a href="#1-4-费舍尔等人的研究" class="headerlink" title="1.4 费舍尔等人的研究"></a>1.4 费舍尔等人的研究</h3><p>事实上，上面这几道题来自卡耐基梅隆大学和耶鲁大学的几位心理学家和认知科学家。他们在2018年二月份的《科学美国人》上发表了一篇文章 <a href="#references">[1]</a>，叫《有毒政治对话是否会改变我们对客观事实的看法》，介绍了自己的一项研究。文章第一作者是马修·费舍尔（Matthew Fisher）。</p><h4 id="1-4-1-客观派和主观派"><a href="#1-4-1-客观派和主观派" class="headerlink" title="1.4.1 客观派和主观派"></a>1.4.1 客观派和主观派</h4><p>费舍尔等人的研究，给“客观和主观”这个问题带来一个新视角。因为这一道题把人就给分成了两类 —— 客观派和主观派。</p><p>费舍尔等人关心的是，这两派人的认知模式，跟他们的行为，有什么样的联系。</p><h4 id="1-4-2-认知决定行为"><a href="#1-4-2-认知决定行为" class="headerlink" title="1.4.2 认知决定行为"></a>1.4.2 认知决定行为</h4><p><em>一个人对知识的观点，会决定他的行为。</em></p><p>比如你认为堕胎应该合法，现在有一个人认为堕胎是非法的，那你愿不愿意跟这样的人当室友？</p><blockquote><p>客观派的人会说不愿意。何止是不能当室友，连坐在一起都有困难。</p></blockquote><p>客观派的人思想比较封闭。</p><blockquote><p>一个人是客观派，房间里有个和他观点相反的人坐在他附近，研究者让这个客观派坐到那人身边去，结果这个客观派反而还故意坐的离那人更远一点。</p></blockquote><p><em>不能容忍不同观点的人，行为会更封闭。</em></p><p>实际上，这些特点心理学家们早就发现了。而费舍尔他们搞的这个新研究，则是发现上面这个逻辑还可以反过来！</p><h4 id="1-4-3-行为改变认知"><a href="#1-4-3-行为改变认知" class="headerlink" title="1.4.3 行为改变认知"></a>1.4.3 行为改变认知</h4><p>研究者们招募了一些受试者，事先测试了他们对堕胎的看法，然后故意把观点相反的凑成两两一对儿，让他们在网上聊天室里聊天。</p><p>对其中一半的聊天组，研究者给的指令是你们聊天是为了在争论中战胜对方。另一半聊天组收到的任务则是要从对方的观点中学到东西。</p><p>我们可以想象这两种争论局面非常不同。第一种的争论基本上是这样的 ——</p><blockquote><p>老张：我认为女性完全有权决定如何对待她的胎儿。<br>老王：堕胎等同于杀人。<br>老张：我们国家规定堕胎是合法的，你既然在这个国家，就应该尊重国家的法律。<br>老王：你知不知道胎儿在21天的时候就有心跳了？</p></blockquote><p>我们看这个争论基本上是各说各话，等于根本就没有对话，只是各自阐明自己的立场。</p><p>而如果是为了从对方身上学到东西，双方至少是个对话的样子 ——</p><blockquote><p>老张：为了保护女性，我们应该允许堕胎。<br>老王：可是你知不知道从第21天开始，小生命就有心跳了，堕胎等于杀人啊！<br>老张：对，我明白你的观点。但我认为这个小生命虽然已经开始了，但毕竟还没有成熟，我们不应该为了一个不成熟的生命而牺牲女性的幸福。</p></blockquote><p>而研究者想知道的是这种对话对受试者有没有什么改变。结果第二种，也就是这个学习型的对话，让参与者的认知发生了变化。</p><p>原来是客观派的，参加完这种对话之后，变得不再认为对堕胎的立场有客观真理了 —— 至少不那么强烈了。哪怕他们不能完全接受对方的观点，也会觉得堕胎这个问题不再是非黑即白的了。</p><p>因此，费舍尔等人的结论是，<em>不但我们的哲学观点会影响我们的行为，我们的行为也会影响我们的哲学观点。</em></p><h2 id="2-万维钢的评论"><a href="#2-万维钢的评论" class="headerlink" title="2 万维钢的评论"></a>2 万维钢的评论</h2><p>万维钢对此有两点看法。</p><h3 id="2-1-理论上非黑即白"><a href="#2-1-理论上非黑即白" class="headerlink" title="2.1 理论上非黑即白"></a>2.1 理论上非黑即白</h3><blockquote><p>万维钢：至少从理论上来说，任何问题要么就是客观题要么就是主观题，没有什么灰色地带。我认为理想状态下争论的结果，要么就是发现双方争论的根本就不是同一个问题，要么双方就应该达成一致。</p></blockquote><p>比如说豆腐脑这个主观题。我说豆腐脑应该是咸的，你说豆腐脑应该是甜的，其实争论的根本就不是豆腐脑的问题，而是各自口味的问题。我说的是<em>我喜欢<em>咸豆腐脑，你说的是</em>你喜欢<em>甜豆腐脑，咱俩说的根本就是两回事儿，并不矛盾。</em>主观题，就不应该形成争论。</em></p><p>对于客观题，经济学家罗伯特·奥曼（Robert Auman）有个著名定理 <a href="#references">[2]</a>。</p><blockquote><p>如果争论双方都是诚实的、以追求真理为目的人的话，那么不管在争论开始的时候双方分歧有多大，这个争论都会在有限步之内结束，双方终究会达成一致，不应该存在各自保留观点的结果。</p></blockquote><p>以堕胎为例，如果老张和老王真把问题说明白了，这个争论就可以结束。两人应该各自说说为什么有那样的观点。</p><p>如果最后争论焦点变成“胚胎到底算不算是真正的人”，那就是客观的科学问题 —— 科学问题应该科学解决。奥曼说的就是如果我们对已知的科学结论都承认，对科学分析的方法都认可，那最后只能达成一致。</p><p>如果焦点是法律到底应该尽可能保护一个胚胎，还是尽可能保护一名女性，那问题就变成了胚胎的生存权重要，还是它的母亲的幸福权重要，那就是价值观问题。价值观问题是主观题，就好像各人对豆腐脑的口味不同，那也没什么可争论的。</p><h3 id="2-2-实际操作上假装有灰色地带"><a href="#2-2-实际操作上假装有灰色地带" class="headerlink" title="2.2 实际操作上假装有灰色地带"></a>2.2 实际操作上假装有灰色地带</h3><blockquote><p>万维钢：在实际操作上，哪怕相信这个问题是个客观题，你也应该假装它处在客观和主观中间的灰色地带。</p></blockquote><p><em>这么做对形象有利</em>。《万维钢·精英日课1：怎样优雅地跟人谈政治…以及任何有争议的话题》中提到一项<a href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-1/20160929_zen-yang-you-ya-de-gen-ren-tan-zheng-zhi-yi-ji-ren-he-you-zheng-yi-de-hua-ti/#ji-qiao-shi-tan-hua-bian-de-you-ya">研究</a>，说如果一个人在和对方阵营的人争论的时候表现得是在向对方学习，这个人的形象就很好。旁观者会认为他有见识、老练、有说服力，会很喜欢他。</p><p><em>这么做还是智慧的表现</em>。《万维钢·精英日课1：到底什么叫“智慧”？》中提到心理学家对“智慧”的一个<a href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-1/20161018_dao-di-shen-me-jiao-zhi-hui/#zhi-hui-xu-yao-de-neng-li">定义</a>，就是智识上的谦逊，就是能够考虑他人的观点。</p><p><em>这么做还能让人更有说服力</em>。形象好，有智慧，谁都愿意听这样的人说话。</p><p>大脑是个说服力工具。但是，为了要说服对方，你反而要假装你并不是在试图说服对方，而是在向对方学习！</p><p>不管实际上有没有“死理”，那些表现得不认死理的人，做事风格更开放，形象更好，更有说服力 —— 反过来说，如果你故意表现得不认死理，你可能真的会好好反思自己的认知。</p><h2 id="学习心得"><a href="#学习心得" class="headerlink" title="学习心得"></a>学习心得</h2><h3 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h3><blockquote><ol><li><p>客观题的答案是客观事实，是非常直截了当的；主观题没有固定的答案，人们阐述的是各自的主观观点。</p></li><li><p>费舍尔等人的研究结论是：认知决定行为，行为也能反过来影响认知。</p></li><li><p>理论上，一个问题不是客观题，就是主观题，是非黑即白的。</p></li><li><p>主观题不应该形成争论；客观题双方应该对客观事实达成一致。</p></li><li><p>实际操作上，应该表现出有灰色地带，这样能使形象更好，更有说服力。道理是死的，人是活的。</p></li></ol></blockquote><h3 id="延伸"><a href="#延伸" class="headerlink" title="延伸"></a>延伸</h3><h4 id="结合一点灰度认知"><a href="#结合一点灰度认知" class="headerlink" title="结合一点灰度认知"></a>结合一点灰度认知</h4><p>《万维钢·精英日课3：逻辑思维5：灰度认知和黑白决策》中提倡的<a href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-3/20190326_luo-ji-si-wei-5-hui-du-ren-zhi-he-hei-bai-jue-ce/#hui-du-ren-zhi-he-hei-bai-jue-ce">“灰度认知，黑白决策”</a>，到了这里却成了“黑白认知，灰度决策”。这就很有意思了。在认知层面，我们得在客观题和主观题之间明确地划一道线；但在决策上，既要允许主观的成分，又要尊重客观事实。</p><p>另外，主观题不应该形成争论，这说明双方既要互相尊重，又各自<a href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-3/20190326_luo-ji-si-wei-5-hui-du-ren-zhi-he-hei-bai-jue-ce/#yuan-ze-de-zuo-yong">讲原则</a>，求同存异。而假装有灰色地带，更是一种<a href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-3/20190326_luo-ji-si-wei-5-hui-du-ren-zhi-he-hei-bai-jue-ce/#ling-huo-ye-shi-yi-zhong-jiang-yuan-ze">灵活地讲原则</a>。</p><div class="anchor" id="jie-he-yi-dian-zi-you-yi-zhi"></div><h4 id="结合一点自由意志"><a href="#结合一点自由意志" class="headerlink" title="结合一点自由意志"></a>结合一点自由意志</h4><p>人到底有没有自由意志？《万维钢·精英日课3：问答：怎样才算“有自由意志”》中有一段精彩的<a href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-3/20191123_wen-da-zen-yang-cai-suan-you-zi-you-yi-zhi/#dao-di-zen-me-yang-cai-suan-shi-you-zi-you-yi-zhi">回答</a>，说的是人在思考的过程中，每动一个念头都可以追溯到一个神经信号，这个神经信号在意识察觉之前就已经产生了，它很可能是由某些外部刺激（更低级的生物学或者物理学过程）决定的，而不是这个人自己的意识所决定。换句话说，人很可能并没有所谓的自由意志。</p><p>主观题之所以有主观的答案，是因为每个人都有自己独特的想法。但假如人真的没有自由意志，思考主观问题时，每动一个念头都可以追溯到客观的原因，那主观题的本质不也还是客观题吗？</p><p>比如将主观的喜好再往前推进一步 ——</p><blockquote><p>更喜欢甜豆腐脑的，可能他或他的祖先经历过食物匮乏的处境，所以他们对能量高的糖分有所偏好；更喜欢咸豆腐脑的，说明他的祖先可能过去生活在沿海，海味吃得多，口味偏咸。</p></blockquote><p>当我们遵循丹内特的想法，一步步将这些看似主观的因素都用客观的外部刺激加以解释之后，剩下的也就只能是客观题了。</p><div class="anchor" id="references"></div><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p>[1] Are Toxic Political Conversations Changing How We Feel about Objective Truth? By Matthew Fisher, Joshua Knobe, Brent Strickland, Frank C. Keil, SCIENTIFIC AMERICAN FEBRUARY 2018.</p><p>[2] 奥曼的原始论文是 Agreeing to disagree，发表于1976年。万维钢的《真理追求者》一文中有介绍过这个理论。</p><p>课程发布日期：2018.2.1</p>]]></content>
      
      
      <categories>
          
          <category> 舞空术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 课程笔记 </tag>
            
            <tag> 万维钢·精英日课2 </tag>
            
            <tag> 高手的心法 </tag>
            
            <tag> 客观 </tag>
            
            <tag> 主观 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>仙豆</title>
      <link href="/tools/mottoes/"/>
      <url>/tools/mottoes/</url>
      
        <content type="html"><![CDATA[<h5 id="持续收录的格言金句"><a href="#持续收录的格言金句" class="headerlink" title="持续收录的格言金句"></a>持续收录的格言金句</h5><h2 id="雷·达里奥语录"><a href="#雷·达里奥语录" class="headerlink" title="雷·达里奥语录"></a>雷·达里奥语录</h2><h3 id="人类最独特的品质…"><a href="#人类最独特的品质…" class="headerlink" title="人类最独特的品质…"></a>人类最独特的品质…</h3><blockquote><p>Man’s most distinctive quality is our singular ability to look down on reality from a higher perspective and synthesize an understanding of it.</p></blockquote><p>人类最独特的品质，是我们能从更高的角度看待现实和形成综合理解的能力。</p><p>出自：雷·达里奥（Ray Dalio）——《原则：工作和生活》<br>收录时间：2020.1.30</p><h3 id="从上往下看自然…"><a href="#从上往下看自然…" class="headerlink" title="从上往下看自然…"></a>从上往下看自然…</h3><blockquote><p>By looking at nature from the top down, we can see that much of what we call human nature is really animal nature.</p></blockquote><p>从上往下看自然，我们可以看到很多所谓“人类本性”其实都是动物性。</p><p>出自：雷·达里奥（Ray Dalio）——《原则：工作和生活》<br>收录时间：2020.1.30</p><h3 id="每当我看到自然界…"><a href="#每当我看到自然界…" class="headerlink" title="每当我看到自然界…"></a>每当我看到自然界…</h3><blockquote><p>Whenever I observe something in nature that I (or mankind) think is wrong, I assume that <em>I’m</em> wrong and try to figure out why that nature is doing makes sense.</p></blockquote><p>每当我看到自然界有什么东西是我（或者人类）觉得不对的地方，我总是假设是我错了，然后我设法理解为什么大自然要这么做。</p><p>出自：雷·达里奥（Ray Dalio）——《原则：工作和生活》<br>收录时间：2020.1.30</p><h3 id="以我之见…"><a href="#以我之见…" class="headerlink" title="以我之见…"></a>以我之见…</h3><blockquote><p>In my opinion, these two barriers — ego and blind spots — are the fatal flaws than keep intelligent, hardworking people from living up to their potential.</p></blockquote><p>以我之见，“自我”和“盲点”这两个障碍是阻碍那些聪明而又勤奋的人实现人生潜能的致命缺陷。</p><p>出自：雷·达里奥（Ray Dalio）——《原则：工作和生活》<br>收录时间：2020.1.30</p><h3 id="金钱是卓越的副产品…"><a href="#金钱是卓越的副产品…" class="headerlink" title="金钱是卓越的副产品…"></a>金钱是卓越的副产品…</h3><blockquote><p>Money is a byproduct of excellence, not a goal.</p></blockquote><p>金钱是卓越的副产品，而不是目标。</p><p>出自：雷·达里奥（Ray Dalio）——《原则：工作和生活》<br>收录时间：2020.1.30</p><h3 id="对我来说…"><a href="#对我来说…" class="headerlink" title="对我来说…"></a>对我来说…</h3><blockquote><p>For me, not telling people what’s really going on so as to protect them from the worries of life is like letting your kids grow into adulthood believing in the Tooth Fairy or Santa Claus.</p></blockquote><p>对我来说，为了保护别人的情绪而不告诉他们事实真相，就好像让你的孩子长大了还相信牙仙女和圣诞老人一样。</p><p>出自：雷·达里奥（Ray Dalio）——《原则：工作和生活》<br>收录时间：2020.1.30</p><h3 id="和那些跟你意见相左的…"><a href="#和那些跟你意见相左的…" class="headerlink" title="和那些跟你意见相左的…"></a>和那些跟你意见相左的…</h3><blockquote><p>Having open-minded conversations with believable people who disagree with you is the quickest way to get an education and to increase your probability of being right.</p></blockquote><p>和那些跟你意见相左的、可信度高的人进行开诚布公的对话，是获得教育的最快方法，而且还能提高你正确的可能性。</p><p>出自：雷·达里奥（Ray Dalio）——《原则：工作和生活》<br>收录时间：2020.1.30</p><h3 id="你和聪明人互相之间…"><a href="#你和聪明人互相之间…" class="headerlink" title="你和聪明人互相之间…"></a>你和聪明人互相之间…</h3><blockquote><p>The greatest influence you can have over intelligent people — and the greatest influence they will have on you — comes from constantly getting in sync about what is true and what is best to that you all want the same things.</p></blockquote><p>你和聪明人互相之间能产生的最好影响，是在“什么是真实情况”和“什么东西好”这两个方面不断地同步，这样你们就都想要同样的东西。</p><p>出自：雷·达里奥（Ray Dalio）——《原则：工作和生活》<br>收录时间：2020.1.30</p><h3 id="如果你为之工作的目标…"><a href="#如果你为之工作的目标…" class="headerlink" title="如果你为之工作的目标…"></a>如果你为之工作的目标…</h3><blockquote><p>If you’re not excited about the goal that you’re working for, stop working for it.</p></blockquote><p>如果你为之工作的目标不能让你感到兴奋，那就别再为它工作了。</p><p>出自：雷·达里奥（Ray Dalio）——《原则：工作和生活》<br>收录时间：2020.1.30</p>]]></content>
      
      
      <categories>
          
          <category> 万能胶囊 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 格言 </tag>
            
            <tag> 箴言 </tag>
            
            <tag> 道理 </tag>
            
            <tag> 顿悟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>坡塔拉耳环</title>
      <link href="/tools/knowledge-formula/"/>
      <url>/tools/knowledge-formula/</url>
      
        <content type="html"><![CDATA[<h5 id="持续收录的知识公式"><a href="#持续收录的知识公式" class="headerlink" title="持续收录的知识公式"></a>持续收录的知识公式</h5><h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><div class="anchor" id="cheng-gong"></div><h3 id="成功-天赋-运气"><a href="#成功-天赋-运气" class="headerlink" title="成功 = 天赋 + 运气"></a>成功 = 天赋 + 运气</h3><blockquote><p>在激烈的竞争中，运气很重要。</p><p>在某些领域，光有天赋和努力远远不够，因为高手太多了。</p></blockquote><p>如果你仅仅凭借天赋和努力就能在一个领域取得了不起的成就，那只能说明你这个领域不够热门，没有吸引到太多跟你一样有天赋、跟你一样努力的人。</p><blockquote><p>更甚，大成功 = 多一点点天赋 + 很多好运气。</p></blockquote><p>出自：罗伯特·弗兰克（Robert H. Frank）——《成功与运气：好运和精英社会的神话》<br>相关：万维钢 ——《万维钢·精英日课1：〈成功与运气〉1：运气动力学》<br>收录时间：2020.1.30</p><div class="anchor" id="cheng-gong-ren-sheng"></div><h3 id="成功人生-梦想-现实-决心"><a href="#成功人生-梦想-现实-决心" class="headerlink" title="成功人生 = 梦想 + 现实 + 决心"></a>成功人生 = 梦想 + 现实 + 决心</h3><blockquote><p>Deams + Reality + Determination = A Successful Life</p></blockquote><p>出自：雷·达里奥（Ray Dalio）——《原则：生活和工作》<br>收录时间：2020.1.30</p><div class="anchor" id="cheng-zhang"></div><h3 id="成长-压力-休息"><a href="#成长-压力-休息" class="headerlink" title="成长 = 压力 + 休息"></a>成长 = 压力 + 休息</h3><blockquote><p>《巅峰表现》的两位作者考察了长期保持状态、甚至40多岁了还保持了世界一流水平的运动员，也考察了从事创造性工作的脑力劳动者，发现他们的行为规律有共同之处。一个关键，是节奏感。总结成一个公式，就是：</p><p><em>成长 = 压力 + 休息</em></p><p>这里的压力并不一定是外界给你的，而是你自己为了提高水平，故意给自己施加的压力，就好像是为了锻炼身体而故意对身体的某个区域进行的“打击”。</p><p>如果你考察那些保持可持续状态的运动员，他们的训练方法其实特别强调休息。他们会在高强度训练之后安排正式的休息和非常简单训练。</p></blockquote><p>总结来说，高水平训练流程是这样的 —— </p><ol><li>确定你要练什么；</li><li>进行有针对性的、高压式的训练；</li><li>休息和恢复，让身体能适应变化；</li><li>重复上面过程，但这一次的强度要略高一点。</li></ol><p>整个过程非常简单，关键词是“恢复”。</p><p>人体是一个“反脆弱”系统。能恢复过来，就是反脆弱，会变得更强大；恢复不过来，就练废了。</p><p>这个道理也适用于创造性的脑力劳动。</p><p>出自：布拉德·史托伯格（Brad Stulberg）、史蒂夫·马格内斯（Steve Magness）——《巅峰表现》<br>相关：万维钢 ——《万维钢·精英日课1：〈巅峰表现〉1：成长 = 压力 + 休息》<br>收录时间：2020.1.30</p><div class="anchor" id="chuang-zao"></div><h3 id="创造-想法的连接"><a href="#创造-想法的连接" class="headerlink" title="创造 = 想法的连接"></a>创造 = 想法的连接</h3><blockquote><p>创造性是任意的震动，是不同想法的连接。</p><p>创造性工作需要不确定性。</p></blockquote><p>对于数学家来说，你的想法跟我的想法越不一样，咱俩就越有合作价值。</p><p>如果长期厮混在一起，一个人想什么另一个人马上知道，那还有什么可合作的？</p><p>相关：万维钢 ——《万维钢·精英日课1：〈混乱〉2：混乱的队伍》<br>收录时间：2020.1.30</p><h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><h3 id="大成功-多一点点天赋-很多好运气"><a href="#大成功-多一点点天赋-很多好运气" class="headerlink" title="大成功 = 多一点点天赋 + 很多好运气"></a>大成功 = 多一点点天赋 + 很多好运气</h3><p>见“<a href="#cheng-gong">成功 = 天赋 + 运气</a>”。</p><p>收录时间：2020.1.30</p><h2 id="H"><a href="#H" class="headerlink" title="H"></a>H</h2><div class="anchor" id="hao-mu-biao"></div><h3 id="好目标-难度-×-具体"><a href="#好目标-难度-×-具体" class="headerlink" title="好目标 = 难度 × 具体"></a>好目标 = 难度 × 具体</h3><p>也作“目标效用 = 难度 × 具体”。</p><blockquote><p>好目标的要求就两条：第一，要有难度；第二，要具体。</p><p>首先是难度。有多个研究发现，目标的难度越大，员工的努力程度和最终绩效就越高。当然如果难度太大，到了员工的能力范围之外，那他明知完成不了可能索性就不干了。但只要是在力所能及的范围之内，目标难度基本上和绩效成正比。</p><p>其次是具体。很多人激励自己和激励别人的话是“你要尽最大努力”、“一定要做到最好” —— 这些其实都是空话。多好才是最好？如果目标不具体，人们根本不会做到自己所能做的最好，更可能是做到一个说得过去的程度就算了。</p></blockquote><p>只有具体是不行的。像 SMART 目标那样，人们可以制定非常具体，但是很容易就能达到的目标应付了事。</p><p>有难度，又具体，这就把 SMART 和 Stretch 结合起来，这就是最好的目标。有难度，这就符合“拓展性”的精神，而 SMART 系统，可以视为是一个“书写”目标的标准方法。一个目标只有符合 SMART 的要求，它才是最具体的。</p><p>只有符合了“难度”和“具体”这两个要求，制定目标这个动作才有意义。最后目标的效用，大概是个乘法关系，就好像体操和跳水比赛的得分等于难度系数乘以完成度一样。</p><p>相关：万维钢 ——《万维钢·精英日课1：好目标 = 难度 × 具体》<br>收录时间：2020.1.30</p><h2 id="J"><a href="#J" class="headerlink" title="J"></a>J</h2><div class="anchor" id="jin-bu"></div><h3 id="进步-痛苦-反思"><a href="#进步-痛苦-反思" class="headerlink" title="进步 = 痛苦 + 反思"></a>进步 = 痛苦 + 反思</h3><blockquote><p>Pain + Reflection = Progress</p></blockquote><blockquote><p>达里奥说演化的规律在于必须不断地创新和进步。而痛苦和失败是演化的必然环节。</p><p>尝试 —— 失败 —— 学习 —— 改进，理想人生就是这个永无止境的循环。</p></blockquote><p>你一定会遭遇失败 —— 如果没有失败，你就没有在挑战自己的极限；如果你没有挑战自己的极限，你就没有把自己的潜能最大化发挥出来。面对现实、发现自己的弱点总是痛苦的，但你应该把痛苦当成信号，说明这里可以改进。</p><p>出自：雷·达里奥（Ray Dalio）——《原则：生活和工作》<br>相关：万维钢 ——《万维钢·精英日课2：〈原则〉1：大亨的大道理》<br>收录时间：2020.1.30</p><h2 id="M"><a href="#M" class="headerlink" title="M"></a>M</h2><div class="anchor" id="mu-biao-xiao-yong"></div><h3 id="目标效用-难度-×-具体"><a href="#目标效用-难度-×-具体" class="headerlink" title="目标效用 = 难度 × 具体"></a>目标效用 = 难度 × 具体</h3><p>见“<a href="#hao-mu-biao">好目标 = 难度 × 具体</a>”。</p><p>收录时间：2020.1.30</p><h2 id="Q"><a href="#Q" class="headerlink" title="Q"></a>Q</h2><div class="anchor" id="qin-mi-liang-hao-de-guan-xi"></div><h3 id="亲密良好的关系-开放-响应"><a href="#亲密良好的关系-开放-响应" class="headerlink" title="亲密良好的关系 = 开放 + 响应"></a>亲密良好的关系 = 开放 + 响应</h3><blockquote><p><em>所谓“开放”，就是互相不设防</em>。我告诉你一个我自己比较隐私的事情，向你暴露一个弱点，然后你也向我暴露你的一个弱点，这种不设防的感觉能迅速拉近两个人的亲密程度。你只要主动来一段难过的情感流露，马上就能拉近跟一个陌生人的关系。</p><p>好关系来自互相之间不断的响应。这是一个叫哈里·赖斯（Harry Reis）的社会心理学家于2007年提出的理论。他的洞见是，好关系的关键是“我们互相对对方的响应的感知”。我能感知到你对我的响应，你能感知到我对你的响应，咱俩就是好关系。</p></blockquote><p>同时，<a href="#xiang-ying">响应 = 理解 + 接受 + 关心</a>。</p><p>相关：万维钢 ——《万维钢·精英日课2：〈强力瞬间〉4：好关系的配方》<br>收录时间：2020.1.30</p><h2 id="S"><a href="#S" class="headerlink" title="S"></a>S</h2><div class="anchor" id="shu-xue-qi-wang"></div><h3 id="数学期望-成功的收益-×-成功的概率-失败的损失-×-失败的概率"><a href="#数学期望-成功的收益-×-成功的概率-失败的损失-×-失败的概率" class="headerlink" title="数学期望 = 成功的收益 × 成功的概率 - 失败的损失 × 失败的概率"></a>数学期望 = 成功的收益 × 成功的概率 - 失败的损失 × 失败的概率</h3><blockquote><ol><li><p><em>好事不等于万无一失的事</em>。一件事有失败的可能性不要紧，只要满足 1）数学期望是正的，2）哪怕失败了也可以承受，那就值得做。所有收益大的事都是有风险的，关键在于你能不成承受这个风险。</p></li><li><p><em>有些事失败的损失几乎是零，那么即便这件事失败的概率很高，也值得一试</em>。问问题就是这样的事。很可能对方不知道答案，但如果他知道，那可能就给你一个关键信息；而就算他不知道，你问一下也不损失什么。</p></li><li><p><em>如果成功的收益很大，失败的损失也比较高的话，每一个更精确的概率判断都价值连城</em>。这时候就值得投入很多功夫调研了。最简单的调研就是问问过来的明白人 —— 如前所说，问个问题你又损失不了什么。</p></li></ol></blockquote><p>数学期望是非常可贵的知识，有时候花多少人力物力做研究，就是为了得到一个数学期望。</p><p>相关：万维钢 ——《万维钢·精英日课2：问答：正常化偏误、侥幸心理和灰犀牛》<br>收录时间：2020.1.30</p><div class="anchor" id="su-zao-zhe"></div><h3 id="塑造者-远见-实践思想家-决心"><a href="#塑造者-远见-实践思想家-决心" class="headerlink" title="塑造者 = 远见 + 实践思想家 + 决心"></a>塑造者 = 远见 + 实践思想家 + 决心</h3><blockquote><p>Shapper = Visionary + Practical Thinker + Determined</p></blockquote><blockquote><p>所谓“塑造者（shaper）”，就是你根据自己的想法，改变了一些事物的前进路线。</p><p>Shaper 们有两个重要特点。 第一，他们的眼界非常宽、非常远，能看到别人看不到的东西，这样他们才能产生大想法。第二，他们为了把这个想法变成现实，会不惜一切代价。</p><p>Shaper 总有一个大想法。比如伊隆·马斯克，他的大想法是非要让人类殖民火星。达里奥就当面问过马斯克，说你以前学过火箭科学吗？马斯克说我不是火箭专家，我的知识都是自己看书看的 —— 但是为了干这件事，我愿意去学习火箭科学。这些人不是先看看自己能干什么，然后去给自己找个市场定位 —— 而是先问自己想干什么，然后琢磨怎么把这件事干成。</p></blockquote><p>创新者、企业家和某些科学家和政治家，都可以称为 shaper。</p><p>出自：雷·达里奥（Ray Dalio）——《原则：生活和工作》<br>相关：万维钢 ——《万维钢·精英日课2：〈原则〉1：大亨的大道理》<br>收录时间：2020.1.30</p><h2 id="X"><a href="#X" class="headerlink" title="X"></a>X</h2><div class="anchor" id="xi-huan"></div><h3 id="喜欢-熟悉-意外"><a href="#喜欢-熟悉-意外" class="headerlink" title="喜欢 = 熟悉 + 意外"></a>喜欢 = 熟悉 + 意外</h3><blockquote><p>最容易被人接受的东西，往往是在熟悉和新奇之间找到了一个微妙的平衡。</p></blockquote><p>你之所以觉得这个东西美，是因为你比较熟悉这个东西。这个效应叫做“<a href="/tools/knowledge-handbook/#duo-kan-xiao-ying">多看效应（Mere Exposure Effect）</a>”。</p><p>心理学家在无数的实验中让受试者选他喜欢的东西，最后选出来的都是他熟悉的东西。所以多看效应的意思就是“看得次数多了就喜欢了” —— 也可以说是“吐啊吐啊就习惯了”。</p><p>但熟悉和重复还不一样。重复会导致审美疲劳。最理想的情况，是在一个意外的场合，看到自己熟悉的事物，你才会特别喜欢它。用中国话来说，就是“他乡遇故知”。反过来也对 —— 如果你整天面对一个熟悉的事物，哪天它突然给你来点意外小惊喜，你也会感到它特别美。</p><p>人确实喜欢新奇的东西，但如果东西过于新奇，又会让人感觉到害怕。所以它的原则是“尽可能地前卫，只要能被人接受”，而且还专门有个英文缩写来命名这个原则，叫 MAYA（most advanced yet acceptable）。最理想的效果，就是你的设计特别大胆，而观众还立即就能理解。</p><p>相关：《万维钢·精英日课1：喜欢 = 熟悉 + 意外》<br>收录时间：2020.1.30</p><div class="anchor" id="xiang-fa-jing-ying-zheng-zhi"></div><h3 id="想法精英政治-激进的事实-激进的透明-可信度加权决策"><a href="#想法精英政治-激进的事实-激进的透明-可信度加权决策" class="headerlink" title="想法精英政治 = 激进的事实 + 激进的透明 + 可信度加权决策"></a>想法精英政治 = 激进的事实 + 激进的透明 + 可信度加权决策</h3><blockquote><p>Idea Meritocracy = Radical Truth + Radical Transparency + Believability-Weighted Decision Making</p></blockquote><blockquote><p>想法的精英政治（Idea Meritocracy）是桥水公司的企业文化。</p><p>为了让好想法能说了算，桥水有三个措施：激进的事实、激进的透明，和一个“可信度加权投票系统”。</p><p>所谓激进的事实，就是每个人要大胆表达自己的观点和想法。</p><p>所谓激进的透明，就是所有人都能看到公司正在发生的大部分事情。</p><p>桥水还会利用可信度加权投票的结果，来辅助决策。</p></blockquote><p>出自：雷·达里奥（Ray Dalio）——《原则：生活和工作》<br>相关：万维钢 ——《万维钢·精英日课2：〈原则〉3：激进的公司什么样》<br>收录时间：2020.1.30</p><div class="anchor" id="xiang-ying"></div><h3 id="响应-理解-接受-关心"><a href="#响应-理解-接受-关心" class="headerlink" title="响应 = 理解 + 接受 + 关心"></a>响应 = 理解 + 接受 + 关心</h3><blockquote><p>所谓“响应”，由三点组成：</p><ol><li><p><em>理解</em>。你了解我，而且你还了解我自己是怎么看待我自己的，什么东西对我最重要。</p></li><li><p><em>接受</em>。我想要什么，我是什么样的人，你得对此表示尊重。</p></li><li><p><em>关心</em>。就是在各种场合下，一旦我需要什么帮助，你得帮助我。</p></li></ol></blockquote><p>相关：万维钢 ——《万维钢·精英日课2：〈强力瞬间〉4：好关系的配方》<br>收录时间：2020.1.30</p><h2 id="Z"><a href="#Z" class="headerlink" title="Z"></a>Z</h2><div class="anchor" id="zhi-shi"></div><h3 id="知识-体验-×-敏感度"><a href="#知识-体验-×-敏感度" class="headerlink" title="知识 = 体验 × 敏感度"></a>知识 = 体验 × 敏感度</h3><blockquote><p>对人文主义来说，知识 = 体验 × 敏感度。</p><p>“意识”就是我们的主观体验，也就是你所经历的各种感觉、感情和想法。</p><p>所谓敏感度，有两层意思。第一，你不能光有经历而不重视体察你的体验。第二，你必须允许这些体验来影响你甚至改造你。</p></blockquote><p>赫拉利举了个自己的例子。他之前喝茶喜欢加糖， 后来发现糖把茶叶本身的味道给覆盖了，所以就把糖减少，专门体会茶的味道。然后他对茶的感觉就越来越灵敏，体验越来越丰富，最后发现他最喜欢喝的一种茶是中国四川雅安产的熊猫粪茶 —— 就是用熊猫粪做肥料种植的一种茶。</p><p>赫拉利说，早年你就算给他一杯用明朝的茶碗盛的熊猫粪茶，他也无法分辨出其中感觉，跟用纸杯装的普通茶叶有什么不同。但现在他能体会到其中有巨大的区别。</p><p>出自：尤瓦尔·赫拉利（Yuval Noah Harari）——《未来简史》<br>相关：万维钢 ——《万维钢·精英日课1：〈未来简史〉4：欧美自由主义的史诗》<br>收录时间：2020.1.30</p>]]></content>
      
      
      <categories>
          
          <category> 万能胶囊 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 知识 </tag>
            
            <tag> 公式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>龙珠地图</title>
      <link href="/tools/map/"/>
      <url>/tools/map/</url>
      
        <content type="html"><![CDATA[<h5 id="带你游览奇妙的龙珠世界"><a href="#带你游览奇妙的龙珠世界" class="headerlink" title="带你游览奇妙的龙珠世界"></a>带你游览奇妙的龙珠世界</h5><p>描述对应文章和分类的含义，存放《龙珠》中的素材。</p><h2 id="精神时光屋"><a href="#精神时光屋" class="headerlink" title="精神时光屋"></a>精神时光屋</h2><blockquote><p>一个位于神殿之上的修炼场所，里面的一年相当于外面的一天，可以用来迅速提升实力。</p></blockquote><p><img src="http://q4kbn37nl.bkt.clouddn.com/jing-shen-shi-guang-wu.jpg?e=1580247922&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:Z8FZdNQ7yKUvPUgUIBWdd7_Sadg" alt="精神时光屋"></p><p>寓意：一个专门的修炼场所。</p><p>用途：代表本博客，同时作为分类 —— <a href="/categories/精神时光屋/">博客相关</a>。</p><hr><h2 id="舞空术"><a href="#舞空术" class="headerlink" title="舞空术"></a>舞空术</h2><blockquote><p>悟空在神殿修行期间所学会的招式，通过气来脱离星球引力在空中飞行。</p></blockquote><p><img src="http://q4kbn37nl.bkt.clouddn.com/wu-kong-shu.jpg?e=1580246296&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:CviNbNa1BRgXJjI1uCQJH-Qkww0" alt="舞空术"></p><p>寓意：自由、探索，翱翔在知识的海洋。</p><p>用途：作为分类 —— <a href="/categories/舞空术/">课程笔记</a>。</p><hr><h2 id="元气弹"><a href="#元气弹" class="headerlink" title="元气弹"></a>元气弹</h2><blockquote><p>举起双手向所有生物借取元气，制造一个能量球，制成后扔向敌人。</p></blockquote><p><img src="http://q4kbn37nl.bkt.clouddn.com/yuan-qi-dan.jpg?e=1580247457&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:qiRYeOMpsxA6gwO1iQWjjlTVreU" alt="元气弹"></p><p>寓意：集聚元气，汲取知识。</p><p>用途：作为分类 —— <a href="/categories/元气弹/">读书笔记</a>。</p><hr><h2 id="太阳拳"><a href="#太阳拳" class="headerlink" title="太阳拳"></a>太阳拳</h2><blockquote><p>利用气转为光能从而使敌人暂时失明，再飞速地攻击敌人要害。</p><p>其效果就像闪光弹一样，气用的越多光源越强。</p></blockquote><p><img src="http://q4kbn37nl.bkt.clouddn.com/tai-yang-quan.jpg?e=1580417698&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:D-wGN0veKUrDm1w2VsQ9VbDDJt0" alt="太阳拳"></p><p>寓意：<code>华丽</code> 的外表、<code>耀眼</code> 的辅助，俗称“亮瞎”。</p><p>用途：作为分类 —— <a href="/categories/太阳拳/">艺术设计</a>。</p><hr><h2 id="猜猜拳"><a href="#猜猜拳" class="headerlink" title="猜猜拳"></a>猜猜拳</h2><blockquote><p>将石头剪刀布的手势融入到里面，先单手和敌人对拳，空出来的一只手戳对方的眼睛，再一掌推开对方。</p></blockquote><p><img src="http://q4kbn37nl.bkt.clouddn.com/wu-kong-cai-cai-quan.jpg?e=1581259508&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:QQZDXvCT4cxfLENxXHi2jul4rBk" alt="悟空猜猜拳"></p><p>寓意：多项简单技术的高级组合。</p><p>用途：作为分类 —— 区块链。</p><hr><h2 id="万能胶囊"><a href="#万能胶囊" class="headerlink" title="万能胶囊"></a>万能胶囊</h2><blockquote><p>布尔玛家族企业所研制开发的一种高科技产品，小小的胶囊可以装下摩托、汽车、飞机和房屋等。</p></blockquote><p><img src="http://q4kbn37nl.bkt.clouddn.com/wan-neng-jiao-nang.jpg?e=1580245087&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:3KxR7nLQY_T3Ilx25t9Z2vvs6FU" alt="万能胶囊"></p><p>寓意：知识的 <code>工具箱</code>、<code>百宝箱</code> 和 <code>锦囊</code>。</p><p>用途：作为分类 —— <a href="/categories/万能胶囊/">工具</a>。</p><h3 id="龙珠地图"><a href="#龙珠地图" class="headerlink" title="龙珠地图"></a>龙珠地图</h3><blockquote><p>龙珠世界的地图。</p></blockquote><p><img src="http://q4kbn37nl.bkt.clouddn.com/long-zhu-di-tu.jpg?e=1580247107&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:2KFjFki_sO79rNvzm0gHyWPKCDs" alt="龙珠地图"></p><p>寓意：纵观世界全貌，可供选取 <code>可塑之才</code>。</p><p>用途：作为文章 —— 即本文。</p><h3 id="龙珠"><a href="#龙珠" class="headerlink" title="龙珠"></a>龙珠</h3><blockquote><p>七颗名为“龙珠”的宝物，每颗龙珠各自有一至七颗不等的五角星标记并散布于世界各地，只要集齐七颗龙珠就可以呼唤出神龙，向神龙许愿便可以达成任何愿望。</p><p>而龙珠在神龙实现愿望后便会自动飞散并且变成石头，一年后集齐七颗龙珠的话，便可再次实现愿望。</p></blockquote><p><img src="http://q4kbn37nl.bkt.clouddn.com/long-zhu.jpg?e=1580530338&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:GNwZlYzuiA2e2R81-FwjbWfnb6Q" alt="龙珠"></p><p>寓意：用来实现愿望的 <code>宝物</code>、<code>知识</code>、<code>财富</code>。</p><p>用途：作为文章 —— <a href="/tools/knowledge-handbook/">知识手册</a></p><h3 id="龙珠雷达"><a href="#龙珠雷达" class="headerlink" title="龙珠雷达"></a>龙珠雷达</h3><blockquote><p>用来寻找龙珠的道具。最精准的是布尔玛所制的龙珠雷达。</p></blockquote><p><img src="http://q4kbn37nl.bkt.clouddn.com/long-zhu-lei-da.gif?e=1580245265&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:oneRra2rduP85ExzRj0Fvxkfd4Y" alt="龙珠雷达"></p><p>寓意：知识的 <code>指南针</code>、<code>仪表盘</code>、<code>扫盲</code> 工具。</p><p>用途：作为文章 —— <a href="/tools/knowledge-graph/">知识图谱</a>。</p><h3 id="坡塔拉耳环"><a href="#坡塔拉耳环" class="headerlink" title="坡塔拉耳环"></a>坡塔拉耳环</h3><blockquote><p>又称“巴特拉耳环”，是界王神历代流传下来的宝物，其功能是两个人用来合体为一个非常强大的战士。</p><p>用坡塔拉耳环进行合体的有：</p><ol><li><p><strong>贝吉特</strong>：由孙悟空（卡卡罗特）与贝吉塔使用界王神圣物“坡塔拉耳环”合体所诞生的超级战士，是《龙珠》原著最强的战士。</p></li><li><p><strong>扎马斯【合体】</strong>：由黑暗人与未来扎马斯使用第十宇宙坡塔拉耳环合体所诞生的战士，拥有强悍的实力和不死身，在《龙珠超》中登场。</p></li><li><p><strong>开芙拉</strong>：由卡莉芙拉与开尔使用第六宇宙坡塔拉耳环合体所诞生的超级战士，同时也是龙珠史上第一位女性赛亚人合体的战士，在《龙珠超》中登场。</p></li><li><p><strong>老界王神</strong>：由十五代之前的年轻界王神和一个老巫婆用坡塔拉耳环合体。</p></li></ol></blockquote><p><img src="http://q4kbn37nl.bkt.clouddn.com/po-ta-la-er-huan.png?e=1580336943&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:pEKaATKgjM6IULGs1ZWRs09lGvk" alt="坡塔拉耳环"></p><p>寓意：旧的知识组合成新的知识。</p><p>用途：作为文章 —— <a href="/tools/knowledge-formula/">知识方程式</a>。</p><h3 id="仙豆"><a href="#仙豆" class="headerlink" title="仙豆"></a>仙豆</h3><blockquote><p>一种神奇的食物，只要吃下一粒便可以使人的伤势迅速恢复。</p><p>仙豆由卡林塔的猫仙人所种植，虽然外表只是一颗平凡无奇的绿豆子，但其内含极强能量，即便是超级赛亚人服用，也能立即恢复体力和精神力。</p></blockquote><p><img src="http://q4kbn37nl.bkt.clouddn.com/xian-dou.jpg?e=1580351453&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:hEDN46SKRt8Nl9idEgPdAQYr8-0" alt="仙豆"></p><p>寓意：<code>打鸡血</code>、<code>满血复活</code>的强心剂。</p><p>用途：作为文章 —— <a href="/tools/mottoes/">格言金句</a>。</p><h4 id="筋斗云"><a href="#筋斗云" class="headerlink" title="筋斗云"></a>筋斗云</h4><blockquote><p>用来骑乘的飞行工具。</p><p>猫仙人送给青年龟仙人的礼物，只有内心纯洁的人才能坐上去。本体是卡林塔外的一大片云。</p><p>龟仙人老年变得好色而无法再使用，于是送给了悟空。不怕子弹、炮弹等一切物理攻击，但会被魔族的攻击打散。</p></blockquote><p><img src="http://q4kbn37nl.bkt.clouddn.com/jin-dou-yun.jpg?e=1580528638&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:lincyH5hAJSaOdRzzzF8MZPvRC0" alt="筋斗云"></p><p>寓意：腾云驾雾的赶路神器，我们一直在路上。</p><p>用途：作为文章 —— <a href="/tools/to-do-list/">待办事项</a>。</p><h2 id="吧台"><a href="#吧台" class="headerlink" title="吧台"></a>吧台</h2><blockquote><p>精神时光屋的储藏室里有充足的食物和水，当然少不了饮料。无论你快乐、忧伤、迷茫还是困惑，当你想要喝一杯时，那就来吧台吧。</p></blockquote><p>寓意：情感寄托的空间。</p><p>用途：作为分类 —— <a href="/categories/吧台/">情感/娱乐</a>。</p><h3 id="波子汽水"><a href="#波子汽水" class="headerlink" title="波子汽水"></a>波子汽水</h3><blockquote><p>尽管不是什么能量饮料，但是快乐的源泉。</p></blockquote><p><img src="http://q4kbn37nl.bkt.clouddn.com/bo-zi-qi-shui.jpg?e=1580262806&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:stxIFM06Y_atF7MZijUWiyNzWbo" alt="波子汽水"></p><p>寓意：快乐的源泉。</p><p>用途：作为文章 —— <a href="/entertainment/jokes/">搞笑段子</a>。</p><hr><h2 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h2><p>暂未使用、将来可能被用到的素材库存。</p><h3 id="道具类"><a href="#道具类" class="headerlink" title="道具类"></a>道具类</h3><h4 id="龙珠-1"><a href="#龙珠-1" class="headerlink" title="龙珠"></a>龙珠</h4><blockquote><p>集齐七颗龙珠可以召唤神龙，实现愿望。</p><p>分散在地球的各个角落。每次集齐并实现愿望后，龙珠会重新随机散落到世界各地。</p></blockquote><p>寓意：帮助实现愿望的知识、资源和资产。</p><h4 id="如意棒"><a href="#如意棒" class="headerlink" title="如意棒"></a>如意棒</h4><blockquote><p>青年龟仙人向猫仙人坚持要来的武器。实际上是连接卡林塔与天神殿的神器。轻便但十分坚硬，且能按使用者的意愿伸长缩短。</p></blockquote><h4 id="超神水"><a href="#超神水" class="headerlink" title="超神水"></a>超神水</h4><blockquote><p>喝下超神水的地球人，如果心灵纯洁就会获得强大的力量；反之，则会直接被超神水毒死。</p><p>小悟空就是在喝了超神水之后才打败的比克大魔王。</p></blockquote><h4 id="时光机"><a href="#时光机" class="headerlink" title="时光机"></a>时光机</h4><blockquote><p>可以操控时间的大型机器，由科学女怪才 —— 布尔玛所创造。</p></blockquote><h4 id="时间戒指"><a href="#时间戒指" class="headerlink" title="时间戒指"></a>时间戒指</h4><blockquote><p>具有回溯、穿越时间能力的戒指，被神所掌握。</p></blockquote><h4 id="全王召唤器"><a href="#全王召唤器" class="headerlink" title="全王召唤器"></a>全王召唤器</h4><blockquote><p>召唤全王的按钮。</p></blockquote><h3 id="形态类"><a href="#形态类" class="headerlink" title="形态类"></a>形态类</h3><h4 id="巨猿"><a href="#巨猿" class="headerlink" title="巨猿"></a>巨猿</h4><blockquote><p>悟空在满月状态下的变身状态，战斗力是常态的 10 倍。需要见到满月，还要有尾巴。身体迅速变大，体毛迅速变长，变成猩猩的样子，失去理智。</p></blockquote><h4 id="超级赛亚人"><a href="#超级赛亚人" class="headerlink" title="超级赛亚人"></a>超级赛亚人</h4><blockquote><p>悟空在那美克星一战中悟空目睹了克林的死，愤怒而变成的状态。战斗力是常态的50倍。</p><p>变身超级赛亚人与体内的S细胞有关，首先必须要让S细胞达到一定程度加上愤怒之类的情绪刺激S细胞瞬间增加。</p><p>普通进阶：</p><ol><li><p>二阶段：由超级赛亚人的基础上再一次的改变，变成这种状态肌肉会膨胀，速度和力量都比普通的超级赛亚人状态强很多。</p></li><li><p>三阶段：悟空在精神时光屋中修炼到的形态。由第二阶段的基础上改变，这个形态肌肉会极度膨胀，消耗大量能量并严重影响速度</p></li><li><p>全功率：能长久保持超级赛亚人形态的特殊状态，最理想的超级赛亚人状态。</p></li><li><p>GLEAM EXPLOSION：由贝吉塔、悟饭、特兰克斯、悟天四位超级赛亚人向悟空集中力量</p></li></ol></blockquote><h4 id="超级赛亚人2"><a href="#超级赛亚人2" class="headerlink" title="超级赛亚人2"></a>超级赛亚人2</h4><blockquote><p>悟空在阴间期间所修炼出的形态。战斗力是常态的100倍，由超级赛亚人的基础上再一次的变身。头发更竖，额前留下少许刘海，周身会出现闪电，气会变成喷气状。</p></blockquote><h4 id="超级赛亚人3"><a href="#超级赛亚人3" class="headerlink" title="超级赛亚人3"></a>超级赛亚人3</h4><blockquote><p>悟空在阴间期间所修炼出的形态。战斗力是常态的400倍，由超二的基础上再一次而改变。头发变长，眉毛且眉骨降低，瞳孔会变成双色瞳，长发及腰。</p></blockquote><h4 id="超级赛亚人之神"><a href="#超级赛亚人之神" class="headerlink" title="超级赛亚人之神"></a>超级赛亚人之神</h4><blockquote><p>首次变身需五位拥有正义之心的赛亚人往另一位拥有正义之心的赛亚人身上注入 “心力” 。面容显得比较年轻，头发和眉毛变成荧光红，双目变成包裹黑色仁心的红瞳，周身环绕着火焰般的灵气。</p></blockquote><h4 id="超级赛亚人蓝"><a href="#超级赛亚人蓝" class="headerlink" title="超级赛亚人蓝"></a>超级赛亚人蓝</h4><blockquote><p>悟空在维斯的训练下所修炼达到的形态，头发和眉毛与瞳孔变成荧光蓝，气息变为天蓝色。</p><p>相关进阶：</p><ol><li><p>超蓝界王拳：在变身成为超蓝后，发动界王拳来进一步加强战斗力（动画原创）。</p></li><li><p>超蓝全功率：加强了自己对气息的控制，终能成功把散发在体外的神气息完全收敛在体内，进一步提高了战斗力。</p></li><li><p>超蓝全功率·透支：强行提升力量，但严重消耗生命力与体力。</p></li></ol></blockquote><h3 id="技能类"><a href="#技能类" class="headerlink" title="技能类"></a>技能类</h3><h4 id="龟派气功"><a href="#龟派气功" class="headerlink" title="龟派气功"></a>龟派气功</h4><blockquote><p>使用时双手合成花萼状，把花萼状的手放在腰间，在双手掌心聚成一个能量光球，聚集到一定程度时双手推向敌人。</p><p>威力随着使用者增强而增强（例如超级、10倍），用法多样（例如悟空曾用脚发出、还曾制成气弹型）。</p></blockquote><p>寓意：最擅长的招式、核心力量。</p><p>用途：作为分类 —— 服务端编程。</p><h4 id="界王拳"><a href="#界王拳" class="headerlink" title="界王拳"></a>界王拳</h4><blockquote><p>使用时气会变成红色，身体的力量、速度、防御力提高数倍，原理和超级赛亚人变身类似。</p><p>对身体有极大副作用，在使用时若超出了身体承受范围，身体会崩溃。</p></blockquote><p>寓意：外表形态的强化、与其他主要能力配合。</p><p>用途：作为分类 —— 用户端编程。</p><h4 id="自在极意功"><a href="#自在极意功" class="headerlink" title="自在极意功"></a>自在极意功</h4><blockquote><p>眼珠变为银色。不需要大脑的指挥，加快反应速度、移动速度，让自身的各个部位依靠本能的去感知周围危险、条件反射的进行攻防，不用过去的感知气的方式去战斗。</p><p>完成版头发、眉毛变为银色。</p></blockquote><p>寓意：自由自在、心随我动。</p><p>用途：作为分类 —— 产品研发。</p><h4 id="瞬间移动"><a href="#瞬间移动" class="headerlink" title="瞬间移动"></a>瞬间移动</h4><blockquote><p>悟空在亚德拉特星学会的传送技能。通过感受某人的气，不用经过任何路径，瞬间到达某人的地方，也可带人，但不能去没人的地方。</p></blockquote><p>用途：作为分类 —— 网络。</p><h4 id="气感知"><a href="#气感知" class="headerlink" title="气感知"></a>气感知</h4><blockquote><p>悟空在神殿修行期间所学会的招式。可感知到想感知的人所在的地方，也可感知对方的实力，但不能隔得像几个星球那么远。</p></blockquote><h4 id="气隐匿"><a href="#气隐匿" class="headerlink" title="气隐匿"></a>气隐匿</h4><blockquote><p>同气息感知一样，为了躲避别人感应到自己的招式。可以隐藏自身的气息，然后躲起来使敌人无法发现自己。</p></blockquote><h4 id="魔封波"><a href="#魔封波" class="headerlink" title="魔封波"></a>魔封波</h4><blockquote><p>武泰斗为打败大魔王而开发的招数，将无法打败的邪恶力量封印起来的强大招数。</p></blockquote><p>寓意：问题的退一步解法。</p><p>用途：作为分类 —— 数据库缓存。</p><h4 id="残像拳"><a href="#残像拳" class="headerlink" title="残像拳"></a>残像拳</h4><blockquote><p>由地球的龟仙人所创。利用高速产生的残像制造类似分身术来迷惑敌人。</p></blockquote><h4 id="气圆斩"><a href="#气圆斩" class="headerlink" title="气圆斩"></a>气圆斩</h4><blockquote><p>克林的得意技。在手掌上形成圆盘形的、具有斩击效果的投掷气弹，大多是和普通气功波一样从掌心直接生成。</p></blockquote><h4 id="传气"><a href="#传气" class="headerlink" title="传气"></a>传气</h4><blockquote><p>将自己的气传递给对方，可增强对方实力或为对方暂时治疗。</p></blockquote><p>寓意：助人为乐。</p><p>用途：作为分类 —— 分享/教学。</p><h4 id="美达摩融合"><a href="#美达摩融合" class="headerlink" title="美达摩融合"></a>美达摩融合</h4><blockquote><p>这招不属于攻击型的招式。需要两个实力和身高与身材差不多的人才能使用，通过作出相应的舞步来进行融合。</p></blockquote><p>寓意：合作。</p><p>用途：作为分类 —— 协作。</p><h4 id="龙拳"><a href="#龙拳" class="headerlink" title="龙拳"></a>龙拳</h4><blockquote><p>使用从拳头中飞出一条金龙穿过敌人身体再缠绕住敌人（有时是直接贯穿），再进行爆炸。是悟空最强的物理攻击技能。</p></blockquote><h3 id="房间类"><a href="#房间类" class="headerlink" title="房间类"></a>房间类</h3><h4 id="浴室"><a href="#浴室" class="headerlink" title="浴室"></a>浴室</h4><h4 id="储粮库"><a href="#储粮库" class="headerlink" title="储粮库"></a>储粮库</h4><h4 id="练功场"><a href="#练功场" class="headerlink" title="练功场"></a>练功场</h4>]]></content>
      
      
      <categories>
          
          <category> 万能胶囊 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 素材 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>波子汽水</title>
      <link href="/entertainment/jokes/"/>
      <url>/entertainment/jokes/</url>
      
        <content type="html"><![CDATA[<h2 id="新型冠状病毒"><a href="#新型冠状病毒" class="headerlink" title="新型冠状病毒"></a>新型冠状病毒</h2><h3 id="苦不堪言"><a href="#苦不堪言" class="headerlink" title="苦不堪言"></a>苦不堪言</h3><p>2020年春节，由于新型冠状病毒导致的流感爆发，国家要求延长春节假期至2020年2月9日。</p><p>“因新型冠状病毒被迫停工，员工萌苦不堪言”</p><p><img src="http://q4kbn37nl.bkt.clouddn.com/ku-bu-kan-yan.jpg?e=1580193490&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:ycFNNrGXhxvEfMoPrTZR4cDQVSw" alt=""></p><blockquote><p>露出了悲愤欲绝的笑容 /doge</p></blockquote><p>时间：2020.1.28</p><h3 id="武汉热干面"><a href="#武汉热干面" class="headerlink" title="武汉热干面"></a>武汉热干面</h3><p>全网通缉周围的泡面，可能都被传染了，紧急召回碗里量体温！！</p><p><img src="http://q4kbn37nl.bkt.clouddn.com/wu-han-re-gan-mian.jpg?e=1580359521&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:C7xZWXedzGghvg2_mynKTDghfXg" alt=""></p><p>时间：2020.1.30</p>]]></content>
      
      
      <categories>
          
          <category> 吧台 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 搞笑段子 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蝴蝶无效应，安全有小事</title>
      <link href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-3/20190621_hu-die-wu-xiao-ying-an-quan-you-xiao-shi/"/>
      <url>/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-3/20190621_hu-die-wu-xiao-ying-an-quan-you-xiao-shi/</url>
      
        <content type="html"><![CDATA[<h5 id="《万维钢·精英日课3：蝴蝶无效应，安全有小事》课程笔记"><a href="#《万维钢·精英日课3：蝴蝶无效应，安全有小事》课程笔记" class="headerlink" title="《万维钢·精英日课3：蝴蝶无效应，安全有小事》课程笔记"></a>《万维钢·精英日课3：蝴蝶无效应，安全有小事》课程笔记</h5><p>“蝴蝶效应”是人们经常谈论的一个科学典故，说巴西的一只蝴蝶振动翅膀，有可能在几周之后，在美国得克萨斯州，导致了一场飓风。</p><p>人们常常用蝴蝶效应形容微小的事情可能带来很大的影响。</p><p>实际上，当人们谈论蝴蝶效应的时候，基本上都说错了。而这个认知错误更体现了一个重要的观念错误。</p><h2 id="1-蝴蝶效应的由来"><a href="#1-蝴蝶效应的由来" class="headerlink" title="1 蝴蝶效应的由来"></a>1 蝴蝶效应的由来</h2><p>1961年，美国数学家爱德华·洛伦兹（Edward Lorenz）在用计算机模拟天气变化的时候，发现一个有意思的现象。本来有个输入参数的数值应该是 <code>0.506127</code>，有一次模拟中洛伦兹为了省事，就把它给来了个四舍五入，用 <code>0.506</code> 代替。可是洛伦兹发现，计算机输出的结果，不是相差万分之二，也不是相差百分之二，也不是相差百分之二十 —— 而是变成了一个完全不同的天气状况。</p><p>这就相当于说，你测量某地大气压数值如果有万分之二的误差，你预测出来的天气就从晴天变成下雨了。</p><p>数学家对此并不意外，他们早就知道，对于“非线性系统”，结果有时候就是会对初始值非常敏感 —— 初始值差一点点，结果就会相差很大。这也是“混沌”这个概念的起源。比如著名的“三体问题”就是一个非线性系统。三个临近的星球在引力作用下会如何运动？开始的位置差一点点，后面的结果就会很不一样。反过来说，“线性系统”就简单了，输入差一点，输出也差一点。</p><p>洛伦兹有感于非线性系统这个性质实在太不好对付，就打了个夸张的比方，说这简直就是说巴西的蝴蝶震动翅膀，带来了德克萨斯的一场飓风啊……</p><h2 id="2-蝴蝶效应的误区"><a href="#2-蝴蝶效应的误区" class="headerlink" title="2 蝴蝶效应的误区"></a>2 蝴蝶效应的误区</h2><p>洛伦兹说的只是一个夸张的比喻而已。蝴蝶不会导致飓风。</p><p>非线性系统并不是完全不可控的系统。今天我们的天气预报是相当准确的，气象局能够很好地预测下雨、下雪、飓风和台风。气象局是通过卫星云图和地面气象数据的观测来预测天气，他们并不需要关注地球上所有的蝴蝶 —— 事实上他们根本就不考虑蝴蝶的事儿。</p><p>洛伦兹当初可能正好用了一个特别敏感的模型。事实上并不是所有的非线性系统对所有的输入参数都那么敏感。天气系统并不是一个特别夸张的变化多端的系统。人们经常把股市描写成混沌系统，有些看起来很无害的小波动也有可能带来股市比较大的波动，但是小波动不会导致股灾之类的大事件。</p><p>人们经常用蝴蝶效应形容小事导致了大事，但这个观念是错误的，小事不会 <em>导致</em> 大事。</p><div class="anchor" id="dao-zhi-de-han-yi"></div><h2 id="3-“导致”的含义"><a href="#3-“导致”的含义" class="headerlink" title="3 “导致”的含义"></a>3 “导致”的含义</h2><p>从小到大的一堆多米诺骨牌排在一起，最大的一块有一个人那么大，最小的一块比指甲盖还小，只能用镊子拿。放倒最小的一块，骨牌就会连锁反应，最终把最大的一块也推倒。</p><p><img src="http://q4kbn37nl.bkt.clouddn.com/domino.jpg?e=1580197811&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:XsVUkhsjhq5ozl8KX5uJhFj3WCs" alt="多米诺骨牌"></p><p>这不就是蝴蝶效应吗？这不就是小骨牌导致了大骨牌的倒下吗？</p><p>不是。</p><p><em>是这些骨牌的排列方式，导致了大骨牌的倒下。这是一个极其危险的系统。就算最小的骨牌不倒，中间任何一个骨牌倒下，都会导致后面所有的骨牌倒下。</em></p><p>如果要追责的话，你要问的不是谁推倒了最小的骨牌 —— 最小的骨牌有权做它想做的事情 —— 而是谁把骨牌排列成这个样子！这就好比说如果你把一堆炸药堆放在一起，只要一个火星就能引起爆炸，那如果真的爆炸了，你不应该埋怨那个火星，你应该反思的是为什么炸药这么危险的东西不好好管理。</p><p>火星总会来的。小骨牌总要倒下。蝴蝶总要震动翅膀。<em>你应该怪罪的是系统，而不是导火索。</em></p><div class="anchor" id="wen-ti-zai-yu-xi-tong"></div><h2 id="4-问题在于系统"><a href="#4-问题在于系统" class="headerlink" title="4 问题在于系统"></a>4 问题在于系统</h2><p>1979年，美国宾夕法尼亚州的三里岛核电站，发生了一次严重的反应堆融毁事故。事故没有造成直接或者间接的人员伤亡，但是光是清理费用就超过了 10 亿美元。当时美国政府请了一位叫查尔斯·佩罗（Charles Perrow）的社会学家帮着分析事故原因。佩罗的研究，从此改变了人们对大事故的看法 <a href="#references">[1]</a>。</p><p>跟一般公众的观点相反，核电站，其实是一种非常不容易出毛病的东西。切尔诺贝利核电站是完全没经验的设计，才出了那么大的灾难。三里岛核电站是老式的设计，安全性能跟今天的新型核电站不能比，但就是这样，它也没那么容易出问题。佩罗发现，三里岛事故，是由三个原因同时起作用导致的 ——</p><blockquote><p>第一，反应堆有个给水系统，正常情况下应该供水，但是出现故障没用供水。本来这个可能性在设计方案中就考虑到了，还有两个备用系统可以自动供水 —— 但不巧的是，备用系统在之前维护的时候被关闭了，没有按规定打开。</p><p>第二，因为没有水，反应堆温度就上升，这时候有个泄压阀就自动开启降低温度。等到温度降下来，按理说泄压阀应该自动关闭，可是因为故障它没有关上，于是导致反应堆的冷却剂往外流。</p><p>第三，如果工作人员能正确判断发生了什么，也能立即采取有效措施。可是工作人员看到的指示灯显示泄压阀已经关闭了。这是因为指示灯的设计是显示是否已经<em>命令</em>泄压阀关闭，而不是显示泄压阀的真实状态。工作人员被误导了。</p></blockquote><p>这三件事只要有一件不发生，大事故就不会发生。英文中有个词叫“<a href="/tools/knowledge-handbook/#wan-mei-feng-bao">完美风暴（perfect storm）</a>”，意思是几个因素恰好一起发生了，导致一个剧烈的后果 —— 三里岛核事故，就是一场完美风暴。</p><p>那请问，这个事故里谁是蝴蝶呢？应该指责谁呢？人们本能反应是指责当时负责操作的工作人员，可是三件事是在 13 秒内发生的！工作人员根本来不及反应！</p><p><em>佩罗说，我们真正应该指责的是系统。</em></p><div class="anchor" id="zhong-da-shi-gu-de-liang-ge-te-zheng"></div><h2 id="5-重大事故的两个特征"><a href="#5-重大事故的两个特征" class="headerlink" title="5 重大事故的两个特征"></a>5 重大事故的两个特征</h2><p>从三里岛事故出发，佩罗总结，现代几乎所有重大事故 —— 包括飞机坠毁、化工厂爆炸等等 —— 都有两个共同特征。</p><p><em>第一个特征是“复杂”</em>。中文的“复杂”对应到英文有两个词，一个是 <code>complex</code>，一个是 <code>complicated</code>。后者的意思差不多是“很麻烦、不容易理解”，而前者的意思是系统的各个部分互相关联，不是简单的连接。我们说的这个复杂是 complex。</p><p>以前精英日课专栏说过“系统思维”，我们知道系统里有正反馈和负反馈回路 <a href="#references">[2]</a>。正反馈回路会让系统不稳定，负反馈回路会让系统回归稳定。核电站这种系统实在太复杂了，其中有各种反馈回路，有些部分之间的关联还是隐藏的，可能设计者都想不到。那么如果有一个正反馈关联回路是你没想到的，在事故中开启了，就会很麻烦。</p><p><em>第二个特征是“紧致耦合（tight coupling）”</em>。所谓紧致耦合，就是这个系统缺少缓冲地带 <a href="#references">[3]</a>，错一点都不行，没有余闲 <a href="#references">[4]</a>。</p><p><em>出现这个情况往往是系统过于追求效率，搞得什么东西都一环套一环可丁可卯，结果错一步就导致后面全错。</em></p><p>比如大桥就是一个不复杂、耦合也不紧的系统。哪个桥墩有问题，不至于马上波及别的桥墩，大桥对付着还能用上一段时间。道路交通也不复杂，但是耦合比较紧，一条路上任何一个地方出事故，整条路都得堵车。大学系统很复杂，但是耦合不紧，教授们就算搞搞政治斗争也翻不了天。可是像核电站和化工厂这种东西，如果又复杂耦合又紧，那就容易出大事故。</p><h2 id="6-安全系统"><a href="#6-安全系统" class="headerlink" title="6 安全系统"></a>6 安全系统</h2><p>当人们强调“安全”的时候，总爱说什么要狠抓“安全意识”，什么“年年讲月月讲天天讲”，什么“警钟长鸣”。可是安全意识有用吗？</p><p><em>安全意识关注的是蝴蝶</em>。如果飓风真的是由蝴蝶引起的，那你就应该好好教育蝴蝶们，不要随便震动翅膀。如果事故真的是因为工作人员疏忽，那你就应该给员工天天讲。</p><p>其实“天天讲”是个不好的教育方法，<em>重复的信息会被人脑自动忽略</em>。如果一个烟雾报警器有事儿没事儿动不动就叫，你会直接关掉它了事。</p><p>更重要的是，真正的大事故不是蝴蝶引起的。<em>我们需要的不是安全意识，而是安全系统。</em></p><div class="anchor" id="fen-qing-qing-zhong-ji-huan"></div><h2 id="7-分清轻重急缓"><a href="#7-分清轻重急缓" class="headerlink" title="7 分清轻重急缓"></a>7 分清轻重急缓</h2><p>经常与蝴蝶效应共同出现的一句话是“XX无小事”，这也是一个错误的观念。<em>无小事 = 无大事。</em></p><p><em>做事得善于分清轻重缓急。敢于忽略小事，你才能做好大事。</em></p><blockquote><p>如果一个领导只会笼统地说什么“这很复杂啊！这很重要啊！千里之堤毁于蚁穴啊！核电站无小事！”，我认为这领导啥也不懂。</p></blockquote><p>把系统搞好了，有缓冲区有余闲有稳定回路，我们就可以有恃无恐。反过来说如果系统不行，人就算整天战战兢兢也难保不出事儿。</p><p><em>凡夫畏果，菩萨畏因，我们有现代化管理知识的人还要再加一句：佛畏系统。</em></p><h2 id="学习心得"><a href="#学习心得" class="headerlink" title="学习心得"></a>学习心得</h2><p>这绝对是一篇精彩至极的文章！这一课的笔记，我也几乎是原文全篇复制，少有改动。</p><h3 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h3><blockquote><ol><li><p>小事不会导致大事；你应该怪罪的是系统，而不是导火索。</p></li><li><p>现代几乎所有重大事故都有两个共同特性 —— “复杂”和“紧致耦合”。</p></li><li><p>我们需要的不是安全意识，而是安全系统。</p></li><li><p>做事得善于分清轻重急缓，敢忽略小事，才能做好大事。</p></li><li><p>把系统搞好了，有缓冲区、有余闲、有稳定回路，我们就可以有恃无恐；相反，如果系统不行，人就算整天战战兢兢也难保不出事故。</p></li></ol></blockquote><h3 id="延伸"><a href="#延伸" class="headerlink" title="延伸"></a>延伸</h3><div class="anchor" id="guan-jian-zai-yu-xi-tong-er-bu-shi-dao-huo-suo"></div><h4 id="关键在于系统，而不是导火索"><a href="#关键在于系统，而不是导火索" class="headerlink" title="关键在于系统，而不是导火索"></a>关键在于系统，而不是导火索</h4><p>是整个系统长期存在隐患，才导致自身在受到非常轻微的外部影响时崩溃。这是一个认知问题。</p><p>恋人分手，很多男生都搞不明白。相处了好一阵子，突然哪天一言不合，女生说“你不爱我了，我要跟你分手”。男生也纳闷了很久，怎么就因为这么件小事分手了？现在他可以弄清楚了，那个鸡毛蒜皮只是导火索，问题的关键在于他们平日里的相处模式，那些反馈回路，那些相互的猜忌、考验、忍耐以及期待。</p><h4 id="准确性还是效率？"><a href="#准确性还是效率？" class="headerlink" title="准确性还是效率？"></a>准确性还是效率？</h4><p>系统的“紧致耦合”，往往是因为过度追求效率，使每个环节都紧密连接在一起，缺少缓冲地带。</p><p>而往系统中添加具有缓冲作用的流程，并不见得一定会降低效率，反而可能使性能提升。</p><blockquote><p>在软件设计中经常使用到的数据缓存，就是对取数过程的缓冲地带，同时还可以提高查询的性能。数据缓存相当于是对数据库中部分数据的轻量级的备份，它通常是与业务紧密结合的，对数据的范围和格式可以高度定制化，容易存、取，以实现在性能上有显著的提升。</p><p>但缓存也引入了新的问题，即“数据一致性”问题。当数据库中真实的数据发生了修改，需要回过头来更新缓存。在此期间，缓存中的数据与实际不符，已经过期、没有意义，这样的数据被称为“脏数据”。</p></blockquote><p>对于数据准确性的问题，实际上有很多相对成熟的解决方案了，在这里不做细究。</p><p>但我们需要清楚的是，准确性和效率是一对矛盾。“快”和“准”多数情况下不能同时做到极致。如何把握两者之间的平衡，就是一个要从系统的角度去看待的问题。</p><p>如果把“快”（时间）当作成本，把“准”（信息质量）看成收益，这也是成本与收益的权衡。</p><p>有没有一个实际一点的例子呢？有。</p><blockquote><p>一个用户准入流程，用户上传自己的身份证图像，系统自动通过 <code>文字识别（OCR）</code> 技术提取身份证号码和姓名信息，送去后台做 <code>实名认证</code>。</p><p>假如我们的文字识别系统准确率比较低，容易出错。它可能把身份证号码中的某一位数字 <code>7</code> 误认成了是 <code>1</code>，或者把姓名中的某一个字识别成了另一个相似的字，但系统是不知道自己识别出错了的。接下来的实名认证当然不会通过了。一步错，步步错，后面的自动化流程就更加没有任何价值，用户体验还极差。而且这些流程是有成本的，暂且抛开网络开销、服务器的算力和存储这些隐藏的成本不谈，实名认证渠道是按服务次数收费的，那都是白花花的银子。</p><p>这里边的流程可以如何优化呢？</p><p>第一，将文字识别的结果展示给用户，说“系统识别到您的身份证号码是330329<strong>****</strong>0011，姓名是*泰迪，将以此信息自动去做实名认证，请用户核实信息并授权”。界面上的“确认”按钮停留几秒钟，再让用户确认。如果实名认证不通过，提示用户可能是图像识别出错，建议重新拍照上传。尽管这样的流畅度较差，用户体验上会打折扣，但至少能节约成本，也显得比较正式。</p><p>第二，将后台实名认证失败的记录做缓存，同样的身份证号码和姓名再次过来，缓存就给拦了，不用送渠道去耗费。当然这个缓存不能是永久的，得是有时效性的 —— 用户可能会改名。即使用户将清晰度较差的图片多次上传，OCR多次识别出同样的错误信息，实名认证的费用也只会消耗一次。</p></blockquote><div class="anchor" id="references"></div><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p>[1] 此事详情见于 Meltdown: Why Our Systems Fail and What We Can Do About It, by Chris Clearfield and András Tilcsik, 2018.</p><p>[2] 《万维钢·精英日课2：线性思维和系统思维》</p><p>[3] 《万维钢·精英日课3：逻辑思维5：灰度认知和黑白决策》</p><p>[4] 《万维钢·精英日课3：怎样不做“必须做的事儿”》</p><p>课程发布日期：2019.6.21</p>]]></content>
      
      
      <categories>
          
          <category> 舞空术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 课程笔记 </tag>
            
            <tag> 万维钢·精英日课3 </tag>
            
            <tag> 系统思维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内心的董事会</title>
      <link href="/online-course-notes/luo-ji-si-wei/season-7/20190528_zen-me-chu-li-ji-shou-wen-ti/"/>
      <url>/online-course-notes/luo-ji-si-wei/season-7/20190528_zen-me-chu-li-ji-shou-wen-ti/</url>
      
        <content type="html"><![CDATA[<h5 id="《罗辑思维7：第738期丨怎么处理“棘手问题”？》课程笔记"><a href="#《罗辑思维7：第738期丨怎么处理“棘手问题”？》课程笔记" class="headerlink" title="《罗辑思维7：第738期丨怎么处理“棘手问题”？》课程笔记"></a><a href="https://www.ljsw.io/knowl/article/9F.html" target="_blank" rel="noopener">《罗辑思维7：第738期丨怎么处理“棘手问题”？》</a>课程笔记</h5><p>罗胖认为，处理“<a href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-3/20190523_dan-chun-wen-ti-liang-nan-wen-ti-he-ji-shou-wen-ti/">棘手问题</a>”的一个很有用的心法，是组建一个“内心的董事会”。</p><div class="anchor" id="a-shi-de-xin-fa"></div><h2 id="1-阿狮的心法"><a href="#1-阿狮的心法" class="headerlink" title="1 阿狮的心法"></a>1 阿狮的心法</h2><p>得到 App 有个《每天听本书》栏目。这个产品听起来概念很简单，就是用 20 到 30 分钟的时间，帮助你解读一本书的精髓。这种产品不就是选书、写稿、品控、制作、上线不就行了吗？没有那么简单。</p><p>这个产品包含了非常多的维度。反应要快、品质要好、短期要能覆盖成本、长期要能积累价值、还要能满足各种合作者的诉求。要想把所有这些都平衡好，其实是一个典型的“棘手问题”。</p><p>《每天听本书》栏目的团队负责人阿狮做了一个演讲，说她是如何管理这样一个有长期目标的产品的。</p><blockquote><p>阿狮作为这样团队的负责人，在各种选择关头做判断的方法，就是假设自己有一个决策团。这个决策团由她假想出来的六个人组成。</p><p>第一个人，是一个现在掏钱订阅的用户。</p><p>给这样的用户提供什么样的价值呢？其中很重要的一点，是新书。市场上刚刚热起来，马上要成为话题的新书，让用户用很短的时间做个了解，这是一种很重要的知识服务。用户能靠这种服务，和社会的热辣议题保持同步。</p><p>所以，一个现在的用户，坐在假想的内心董事会上，他会为那些高价值的新书投上一票。所以，我们的主编，几乎是守在各大出版社的门口。直接拿人家还没下厂的排版文件，回来和作者老师磨稿子。这是什么效果？新书上市之日，就是听书产品上线之日。要做到这个速度。</p><p>但是董事会上只有这么一个人是不行的，也就是只有新书是不行的。这毕竟是一个要长期积累的产品。人类历史上那些经典书呢？比如，柏拉图的《理想国》，几千年了。有一句话说得好，说整个西方哲学其实都是这本书的脚注。即使到了今天，即使是中文市场，这本《理想国》每年还有 2、30 万册的销量，超过绝大多数新书、畅销书。这样的书，也需要解读啊。</p><p>所以在阿狮的“内心董事会”里，还得想象出第二个“董事”，那就是一个 10 年后的用户。他的决策依据就不是这本书新不新，而是这本书够不够经典，有没有长期价值。所以，《每天听本书》这个产品里，就有了“镇馆之宝”这个系列。</p><p>这还不够，“内心董事会”还得有第三个成员。谁能？一个普通人。他没有特别的偏好，也没有什么特别的知识储备。这个人也得请到董事会里来。为啥？为了品质控制。一个没有偏好，也没有专业知识背景的人，听懂了一本书，而且还引起了他的兴趣，这个听书产品的品质才算过关了。</p><p>这个普通人在“内心董事会”里的角色，有点像古罗马的“保民官”，没有决策权，但是有否决权。对啊。再好的书，再好的解读，普通人要是听不懂，或者没收获，他当然要一票否决。</p><p>还有第四个人，阿狮说，我把他想象成一位马上要毕业求职的博士生。这位假想中的博士生，现在面对两个选择，一个是留校当老师，然后升副教授、教授一路这么下去。第二个，就是来到我们团队，成为《每天听本书》的专职作者，做专业的知识服务者。他会怎么选呢？</p><p>换句话说，把这么一位假想的博士生请到了内心董事会里，他的视角就是，这个产品能给它的生产者提供什么价值？能不能让生产者获得有尊严的收入、一定的社会声望、能不能长手艺等等。这又从另外一个侧面约束了产品的发展。</p><p>好，还有第五个人，那就是出版社的老师。这个产品解读了他出版的书，能不能让这本书的销路更好，让出版社的品牌更增光。这是他在董事会里要考虑的事。</p><p>还有第六个人，也是很重要的视角，就是这本书的作者。他最大的关切是，解读他的书，会不会有夸大、缺损、误读和扭曲？</p><p>阿狮说，当这六个人都坐在一个桌上时，她每做一个决定，都要在心里开这么一个董事会，让每个人发表一下意见，甚至是投个票，然后该怎么做，就清楚了。</p></blockquote><p>你不必真的去征求所有人的意见。每个人基于不同的立场，就有不同的利益关切，其实是明摆着的。只要你心里有他，他就可以帮助你决策。</p><p>而且，这么做的妙处在于，<em>一个生活中并不存在的人，也可以被你拉进来，成为你做判断的依据</em>。比如刚才说的那个 10 年后的用户，那个其实我们并不知道他是谁的博士生等等。这就把那些潜在的，甚至是未来才会出现的利益相关方也拉进来了。你要是在真实世界里组建一个董事会，那反而是做不到的。</p><div class="anchor" id="si-kao-de-chuan-tong"></div><h2 id="2-思考的传统"><a href="#2-思考的传统" class="headerlink" title="2 思考的传统"></a>2 思考的传统</h2><p>“内心的董事会”不是什么新发明，人类其实一直有这样思考的传统。</p><p>在西方，基督教的“上帝”就是一位董事会成员。一个基督徒在任何一个决策关头，这个假想出来的董事会成员，其实就坐在那里。不管你最后有没有听他的，他都在那里对你的人生、对每一个决定起作用。</p><p>中国也有这样的董事会。比如司马迁的《史记》里面，就经常说到一个词，叫“不祥”，不吉利。比如，看见项羽把投降的人杀了，刘邦就说，这么干“不祥”啊。看见一个叫陈婴的人暴得大名，陈婴的妈妈也嘟囔说，这个事“不祥”。他们不是说这个事不对，或者说不好，既不是从是非着眼，也不是从利弊着眼，他们说“不祥”。这是啥？这就是把一个假想中的老天爷请到了董事会上！</p><p>还有一种“内心董事会”的开法，你不用请别人，你就请自己，请不同情境下的自己。</p><p>比如说做一个决策的时候，反复问自己下面这些问题：如果我现在一无所有，从头开始，我会怎么选择？如果我明天就要死了，我会怎么选择？如果我当着我的孩子，我会怎么选择？如果我冷静三天之后，根据我对我自己的了解，我会怎么选择？如果10年后的我现在就在我身边，他会建议我怎么选择？如果那个我最佩服的人现在就在我身边，他会建议我怎么选择？等等。</p><div class="anchor" id="chu-li-ji-shou-wen-ti"></div><h2 id="3-处理“棘手问题”"><a href="#3-处理“棘手问题”" class="headerlink" title="3 处理“棘手问题”"></a>3 处理“棘手问题”</h2><p>棘手问题的特点，就是它的内部包含了无穷多的复杂性，短期的长期的，各种利益诉求的，缠在一起，像乱麻一样。如果只考虑自己的偏好和诉求，那可能就永远解不开了。</p><p>开一个“内心董事会”的好处就是，你获得一个机缘，一个思考的角度，跳出来看所有人的想法，在不实际惊动任何人的情况下，没准你就能找到一条通向解决方案的黄金小道。</p><h2 id="学习心得"><a href="#学习心得" class="headerlink" title="学习心得"></a>学习心得</h2><h3 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h3><blockquote><ol><li><p>处理棘手问题的一个有用的心法是组建假想的“内心董事会”，是一个很好的<a href="/tools/knowledge-handbook/#duo-yuan-si-wei-mo-xing">多元思维模型</a>的例子。</p></li><li><p>从多个角度，站在不同角色（利益相关方）的立场，向各个方面展开和剖析。</p></li><li><p>还可以请不同情境下的自己，或你说佩服的人，参与组建“董事会”。</p></li><li><p>棘手问题的特点，就是它的内部包含了无穷多的复杂性，短期的长期的，各种利益诉求的，缠在一起，像乱麻一样。如果只考虑自己的偏好和诉求，那可能就永远解不开了。</p></li></ol></blockquote><p>课程发布日期：2019.5.28</p>]]></content>
      
      
      <categories>
          
          <category> 舞空术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 课程笔记 </tag>
            
            <tag> 罗辑思维7 </tag>
            
            <tag> 棘手问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学而不思则矛盾，思而不学则极端</title>
      <link href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-3/20190607_xue-er-bu-si-ze-mao-dun-si-er-bu-xue-ze-ji-duan/"/>
      <url>/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-3/20190607_xue-er-bu-si-ze-mao-dun-si-er-bu-xue-ze-ji-duan/</url>
      
        <content type="html"><![CDATA[<h5 id="《万维钢·精英日课3：学而不思则矛盾，思而不学则极端》课程"><a href="#《万维钢·精英日课3：学而不思则矛盾，思而不学则极端》课程" class="headerlink" title="《万维钢·精英日课3：学而不思则矛盾，思而不学则极端》课程"></a>《万维钢·精英日课3：学而不思则矛盾，思而不学则极端》课程</h5><div class="anchor" id="nei-bu-shi-jiao-yu-wai-bu-shi-jiao"></div><h2 id="1-内部视角与外部视角"><a href="#1-内部视角与外部视角" class="headerlink" title="1 内部视角与外部视角"></a>1 内部视角与外部视角</h2><p>悉尼大学的商业战略学教授丹·洛瓦罗（Dan Lovallo）和《思考·快与慢》的作者丹尼尔·卡尼曼（Daniel Kahneman）共同提出了一对感念 —— “内部视角（inside view）”和“外部视角（outside view）”。</p><h3 id="1-1-洛瓦罗的实验"><a href="#1-1-洛瓦罗的实验" class="headerlink" title="1.1 洛瓦罗的实验"></a>1.1 洛瓦罗的实验</h3><p>2012年，洛瓦罗组织了这么一个实验。</p><blockquote><p>研究者邀请了一些来自大投资公司的投资家，让他们评估一些各自自己手头正在做的项目。比如你投资了一个高科技创业公司，那么研究者希望你详细说一说，你认为这个公司将来会如何发展，一步一步都列好，特别是最后要估算一下，你这笔投资的回报率，将会有多少。</p><p>投资者们也觉得这挺有意思，都很配合。然后研究者又给他们一个任务，说你看看现在有没有跟你这个项目类似概念的、但是是别人做的项目，然后评估一些那些项目的回报率大概能有多少。</p><p>然后研究者把所有这些评估放在一起，做了一番比较。结果是这些投资者对自己项目的预期回报率，比类似项目的预期回报率平均高了 50%。</p></blockquote><p>显然投资者都是过度自信的。他们评估自己的投资项目就好像一般人评估自己开车的水平一样，都以为自己在平均水平之上。</p><p>研究人员把这个结果摆在那些参与实验的投资者面前，这些投资者也震惊了，而且越是老资格的投资者越感到震惊。但是他们接受现实，立即修改了对自己项目的预期。</p><h3 id="1-2-卡尼曼的经历"><a href="#1-2-卡尼曼的经历" class="headerlink" title="1.2 卡尼曼的经历"></a>1.2 卡尼曼的经历</h3><p>精英日课讲决策科学的时候说过这个故事 <a href="#references">[1]</a>。</p><blockquote><p>卡尼曼和几个人合作编写一部教材，他们原本预期大约用两年时间完成。但是卡尼曼听说，别的组编写类似的教材，大多需要 7 到 10 年才能完成。他们这些人觉得这根本不可能，因为按照自己的进度完全可以很快完成……结果他们实际用了 8 年才完成。</p></blockquote><p>这件事的教训是，<em>如果你要预测自己干一件事的结果如何，你应该参考那些跟你差不多的人、做类似的事情的结果如何</em>。别人做的平均水平，构成了一个“基础比率（base rate）”，这个基础比率就是你预测最好的参考标准。</p><div class="anchor" id="wai-bu-shi-jiao-geng-hao"></div><h3 id="1-3-外部视角更好"><a href="#1-3-外部视角更好" class="headerlink" title="1.3 外部视角更好"></a>1.3 外部视角更好</h3><p><em>外部视角能看到内部视角看不到的关键信息。</em></p><p>卡尼曼认为 <a href="#references">[2]</a>，用内部视角考虑问题容易不周全。</p><blockquote><p>拿编写教材为例，用内部视角就是用自己在开头的工作进度去预测后面的工作进度。如果你计划总共写10章，而你四个月就已经完成了前面两章，那你很自然地就会认为自己两个月就能写一章，就算考虑到后面可能会遇到意外耽误时间，估计两年时间也够了。</p><p>事实上卡尼曼的教材编写组后来遇到了各种困难，有人离婚了，有人病了，各种管理问题，再想如同一开始那样协调全组顺畅工作十分困难。</p></blockquote><p>这个做法其实就是外推 —— 容易引起“<a href="/tools/knowledge-handbook/#wai-tui-miu-wu">外推谬误</a>”。事情往往不是按照固定的速率直线发展的。</p><p>可能前两章比较好写，可能我们开头最有干劲，更可能后面会遇到极其严重的困难。而这些困难的特点是既是意料之外又是情理之中：你没做过你就想不到，而做了的人基本都遇到了。正因为这个特点，问自己会如何就不如问别人都是如何。</p><div class="anchor" id="nei-bu-shi-jiao-rong-yi-ji-duan"></div><h3 id="1-4-内部视角容易极端"><a href="#1-4-内部视角容易极端" class="headerlink" title="1.4 内部视角容易极端"></a>1.4 内部视角容易极端</h3><p>洛瓦罗的实验还发现，那些投资者如果对自己投资的项目细节了解越多，他们自我估计的回报率就越高。</p><p>也就是说，<em>内部视角看到的信息越多，你的判断就会越极端</em>。</p><p>举个例子：</p><blockquote><p>你有个远房表弟，学习成绩不错，说要报考清华大学。你乍听之下觉得这不太靠谱，因为清华是中国录取分数线最高的大学，你表弟平时的成绩虽然在自己学校排名不错，但是距离清华似乎还有一定的差距。</p><p>然后你深入了解了一下表弟的情况。他从小就把上清华当作理想，还曾经专门去过清华，而且他已经想好了要报哪个系。现在距离高考还有一年时间，表弟制定了详细的复习计划，每天都有任务、有监督、有总结。他把自己的强项和弱点都一一列举出来了，他完全知道在这一年里要怎么做，才能考上清华。</p></blockquote><p>那请问，你听了这些之后，是不是也会觉得表弟上清华这件事从不靠谱变成有点靠谱了呢？然后你还专门观察了他几天，发现他的确严格执行了复习计划，可以说每天都在进步！这时候你是不是也相信他能考上了呢？</p><p>这是人之常情。越了解就越相信，难道这有什么问题吗？</p><p><em>问题就在于这只是内部视角</em>。你表弟是很努力，但是想考清华的高中生有哪个是不努力的呢？难道别人就没有复习计划、别人就不是每天都在进步吗？现实是大家都在努力进步，清华每年还是只录取那么一点人。努力和进步并不代表一定成功。</p><p>想要知道你表弟行不行，你需要外部视角。你得知道那些跟他差不多水平、差不多做法的人，结果都是怎样的。</p><h3 id="1-5-极端是因为只有一个想法"><a href="#1-5-极端是因为只有一个想法" class="headerlink" title="1.5 极端是因为只有一个想法"></a>1.5 极端是因为只有一个想法</h3><p>如果一个人不去收集一些客观信息，只根据自己这边的信息坐在那干想，就容易越想越觉得要做的这件事儿能做成。你会一厢情愿地脑补一些东西，你会不自觉地假设事情按照你想要的方向发展。</p><p>你越想，你设想的那个画面就越鲜活。你越想，你对自己的信念就越深。你越想，你的判断就会越极端。</p><p>孤独的人容易产生仇恨社会的极端思想，是因为他头脑里只有一个声音 <a href="#references">[3]</a>。遇到一点挫折，没有人从另一个角度帮他分析，他会越想越觉得这个太严重了，他会钻进去出不来。</p><h2 id="2-视角之外的道理"><a href="#2-视角之外的道理" class="headerlink" title="2 视角之外的道理"></a>2 视角之外的道理</h2><div class="anchor" id="si-er-bu-xue-ze-ji-duan"></div><h3 id="2-1-思而不学则极端"><a href="#2-1-思而不学则极端" class="headerlink" title="2.1 思而不学则极端"></a>2.1 思而不学则极端</h3><p>如果一个人从来不读书，只知道一些道听途说的东西，他对世界上各种事物的看法将会是非常极端的。他会给遥远的事物都打上标签，他会有各种偏见。</p><p>为什么老一辈的人总让我们谦虚一点、对不懂的事情少表态呢？因为你一表态就是极端的，而你自以为的故作谦虚，其实更接近真相……</p><p>如果我们把只用内部视角考虑自己已知的这点信息的行为叫做“思”，把使用外部视角多了解一些外边的事物和别人的看法这个行为叫做“学”，那么这个规律就是 —— “思而不学则极端”。</p><div class="anchor" id="xue-er-bu-si-ze-mao-dun"></div><h3 id="2-2-学而不思则矛盾"><a href="#2-2-学而不思则矛盾" class="headerlink" title="2.2 学而不思则矛盾"></a>2.2 学而不思则矛盾</h3><p>反过来说，只有外部视角也是不行的。如果一个人读书很多说起什么东西来都头头是道，但是没有自己的主见，</p><p>这也不行。现实是不同的人总结的规律和看法往往都是互相矛盾的，你看书可能会觉得怎么今天一个说法明天一个说法，感到无所适从 —— 这就叫“学而不思则矛盾”。</p><div class="anchor" id="xue-jia-si"></div><h3 id="2-3-学-思"><a href="#2-3-学-思" class="headerlink" title="2.3 学 + 思"></a>2.3 学 + 思</h3><p>拿做事来说，学而不思则矛盾，就是说如果一个人只是听说了很多道理，但是自己从来不上手，没有过利益攸关，他就不会有好的判断力；思而不学则极端，就是说如果一个人什么道理都没听过，就自己在那一厢情愿地瞎想，他一定会做出离谱的判断和荒唐的举动。</p><p>再拿中国文化来说，思而不学则极端，就是说一个不了解其他国家文化的人，没有资格说中国文化最伟大；学而不思则矛盾，就是说如果一个人真的平等地对待所有国家的文化，从来没真正在哪个文化中生活过，那种状态也不好，因为他不会热爱任何一个文化。</p><p>现实是世界上的道理看似互相矛盾，那是因为它们的适用条件不一样。<em>你必须得先有自己的条件，才谈得上用哪个道理。</em></p><blockquote><p>小马看到前面有条河，他没有根据自己以往的过河经验就直接决定过不过，而是先问问别人的过河经验。老牛说河水很浅，松鼠说河水很深，小马并不觉得这两个说法是矛盾的，它把自身情况跟他们做了对比，得到一个判断，然后亲身试探才知道河水的深浅。</p></blockquote><p>小马，就是菲茨杰拉德说的那个能在头脑中同时存在两种相反的想法，还有正常行事能力的、有<a href="/tools/knowledge-handbook/#yi-liu-zhi-li">一流智力</a>的人。</p><h2 id="学习心得"><a href="#学习心得" class="headerlink" title="学习心得"></a>学习心得</h2><p>这是一篇非常精彩的文章，但由于原文需要在 <code>得到App</code> 上将课程付费加入学习才能看到，没法放置文章的链接。只能尽可能详尽地把原文的逻辑和“亮点”（例子）搬到笔记里。</p><h3 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h3><blockquote><ol><li><p>仅凭主观臆断是“内部视角”，考虑问题容易不周全，判断可能会很极端。</p></li><li><p>参考类似的人或事是“外部视角”，能看到更多关键信息，判断也会更准确。</p></li><li><p>考虑问题时，只使用外部视角会感到矛盾，只使用内部视角会走极端。更好的做法是两者结合，使用外部视角精确定位、做好规划，使用内部视角因地制宜、尝试更合适的方法。</p></li></ol></blockquote><h3 id="延伸"><a href="#延伸" class="headerlink" title="延伸"></a>延伸</h3><h4 id="注重实践"><a href="#注重实践" class="headerlink" title="注重实践"></a>注重实践</h4><p>如果说“学”是看看和自己差不多水平的人是怎么做的，从多个人身上收集一次客观的信息，那么自然还有另外的方式，就是从一个人身上汲取这件事情的多次经验。那个人就是自己，这样的行为就是“实践”。</p><p>这一课中的例子，包括投资项目、高考、编写教材，有一些共同点，就是周期很长、试错成本很高。在这类事情上，借助外部视角就好像找到了参照物，用近乎零的成本就能得到更一般的普适性结论，仿佛开了挂。但那些平均值毕竟是别人的经验。</p><p>而对于那些周期短、允许多次尝试的事情，多一些内部视角未必是坏事。仅仅靠“学”是不够的，很多事情只有亲身经历才能有所收获。哪怕内部视角让你跌倒了，你也有爬起来再与之一战的机会。我举个例子，程序猿就经常遇到项目估时的事儿。</p><blockquote><p>一个系统项目，一旦技术方案确定、人手确定，项目经理就会来找开发人员要估时了。</p><p>开发人员在评估此次开发的总耗时之前，通常会将一个迭代周期内的工作拆解成若干个小的任务，每个任务的耗时尽可能在 1 天内。这个过程的影响因素会有很多：具体的技术方案、任务之间的路径依赖、团队协作的效率、流程的熟悉度、个人能力和习惯等。</p><p>写代码是个创造性的活，尽管流程做得标准化，人与人之间工作方式的差异普遍还是很大。盲目使用外部视角，很可能陷入“学而不思则矛盾”的困境。</p><p>最好的办法就是自己去尝试。当我们初入职场时，就会被要求给工作量估时。一开始估算的可能和实际值差距很大，觉得两三天就能干完的活，硬是让各种理由拖延了两个礼拜。比如考虑不周方案改了又改啦、依赖的数据提供方不配合啦、与他人的合作老出岔子啦、流程不熟缺胳膊少腿啦。在这样的环境下磨炼之后，随着考虑问题变得周全，估时也会越来越准。</p><p>现在的系统生命周期讲究敏捷开发，迭代速度快、周期短，非常有利于新人试错。此时多一些内部视角，专注于自我的成长，会比横向比较来得高效。</p></blockquote><p>“学”与“思”都是看待问题的方式，更多时候我们需要的是去“实践”。</p><div class="anchor" id="zi-xin-shi-yi-gu-li-liang"></div><h4 id="自信是一股力量"><a href="#自信是一股力量" class="headerlink" title="自信是一股力量"></a>自信是一股力量</h4><p>这一课中提到，内部视角可以给人一份过度的自信。而这样的自信很可能有它独特的价值，尽管现在看上去有副作用，但它能带来了冲劲和更多的可能性。</p><p>现实中的问题大多都不是<a href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-3/20190523_dan-chun-wen-ti-liang-nan-wen-ti-he-ji-shou-wen-ti/">单纯问题</a>，很可能没有明确的方向，得做好与之长期应对的打算。在这消磨意志的情形下，拥有这样的一份自信是非常宝贵的，它会是你 <code>顶着骂名</code>、<code>哼哧哼哧维持局面</code> 的力量来源。</p><p>再者，越是特殊的问题，越找不到参照物。面临重大问题时，如果通过外部视角发现这样的问题少有人解，甚至没有经验供参考，就因此迷茫、气馁，实在非我辈之道。</p><p>相反，罗胖在2019-2020跨年演讲上提到的 <code>躬身入局</code> 就很有由外部视角转向内部视角的味道。</p><div class="anchor" id="jie-he-yi-dian-xin-li-xue"></div><h4 id="结合一点心理学"><a href="#结合一点心理学" class="headerlink" title="结合一点心理学"></a>结合一点心理学</h4><p>武志红在得到 App 上的一课中提出 <a href="#references">[4]</a>，可以把人分为两类。</p><blockquote><p>使用 <code>外部评价系统</code> 的人，对别人的评价特别在乎，甚至会内化别人对自己的评价，认为自己就是这样的。这样的人在做事情时，首先考虑的是别人怎么看、怎么认。他们做事情的动力，常是为了博取别人的认可、金钱等，这可以称为“外部动机”。</p><p>使用 <code>内部评价系统</code> 的人，对别人的评价不大在乎，他们做事的动力，是来自于自己内心，这可以称为“内部动机”。</p></blockquote><p>其中的“外部动机”和“内部动机”，与这一课中的“外部视角”和“内部视角”有很大的相似之处。它们的区别仅仅是，“视角”采集到的信息会在评价系统的作用下部分转化为“动机”。</p><p>外部动机和内部动机的区别：</p><table><thead><tr><th>动机</th><th>使用的评价体系</th><th>对谁的评价在乎</th><th>用哪里思考</th></tr></thead><tbody><tr><td>外部动机</td><td>外部评价体系</td><td>别人</td><td>意识和头脑</td></tr><tr><td>内部动机</td><td>内部评价体系</td><td>自己</td><td>潜意识和身体</td></tr></tbody></table><p>有时候，外部视角看到的信息未必可靠。怎么做才是对的，只有你心里有答案。来看两个外部动机失败、内部动机获胜的例子。</p><blockquote><p>例1：可口可乐曾经有过一项调查，问用户，你们希望可口可乐改变口味吗？调查结果显示，多数人希望改变。然而等口味改了后，可口可乐的销量大减。</p></blockquote><blockquote><p>例2：像乔布斯这样的人会说，消费者并不真正知道自己要什么，你可以创造出一些真正的好东西，然后消费者就需要它了。</p></blockquote><p>心理学更提倡的是莫忘初心 —— 多询问自己的感受，多一点内部视角。</p><p>在我看来，这需要区分问题的性质。如果行业内有明确的标准、大量的经验，那么外部视角的信息会很有参考价值；如果是偏创造性的问题，行业内也是遍地开花，那就多一些内部视角，只有你知道什么样的才最好。</p><h4 id="成长的领悟"><a href="#成长的领悟" class="headerlink" title="成长的领悟"></a>成长的领悟</h4><p>成长的过程，也可以说是从 <code>极端</code> 到 <code>矛盾</code>，再到 <code>头脑中同时存在两种相反的想法，还能维持正常行事能力</code> 的过程。</p><div class="anchor" id="references"></div><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p>[1] 《万维钢·精英日课1：用别人预测自己》</p><p>[2] Daniel Kahneman, Thinking, fast and slow, 2011.</p><p>[3] 《万维钢·精英日课2：独处的功夫》</p><p>[4] 《武志红的心理学课：内部动机和外部动机》</p><p>课程发布日期：2019.6.7</p>]]></content>
      
      
      <categories>
          
          <category> 舞空术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 课程笔记 </tag>
            
            <tag> 万维钢·精英日课3 </tag>
            
            <tag> 学习 </tag>
            
            <tag> 思考 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单纯问题、两难问题和“棘手”问题</title>
      <link href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-3/20190523_dan-chun-wen-ti-liang-nan-wen-ti-he-ji-shou-wen-ti/"/>
      <url>/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-3/20190523_dan-chun-wen-ti-liang-nan-wen-ti-he-ji-shou-wen-ti/</url>
      
        <content type="html"><![CDATA[<h5 id="《万维钢·精英日课3：单纯问题、两难问题和“棘手”问题》课程笔记"><a href="#《万维钢·精英日课3：单纯问题、两难问题和“棘手”问题》课程笔记" class="headerlink" title="《万维钢·精英日课3：单纯问题、两难问题和“棘手”问题》课程笔记"></a>《万维钢·精英日课3：单纯问题、两难问题和“棘手”问题》课程笔记</h5><p>万维钢把人生在世面对的各种问题分成三类：单纯问题、两难问题和棘手问题。</p><div class="anchor" id="dan-chun-wen-ti"></div><h2 id="1-单纯问题"><a href="#1-单纯问题" class="headerlink" title="1 单纯问题"></a>1 单纯问题</h2><p>所谓单纯问题，就是有明确的方向，有能让人放心的答案，解决了就可以宣布胜利的问题。</p><p>单纯问题最多见于人生中的未成年阶段。比如你想考清华大学，这就是一个单纯问题。它有明确的方向：你需要提高 —— 而不是降低 —— 自己的考试水平。它有让人方向的答案：考上就可以宣布胜利。</p><p>这个例子也告诉我们，<em>单纯问题并不一定是简单问题</em>，考清华很单纯，但并不简单。</p><p>对付单纯问题只要朝着一个方向努力就行，成败与否是清晰可见的。面对单纯问题你绝对不会感到迷茫，你永远都知道该干什么。往那个方向前进就是对，往别的方向走就是错。</p><blockquote><p>万维钢：我认为，这个世界最大的危险之一，就是某些人认为一切问题都是单纯问题。</p></blockquote><div class="anchor" id="liang-nan-wen-ti"></div><h2 id="2-两难问题"><a href="#2-两难问题" class="headerlink" title="2 两难问题"></a>2 两难问题</h2><p>两难问题没有唯一正确的方向，是两难的选择，我们必须在两个方向之中做出 <strong>取舍</strong>。</p><p>当人们步入成年，会逐渐发现，很多事并不是“向着一个方向猛用力”就行。比如你现在手头有点积蓄，想买个房子，你有两个选择。离公司近的这个房子比较贵，空间小，住着不太舒服但是省时间，而且未来可能会升值；远一点的房子比较大，将来有孩子会很方便，但是上下班很累，那你买哪个呢？</p><p><em>其实生活中真正的问题，至少都是这样的两难问题</em>。有明确方向的事儿根本就不叫事儿。</p><p>这种问题里没有敌人。你谁也怪不着，连自己都怪不着，所以会很迷茫。</p><p>不过你终将做出选择。你权衡各种利弊，选了一个自己认为最合适的。但是你不会有一种取得胜利的感觉 —— 你没有战胜任何东西，你是不得已才如此。</p><p>过段时间你可能会回想，如果我当初选的是另一个，现在会怎样呢？不过那都是一闪念而已，选了就选了，成年人得为自己的决定负责。问题，还是解决了，以后要往前看，这一篇已经翻过去了。</p><blockquote><p>两难问题还不是最难的。最难的，是你要给别人做主的时候。</p></blockquote><div class="anchor" id="ji-shou-wen-ti"></div><h2 id="3-棘手问题"><a href="#3-棘手问题" class="headerlink" title="3 棘手问题"></a>3 棘手问题</h2><p>1973年，加州大学伯克利分校的两个公共政策专家，霍斯特·里特尔（Horst W.J. Rittel）和梅尔文·韦伯（Melvin M. Webber），提出一个新概念，叫“wicked problem” <a href="#references">[1]</a>，被称为“棘手问题”，有时候也被翻译成“抗解问题”。</p><blockquote><p>Wicked 一词的意思是：形容那些邪恶的、怪异的东西。</p></blockquote><p>里特尔和韦伯提出，如果一个问题具备下面这十个特征中的几个，就是棘手问题 ——</p><blockquote><ol><li>这个问题没有清晰的定义。它不像高考数学题那样给你写好了条件让你证明。</li><li>它没有终极的答案。你永远都别想彻底解决它，它会一直存在。</li><li>你的解决方法不分对和错，只有好和坏，而什么是好什么是坏，只能你自己判断。</li><li>你采取一个什么应对措施，不会立即看到结果。你也许根本不知道你做的有没有用，也许还出现了意想不到的结果。</li><li>没有专门给你做试错练习的地方，你的每一个动作都会有影响，你一上来就是实操。</li><li>连有什么选项，都不清楚。</li><li>没有先例可循。前人的经验不会对你有太多帮助。</li><li>这个问题很可能只是一个更深的问题的症状，但是它背后不只有一个问题，盘根错节，可能根本就没有根本性根源。</li><li>有很多利益相关方对这个问题有自己的看法，他们想要的解决方向各自不一样。</li><li>如果你上手，那将来不论是什么结果，你都得负责。</li></ol></blockquote><p>那些长期存在的公共问题，常常是棘手问题，比如美国的贫富差距增大问题、全球变暖问题。</p><p>两难问题还可以说有解，棘手问题是无解的，你最多只能 <strong>应对</strong> —— 你可能得做好跟它长期相处的准备。</p><p><em>不是我们不够努力，也不是敌人太坏，而是这个问题本身太棘手。</em></p><blockquote><p>赵本山：就这个问题，你先杀谁都不好使。</p></blockquote><p>匹兹堡大学的约翰·卡米勒斯（John C. Camillus）教授，曾经提出过几个应对棘手问题的建议 <a href="#references">[2]</a>。</p><blockquote><ul><li><p><strong>一个建议是让利益相关的各方充分互相理解</strong>。最好大家坐下李开诚布公地把观点和要求谈透 —— 不为达成共识，只为互相理解。这样我们最起码可以消除一些偏见，别都只顾自己，也听听别人想要的，也许就能采取一些最基本的行动。</p></li><li><p><strong>如果你是一个公司的领导人的话，卡米勒斯的一个建议是举棋不定的时候应该反思一下公司的认同感和意义 —— 没错，又是“意义”</strong>。意义能帮助我们做出选择。我们到底是一家什么公司？我们的价值观是什么？我们擅长什么？我们渴望什么？有时候你这么做不是因为会算计 —— 因为算计已经给不了你答案 —— 而是因为有个性。</p></li><li><p><strong>还有一个建议是一定要行动</strong>。可以摸着石头过河，每次的决策都是小行动，慢慢试探，看看效果再决定下一步，但是不能不动。动，才叫应对；不动，你就是鸵鸟。</p></li></ul></blockquote><p><strong>你就这么应对着，跟着它演化。也许过一段时间之后，它就被别的问题取代了。</strong></p><h2 id="4-总结"><a href="#4-总结" class="headerlink" title="4 总结"></a>4 总结</h2><p>有太多的人，包括很多领导者，都是单纯问题的思维模式。如果他对当前局面不满意，他就认为要么就是我们不够拼，要么是敌人太坏了。</p><p>其实真不是。大家都是成年人，难道会有谁明知道这么做一定对而不这么做吗？难道那么简单的道理别人不懂吗？<em>都是不得已的取舍而已</em>。有敌人的问题都是最好的问题，把敌人干掉不就完了吗？大多数情况真不是敌人的事儿。</p><p>单纯的人还总希望能一劳永逸地解决一个问题。这种理想主义者一旦受挫，又会心灰意冷，成了一个愤世嫉俗的人。他以为别人都自私就他真想解决问题，可是他又解决不了。</p><p><strong>殊不知，那些顶着骂名，从来没做过一件快意事，小心翼翼永远不敢用力过猛，明知根本就没有什么胜利的彼岸等着他，还在那吭哧吭哧地维持着局面的人，才是真正值得尊敬的。</strong></p><h2 id="学习心得"><a href="#学习心得" class="headerlink" title="学习心得"></a>学习心得</h2><h3 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h3><blockquote><ol><li><p>生活中的问题可以被分为单纯问题、两难问题和棘手问题。</p></li><li><p>单纯问题有明确的目标和敌人；两难为题没有明确的方向，只有选择；棘手问题甚至都没有解决的可能，只有不得已的取舍。</p></li><li><p>生活中真正的问题至少都是两难问题。应该追求管理这些问题，做好跟它们长期相处的准备。</p></li></ol></blockquote><table><thead><tr><th>问题种类</th><th>问题根源</th><th>应对心态</th><th>应对方式</th><th>应对后</th><th>例子</th></tr></thead><tbody><tr><td>单纯问题</td><td>有明确敌人</td><td>明确</td><td>有唯一解</td><td>宣告胜利</td><td>考清华、建水利工程</td></tr><tr><td>两难问题</td><td>没有敌人</td><td>迷茫</td><td>两难的取舍</td><td>往前看</td><td>买房选址、家庭决策</td></tr><tr><td>棘手问题</td><td>没有问题本身</td><td>喵喵喵？</td><td>管理问题</td><td>压根解决不了</td><td>社会贫富差距增大、全球变暖</td></tr></tbody></table><p>此前，我很可能是这一课中提到的“单纯问题的思维模式”。</p><h3 id="延伸"><a href="#延伸" class="headerlink" title="延伸"></a>延伸</h3><h4 id="学会给问题分类"><a href="#学会给问题分类" class="headerlink" title="学会给问题分类"></a>学会给问题分类</h4><p>这是我第一次意识到，原来可以从这个角度对问题进行分类，然后用适当的方法去应对。</p><p>工作中很少碰见棘手问题，可能是我的工作太基层，而公司的管理层已经把问题拆解了。而学会给问题分类，有助于更深入地理解问题，没准还能悟出点“管理层思维”。</p><p>罗胖对如何处理棘手问题，有独到的<a href="/online-course-notes/luo-ji-si-wei/season-7/20190528_zen-me-chu-li-ji-shou-wen-ti/">见解</a>。</p><div class="anchor" id="references"></div><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p>[1] Horst W.J. Rittel and Melvin M. Webber, Dilemmas in a General Theory of Planning, Policy Sciences Vol. 4, No. 2 (Jun., 1973), pp. 155-169.</p><p>[2] John C. Camillus, Strategy as a Wicked Problem, Harvard Business Review, May 2008.</p><p>课程发布日期：2019.5.23</p>]]></content>
      
      
      <categories>
          
          <category> 舞空术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 课程笔记 </tag>
            
            <tag> 棘手问题 </tag>
            
            <tag> 万维钢·精英日课3 </tag>
            
            <tag> 单纯问题 </tag>
            
            <tag> 两难问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>强力研读</title>
      <link href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-2/20171110_te-bie-fang-song-gei-gao-shou-de-xue-xi-fang-fa-jian-yi/"/>
      <url>/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-2/20171110_te-bie-fang-song-gei-gao-shou-de-xue-xi-fang-fa-jian-yi/</url>
      
        <content type="html"><![CDATA[<h5 id="《万维钢·精英日课2：特别放送丨给高手的学习方法建议》课程笔记"><a href="#《万维钢·精英日课2：特别放送丨给高手的学习方法建议》课程笔记" class="headerlink" title="《万维钢·精英日课2：特别放送丨给高手的学习方法建议》课程笔记"></a>《万维钢·精英日课2：特别放送丨给高手的学习方法建议》课程笔记</h5><p>“强力研读”是一种高强度的读书方法，也是一种 <em>态度</em> 和 <em>心法</em> 。</p><p>称为“强力”，是因为它追求阅读的 <em>深度</em> 和 <em>效率</em> ，力图能在一本书中挖掘到最大限度的收获。</p><p>有一个笑话，讲的是我们如何向别人学习：</p><blockquote><p>我们就如同小偷一样到人家里把除了厨房水槽之外的所有东西都搬走了 —— 然后我们回过头去把厨房水槽也搬走了。</p></blockquote><p>我们就要用这样的精神去读一本书。</p><h2 id="1-强力研读方法"><a href="#1-强力研读方法" class="headerlink" title="1 强力研读方法"></a>1 强力研读方法</h2><p><em>一本书应该被读两遍，而且只读两遍。</em> 好书读一遍不可能掌握精要，反过来说如果读一遍就够了，那这本书也不值得强力研读。我们说的思想类书籍，不是什么学术著作，所以再好也没有必要读第三遍。两遍正好。<em>而且最有效率的方法是读完一遍马上再读一遍。</em></p><p>第一遍是正常通读，只要放送地欣赏坐着的精妙思想和有趣故事即可。<em>不要追求读得快，值得时不时停下来思考一下的书才是好书。</em> 在读第二遍的同时写下读书笔记。这时候就不要每个字都读了，书中作为例子的故事大可跳过，要专注于思想脉络。读一章，记一章的笔记，直至读完。然后这本书就可以束之高阁，甚至直接扔了。</p><h2 id="2-强力研读特点"><a href="#2-强力研读特点" class="headerlink" title="2 强力研读特点"></a>2 强力研读特点</h2><p>和“<a href="/tools/knowledge-handbook/#ke-yi-lian-xi">刻意练习</a>”相同，强力研读有以下三个特点：</p><h3 id="2-1-不好玩"><a href="#2-1-不好玩" class="headerlink" title="2.1 不好玩"></a>2.1 不好玩</h3><p>强力研读不是为了娱乐和休息，而是用非常严肃认真的态度，非得把一本书给融会贯通以至于长在自己的大脑里不可。这种读法相当累。写读书笔记也是一个非常正经的工作。</p><h3 id="2-2-用的时间很少"><a href="#2-2-用的时间很少" class="headerlink" title="2.2 用的时间很少"></a>2.2 用的时间很少</h3><p>如同在专门培训天才的最好的音乐学校里，孩子们每天真正练琴的时间绝对不超过 2 个小时。没人能长时间坚持那样的强度，而没有强度的训练还不如不练。你可能每天花很多时间阅读，但你很难做到用很多时间强力研读。要把精力充沛而又不受打扰的时间段留给最好的书。</p><h3 id="2-3-不追求快"><a href="#2-3-不追求快" class="headerlink" title="2.3 不追求快"></a>2.3 不追求快</h3><p>处在我们“学习区”内的好书，应该慢慢地仔细读。追求把一本书快速读完，就好像追求把一只曲子快速弹完一样，这不是练琴而是完成练琴任务。读书人的一个秘密就是：<em>读得慢，吸收知识和增长内力的效率反而更高</em>。</p><div class="anchor" id="du-shu-bi-ji"></div><h2 id="3-读书笔记"><a href="#3-读书笔记" class="headerlink" title="3 读书笔记"></a>3 读书笔记</h2><p>“强力研读”的一个核心技术，就是做读书笔记。</p><h3 id="3-1-取代原书"><a href="#3-1-取代原书" class="headerlink" title="3.1 取代原书"></a>3.1 取代原书</h3><p>笔记最好要写到可以取代原书的程度。而给课文概括中心思想和段落大意的方法，还有用画“思维导图”的方法来做读书笔记，意义都不大。</p><h3 id="3-2-包括四个方面"><a href="#3-2-包括四个方面" class="headerlink" title="3.2 包括四个方面"></a>3.2 包括四个方面</h3><p>强力研读要求读书笔记必须包括四个方面的内容：清洗表现每一章的逻辑脉络、带走书中所有的亮点、大量自己的看法和心得、发现这本书和以前读过的其它书或文章的联系。</p><p>只有做到这全部四点，我们才能把一本书的效用发挥到最大，同时带来的回报也是巨大的。</p><h4 id="3-2-1-逻辑脉络"><a href="#3-2-1-逻辑脉络" class="headerlink" title="3.2.1 逻辑脉络"></a>3.2.1 逻辑脉络</h4><p>读书笔记首先要清晰表现每一章的逻辑脉络。它第一作用就是抛开故事记住文章。让一本书从后变薄，从具体的山川景色变成抽象的地图。</p><p>只有当你跳出字里行间，以居高临下的姿态俯视全章，它的脉络才能变得清晰。看清楚以后不要抄作者的话，用自己的语言把这个脉络写出来，就好像画地图一样。</p><h4 id="3-2-2-带走亮点"><a href="#3-2-2-带走亮点" class="headerlink" title="3.2.2 带走亮点"></a>3.2.2 带走亮点</h4><p>逻辑脉络之外，如果发现真正好的小故事 —— 我们称之为“亮点” —— 那么就把这个故事也给写下来，甚至具体到细节。<em>读书，在某种程度上就是寻找能够刺激自己思维的那些亮点。</em> 我们在分析逻辑脉络的时候要忽略故事，分析完脉络再把故事带走。</p><h4 id="3-2-3-心得灵感"><a href="#3-2-3-心得灵感" class="headerlink" title="3.2.3 心得灵感"></a>3.2.3 心得灵感</h4><p>高水平读书人看完的书上写满了批注。我们可以写下自己对这件事的理解，对作者的质疑或肯定。更高级的批注则是写下自己因为看到这些文字而产生的灵感。</p><p>也许你突然想到这解决了你一直关注的问题 —— 尽管这个问题看似与此书无关；也许你想到对书中思想的一个新的应用；也许你想到你可以把作者的理论往前推一步。</p><p>这些想法未必都真的有用，但是都非常宝贵，因为如果你不马上记下来，它们很快就会被忘记。多年以后翻阅笔记的时候，你会觉得自己的心得灵感比原书更有价值。</p><div class="anchor" id="fa-xian-lian-xi"></div><h4 id="3-2-4-发现联系"><a href="#3-2-4-发现联系" class="headerlink" title="3.2.4 发现联系"></a>3.2.4 发现联系</h4><p>当我们读过的书多到一定程度，就会发现书与书之间是存在联系的。一个真正善于主动读书的人对这种联系是非常、非常敏感的。</p><blockquote><p>万维钢推荐使用 <code>Evernote</code> 来整理读书笔记，这个工具的一个好处是可以把每一份笔记都生成一个可供别的笔记直接点击和引用的链接。这个功能本博客网站也能实现。</p></blockquote><p>如果读得更多，我们会感受到人类知识的进步。一个问题在这本书里是这个说法，而过了几年之后又人另写一本书，把整个结论给改变了。有时候我们必须从几本书的几个不同结论中判断哪个是最靠谱的。有时候甚至会觉得他们说的其实都不对，只有我们自己才知道正确答案。到了这个层次，我们已经跟书的作者完全平等了。我们甚至可以俯视他们，评判他们之间的高下。这时我们又应该怎么办？写篇文章发表出来！</p><p>好书之所以要读两遍，最重要的目的就是为了这些心得、灵感和联系。<em>第一遍读是为了陷进去，第二遍读是为了跳出来。</em></p><h3 id="3-3-个性化写作"><a href="#3-3-个性化写作" class="headerlink" title="3.3 个性化写作"></a>3.3 个性化写作</h3><p>读书笔记是一种非常个性化的写作，是个人知识的延伸。它不是书评，不为了公开发表，我们可以完全专注于意思，而不必关心文笔。</p><blockquote><p>万维钢：笔记是对一本好书最大的敬意。</p></blockquote><div class="anchor" id="xin-xi-guan-li"></div><h2 id="4-信息管理"><a href="#4-信息管理" class="headerlink" title="4 信息管理"></a>4 信息管理</h2><h3 id="4-1-两个误区"><a href="#4-1-两个误区" class="headerlink" title="4.1 两个误区"></a>4.1 两个误区</h3><p>有关信息管理，大概有两种错误的思想：一种是用大脑的记忆力，这个太落后了 —— 人脑应该是用来思考的，不是用来记忆的；另一种是强调搜索，指望什么信息都临时去网上找 —— 这就太业余了。</p><p>正确的做法，是使用一个外部系统，专门存储个人化的信息。</p><h3 id="4-2-使用工具"><a href="#4-2-使用工具" class="headerlink" title="4.2 使用工具"></a>4.2 使用工具</h3><p>我们使用的信息管理工具，应该至少包含这三个功能：采集、合作和创造。</p><p>以下以 <code>Evernote</code> 举例。</p><h3 id="4-2-1-采集"><a href="#4-2-1-采集" class="headerlink" title="4.2.1 采集"></a>4.2.1 采集</h3><p>看到任何有价值的信息，我们都可以存在 <a href="https://www.yinxiang.com/" target="_blank" rel="noopener">Evernote</a> 里。Evernote 有自己的服务器，所有内容都同时保存在云端，可以跨平台保存和提取。它有自己的浏览器插件可以抓取网页内容，它在手机里跟几乎每一个涉及到阅读信息的 App 都能对话，我们还可以用发邮件、拍照片和录音的方法采集信息。</p><p>采集的精髓在于，有了高级管理工具，我们就应该把任何可能有价值的东西都记录下来。记下来了，我们就不用惦记它了。这其实也是解放大脑。</p><blockquote><p>这些采集后的信息，稍微整理和加工后，可以利用Hexo的 <code>draft</code> 草稿功能保存起来，以便取用。</p></blockquote><h3 id="4-2-2-合作"><a href="#4-2-2-合作" class="headerlink" title="4.2.2 合作"></a>4.2.2 合作</h3><p>Evernote 能直接把文章生成 html 文档，发给任何一个人，他在任何平台用浏览器直接就可以打开，而且所有文本化格式都保留了。</p><p>Evernote 还允许我们公开分享任何一条笔记。</p><p>更重要的是，Evernote 允许几个人共享一个目录。</p><blockquote><p>在信息的展现和公开、分享方面，博客显然会更友好。</p><p>但对于未经加工的原始信息，比如照片、录音等，Evernote 的共享方式更方便；博客上发表的内容偏正式了。</p></blockquote><div class="anchor" id="chuang-zao"></div><h3 id="4-2-3-创造"><a href="#4-2-3-创造" class="headerlink" title="4.2.3 创造"></a>4.2.3 创造</h3><p>Evernote 还有一个高级功能，是能通过可能是词汇匹配之类的算法，自动发现一条笔记的“相关内容”。这已经是在模拟人脑的思维！人脑发挥创造力最重要的一个手段，就是<a href="/tools/knowledge-formula/#chuang-zao">把两个不同的想法连接起来</a>。这个连接越是意想不到，创造出来的东西就可能越有意思。想要让想法连接，我们得先拥有很多很多想法才行，而现在我们可以把想法寄存在一个外部工具里，让计算机绑我们建立连接。</p><blockquote><p>万维钢：一个现代人应该把好工具用在平时的学习、工作和研究中，希望看到更多的人使用这些方法，写出有干货、有严肃研究结果支持的好文章来。那些无病呻吟的鸡汤文字根本配不上这个时代。</p></blockquote><p>Evernote 非常适用于原始信息的采集、共享和创造；而 Hexo 也很适合作为信息加工和发布的途径。</p><div class="anchor" id="si-wei-dao-tu"></div><h2 id="5-思维导图"><a href="#5-思维导图" class="headerlink" title="5 思维导图"></a>5 思维导图</h2><p>如果只是想做读书笔记或者会议摘要，用最朴实、厚道的 bullet points 是最好的办法，树状结构列举提纲，整理要点，完全没有必要画妖艳的思维导图。</p><p>思维导图不是一个被高估了的工具，相反，它是一个被低估了的工具。<a href="/tools/knowledge-handbook/#si-wei-dao-tu">思维导图</a>，根本就不是一个整理和记忆工具。<em>它是一个思考工具。</em></p><h3 id="5-1-给大脑扩充“内存”"><a href="#5-1-给大脑扩充“内存”" class="headerlink" title="5.1 给大脑扩充“内存”"></a>5.1 给大脑扩充“内存”</h3><p>人的短期工作记忆 —— 相当于大脑的“内存” —— 非常有限，每时每刻只能最多想四个东西。思维导图的正确用法，就是给大脑扩充内存。我们只能想四个东西，可是做这件事需要同时考虑八个东西，那么最好的办法就是把这八个东西都写下来，摆在面前帮助思考。</p><p><em>思维导图，本质上就是思维的草稿图。</em></p><h3 id="5-2-辅助决策"><a href="#5-2-辅助决策" class="headerlink" title="5.2 辅助决策"></a>5.2 辅助决策</h3><p>更高级的用法是用思维导图做决策和判断。</p><p>如同开会一样，第一阶段是畅所欲言，谁有什么想法都提出来写下来；第二阶段是评估这些想法，发现不同想法之间的联系，把它们用线连接起来；第三阶段是形成决议：把讨论中淘汰掉的想法都划掉，剩下的分出主次和执行顺序，然后整理一下就可以照着做了。</p><p>这三个阶段，其实就是从发散思维，到最后集体的集中思维的过程。先发扬民主，最后形成集中。这个思维过程，这种决策方式，才叫思维导图 —— 为了引导思维而画张图。</p><h3 id="5-3-实用主义"><a href="#5-3-实用主义" class="headerlink" title="5.3 实用主义"></a>5.3 实用主义</h3><p>一张实用主义的思维导图必定是非常潦草杂乱的，上面画满了各种连线、重点符号、划掉符号 —— 就好像演算纸一样。思维导图是自己用的！</p><blockquote><p>万维钢：花哨的装饰和美观的外形未必实用，真正的武器身上应该有创伤、有错误、有硝烟的味道。</p></blockquote><h2 id="学习心得"><a href="#学习心得" class="headerlink" title="学习心得"></a>学习心得</h2><h3 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h3><blockquote><ol><li><p>“强力研读”是一种高效、深入的读书态度和心法。</p></li><li><p>通过阅读两遍，且只读两遍的方式，力求将整本书融会贯通。</p></li><li><p>适合“学习区”的书籍，在精力充沛且不受打扰的时段进行。</p></li><li><p>强力研读的笔记包含对全书逻辑脉络的“副本”；在逻辑脉络之外，还记录了书中的所有“亮点”；更有价值的是带有个人想法的灵感和联系。</p></li></ol></blockquote><h3 id="延伸"><a href="#延伸" class="headerlink" title="延伸"></a>延伸</h3><h4 id="强力研读的适用范围"><a href="#强力研读的适用范围" class="headerlink" title="强力研读的适用范围"></a>强力研读的适用范围</h4><p>“强力研读”乍一看是一套高级的、完整的读书方法，令人神往。</p><p>可任何理论都有其适用范围。我们首先需要考虑的是，什么样的书适合强力研读？我认为应满足以下条件：</p><ol><li>思想类书籍，非学术著作；</li><li>“学习区”内的好书；</li><li>对未来发展有帮助的书。</li></ol><p>前两点都是课程中提到的。第三点是需要我结合自身情况考虑后，添加的条件。出于工作原因，能拿来读书的时间就这么多，当然不能什么都看，应该做一些适当的挑选和取舍，来保证效率。</p><h4 id="尝试强力研读"><a href="#尝试强力研读" class="headerlink" title="尝试强力研读"></a>尝试强力研读</h4><p>可以尝试以上述条件为鉴别的标准，挑选书籍练习强力研读。</p><p><em>此外，还可以改善书单的配比，多安排一些适合强力研读的书目</em>。</p><p>说到时间，强力研读提倡利用“精力充沛而不受打扰的时间段”，那么在每天工作之余的午休时间读书是最合适的。另外，晚上睡前回忆、整理今天阅读过的内容，让思维得以发散和延伸；如果时间精力允许，睡前也可以补充少量的阅读。当然不能太过勉强，为了进度而损失质量，<em>毕竟读书不是完成 “KPI”</em>。</p><p>我已经尝试使用了 <a href="https://www.yinxiang.com/" target="_blank" rel="noopener">Evernote</a>。它的功能丰富，支持 <code>文字识别</code>、<code>拍照</code>、<code>附件</code>、<code>录音</code> 和 <code>手写</code> 格式的笔记，也支持 <code>Markdown</code> 语法的写作，还囊括了任务管理的 <code>清单</code> 功能，以及用于分享的 <code>空间</code> 功能，非常适合作为原始信息存储、加工和整理的工具。它还提供了 <code>电子书阅读</code> 相关的功能，支持 <code>划线和批注管理</code>。当然它的部分功能是收费的。</p><p>课程发布日期：2017.11.10</p>]]></content>
      
      
      <categories>
          
          <category> 舞空术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 课程笔记 </tag>
            
            <tag> 万维钢·精英日课2 </tag>
            
            <tag> 读书方法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 博客搭建</title>
      <link href="/hexo/build/"/>
      <url>/hexo/build/</url>
      
        <content type="html"><![CDATA[<p>今天是2020年的除夕。时光犹如白驹过隙，转眼又将开启崭新的一年。</p><p>过去的 25 年是美好而短暂的，美在成就了如今的我，短于日子走得太快，忘了仔细地去记录。这也是偶尔令我感到些许遗憾的。</p><p>人们常说 <em>“种一棵树最好的时间是十年前，其次是现在”</em>，经营一片自己专属的地界亦如是。于是我花了些时间搭建了自己的第一个博客，并写下此文加以记录。</p><div class="anchor" id="bo-ke-xuan-xing"></div><h2 id="1-博客选型"><a href="#1-博客选型" class="headerlink" title="1 博客选型"></a>1 博客选型</h2><p>现如今，市面上博客相关的工具和产品繁多，涵盖了<a href="https://www.yuque.com/" target="_blank" rel="noopener">语雀</a>、<a href="https://www.jianshu.com/" target="_blank" rel="noopener">简书</a>、<a href="https://www.cnblogs.com/" target="_blank" rel="noopener">博客园</a>、<a href="https://juejin.im/" target="_blank" rel="noopener">掘金</a>、<a href="https://www.zhihu.com/" target="_blank" rel="noopener">知乎</a>等在线承载文字平台，也包括了 <a href="https://www.gitbook.com/" target="_blank" rel="noopener">Gitbook</a>、<a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>、<a href="http://jekyllcn.com/" target="_blank" rel="noopener">Jekyll</a>、<a href="https://vuepress.vuejs.org/" target="_blank" rel="noopener">Vuepress</a> 等静态独立博客工具，更有 <a href="http://www.ghostchina.com/" target="_blank" rel="noopener">Ghost</a> 这样支持后台的博客系统。</p><table>  <thead>  <tr>    <th style="min-width: 20px;"></th>    <th style="min-width: 120px;">名称</th>    <th>特点</th>    <th style="min-width: 102px;">可独立部署</th>    <th style="min-width: 88px;">集成后台</th>    <th style="min-width: 102px;">技术支持</th>    <th style="min-width: 88px;">SEO效果</th>  </tr>  </thead>  <tbody>  <tr>    <td style="min-width: 0; text-align: center;">1</td>    <td>语雀</td>    <td>优雅高效的在线文档编辑与协同工具</td>    <td>否</td>    <td>否</td>    <td>阿里巴巴</td>    <td></td>  </tr>  <tr>    <td style="min-width: 0; text-align: center;">2</td>    <td>简书</td>    <td>优质的创作社区</td>    <td>否</td>    <td>否</td>    <td></td>    <td></td>  </tr>  <tr>    <td style="min-width: 0; text-align: center;">3</td>    <td>博客园</td>    <td>面向开发者的知识分享社区</td>    <td>否</td>    <td>否</td>    <td></td>    <td></td>  </tr>  <tr>    <td style="min-width: 0; text-align: center;">4</td>    <td>掘金</td>    <td>帮助开发者成长的社区</td>    <td>否</td>    <td>否</td>    <td></td>    <td>有副作用</td>  </tr>  <tr>    <td style="min-width: 0; text-align: center;">5</td>    <td>知乎</td>    <td>中文互联网最大的知识平台</td>    <td>否</td>    <td>否</td>    <td></td>    <td></td>  </tr>  <tr>    <td style="min-width: 0; text-align: center;">6</td>    <td>SegmentFault</td>    <td>中国领先的开发者技术社区</td>    <td>否</td>    <td>否</td>    <td></td>    <td>适合导流</td>  </tr>  <tr>    <td style="min-width: 0; text-align: center;">7</td>    <td>Gitbook</td>    <td>适合搭建技术文档、编写电子书</td>    <td>是</td>    <td>否</td>    <td>Github/Git</td>    <td></td>  </tr>  <tr>    <td style="min-width: 0; text-align: center;">8</td>    <td>Hexo</td>    <td>      <ul>        <li>产品成熟</li>        <li>生成速度快</li>        <li>使用简单</li>        <li>插件丰富</li>      </ul>    </td>    <td>是</td>    <td>否</td>    <td>Node.js</td>    <td></td>  </tr>  <tr>    <td style="min-width: 0; text-align: center;">9</td>    <td>Jekyll</td>    <td>是 GitHub Pages 背后的引擎</td>    <td>是</td>    <td>否</td>    <td>Ruby</td>    <td></td>  </tr>  <tr>    <td style="min-width: 0; text-align: center;">10</td>    <td>Vuepress</td>    <td>      <ul>        <li>单页应用</li>        <li>简洁至上</li>      </ul>    </td>    <td>是</td>    <td>否</td>    <td>Vue</td>    <td></td>  </tr>  <tr>    <td style="min-width: 0; text-align: center;">11</td>    <td>Docz</td>    <td>      <ul>        <li>单页应用</li>        <li>零配置</li>        <li>可插拔</li>      </ul>    </td>    <td>是</td>    <td>否</td>    <td>Webpack 4</td>    <td></td>  </tr>  <tr>    <td style="min-width: 0; text-align: center;">12</td>    <td>Ghost</td>    <td>      <ul>        <li>自带功能强大的后台</li>        <li>支持多人协作</li>        <li>插件丰富</li>        <li>部署简单</li>        <li>UI美观</li>      </ul>    </td>    <td>是</td>    <td>是</td>    <td>Node.js</td>    <td>较好</td>  </tr>  <tr>    <td style="min-width: 0; text-align: center;">13</td>    <td>Solo</td>    <td>专为程序员设计的、小而美的开源博客系统</td>    <td>是</td>    <td>是</td>    <td>Java</td>    <td></td>  </tr>  </tbody></table><p>这些工具大多都支持现在流行的 <code>Markdown</code> 标记语言，书写简洁高效。</p><p>简书、博客园这些平台可以直接注册使用，写文章发表的用户交互好，SEO做得也不错，但缺点是容易受到平台的约束，还有广告。而自己租赁服务器、购买域名搭建博客，尽管自由度高，但成本昂贵，开发和维护也很耗费精力和时间。相较这两种，还有一个折中的方案，就是将生成的静态页面托管在 GitHub、Coding 等平台上。</p><p>我本是信息管理专业出身，校园里有幸拜师入门习得一知半解，毕业后去动物园做起程序猿。学信管的，本身便懂些信息存取的法门；编程又是一项很实用的技能。两者结合，既考虑信息的存取成本和展现形式，又追求技术上的前卫和开放自由。搭建博客的目的 <em>不是折腾技术，而是记录所见所想、多输出一些高质量的文章</em>。于是我选择了 Hexo —— 由 <code>Node.js</code> 支持、简单而功能强大的博客框架，以便更专注于写作。</p><hr><h2 id="2-Hexo-简介"><a href="#2-Hexo-简介" class="headerlink" title="2 Hexo 简介"></a>2 Hexo 简介</h2><p>依照<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">官网文档</a>的说明，Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><p>本站就是一个很好的例子。</p><hr><h2 id="3-安装"><a href="#3-安装" class="headerlink" title="3 安装"></a>3 安装</h2><p>Hexo 的安装非常容易，有编程基础的朋友也可以参照 <a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo 官网文档</a>完成此步骤。</p><h3 id="3-1-准备工作"><a href="#3-1-准备工作" class="headerlink" title="3.1 准备工作"></a>3.1 准备工作</h3><p>在安装 Hexo 前，我们需要先安装 <a href="https://git-scm.com/" target="_blank" rel="noopener">Git</a> 和 <a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a>。这两样工具的安装相对简单，只需移步至其官网，下载对应操作系统的安装包，按照引导完成安装即可。此处不做赘述。</p><h3 id="3-2-安装-Hexo"><a href="#3-2-安装-Hexo" class="headerlink" title="3.2 安装 Hexo"></a>3.2 安装 Hexo</h3><p>安装完 <code>Node.js</code> 后，就可以通过 <code>npm</code> 安装 Hexo 了。</p><p>打开命令行，执行如下命令。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> -g hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>值得一提的是，由于 <code>npm</code> 使用的是国外的源，网络不稳定且可能被墙。推荐使用更加稳定快速的<a href="https://npm.taobao.org/" target="_blank" rel="noopener">淘宝镜像</a>。配置淘宝镜像后，文章中的 <code>npm</code> 命令均可使用 <code>cnpm</code> 代替。</p><hr><h2 id="4-创建项目"><a href="#4-创建项目" class="headerlink" title="4 创建项目"></a>4 创建项目</h2><p>安装完成后，便可以依照<a href="https://hexo.io/zh-cn/docs/setup" target="_blank" rel="noopener">文档</a>开始建站了。</p><p>执行下面的命令初始化我们的第一个博客项目。</p><pre class="line-numbers language-bash"><code class="language-bash">hexo init <span class="token operator">&lt;</span>folder<span class="token operator">></span><span class="token function">cd</span> <span class="token operator">&lt;</span>folder<span class="token operator">></span><span class="token function">npm</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>创建完成后，项目的目录结构如下。</p><pre><code>.├── scaffolds├── source # 源文件目录├── themes # 主题目录├── _config.yml # 配置文件└── package.json</code></pre><p>其中，<code>_config.yml</code> 是博客的配置文件，<code>source</code> 目录用于存放文章的源文件，<code>themes</code> 目录用于存放主题，默认有 <code>landscape</code> 主题。</p><hr><h2 id="5-本地运行"><a href="#5-本地运行" class="headerlink" title="5 本地运行"></a>5 本地运行</h2><p>打开命令行，cd至项目所在目录，执行命令。</p><pre class="line-numbers language-bash"><code class="language-bash">hexo generatehexo server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>执行 <code>hexo generate</code> 或 <code>hexo g</code> 命令会生成 <code>public</code> 目录，用于存放Hexo生成的静态页面。</p><pre><code>.├── public # 编译生成的静态文件├── scaffolds├── source├── themes├── _config.yml└── package.json</code></pre><p>继续执行 <code>hexo server</code> 或 <code>hexo s</code> 命令，启动 server 服务。</p><p><img src="http://q4kbn37nl.bkt.clouddn.com/hexo-server.png?e=1579882840&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:PQe9BimqgGe37rRNvPFAzHenSGQ" alt=""></p><p>执行命令后，打开浏览器，输入 <code>localhost:4000</code>，即可访问我们的第一个博客网站。</p><p><img src="http://q4kbn37nl.bkt.clouddn.com/hexo-init-page.png?e=1579883002&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:BHUuNzGjZqACRuo5pctN5FGpKGg" alt=""></p><hr><h2 id="6-基本用法"><a href="#6-基本用法" class="headerlink" title="6 基本用法"></a>6 基本用法</h2><h3 id="6-1-写作"><a href="#6-1-写作" class="headerlink" title="6.1 写作"></a>6.1 写作</h3><p>执行如下命令创建一篇新文章或者新的页面。</p><pre class="line-numbers language-bash"><code class="language-bash">hexo new <span class="token punctuation">[</span>layout<span class="token punctuation">]</span> <span class="token operator">&lt;</span>title<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以在命令中指定文章的布局（layout）：<code>post</code>、<code>page</code> 和 <code>draft</code>，默认为 <code>post</code>。</p><p>在创建这三种不同类型的文件时，它们将会被保存到不同的目录；而自定义的其他布局和 <code>post</code> 相同，都将储存到 <code>source/_posts</code> 目录下。</p><table><thead><tr><th>布局</th><th>存放目录</th></tr></thead><tbody><tr><td><code>post</code></td><td><code>source/_posts</code></td></tr><tr><td><code>page</code></td><td><code>source</code></td></tr><tr><td><code>draft</code></td><td><code>source/_drafts</code></td></tr></tbody></table><p>执行命令后，可以在 <code>source</code> 目录下看到新建的 <code>.md</code> 文件。</p><pre><code>.├── public├── scaffolds├── source # page类型文件|   ├── _drafts # draft类型文件|   └── _posts # post类型文件├── themes├── _config.yml└── package.json</code></pre><p>编辑 <code>source</code> 目录下的文件，开始我们的写作。</p><h3 id="6-2-管理资源"><a href="#6-2-管理资源" class="headerlink" title="6.2 管理资源"></a>6.2 管理资源</h3><p><em>资源管理的关键在于理解 Hexo 的代码生成规则。</em></p><p>根据 Hexo <a href="https://hexo.io/zh-cn/docs/asset-folders" target="_blank" rel="noopener">官方文档</a>中的描述，在文章中管理资源文件可以有多种方式。</p><ol><li><p>一种方式是直接将资源文件放在 <code>source</code> 目录下，在文章中通过根目录 <code>/</code> 去访问。这种方式比较适合放置一些公共资源，比如第三方库，原因是它们可能被多篇文章同时引用。</p></li><li><p>另一种方式则需要先在 <code>_config.yml</code> 配置文件中设置 <code>post_asset_folder: true</code>。这行配置的作用是，此后使用 <code>hexo new [layout] &lt;title&gt;</code> 命令时，会在文章所在目录下创建一个与之同名的文件夹，用来存放资源文件，然后在文章中通过当前目录 <code>./</code> 去访问。<br>这种方法有一个弊端，每次创建文章都会创建同名的文件夹，但大多数情况下我的文章很可能不需要引用任何的资源文件。这会使目录看起来非常臃肿，而这些文件夹都是空荡荡的。但这时我往 <code>_config.yml</code> 配置文件中设置 <code>post_asset_folder: false</code> 去关闭这个特性，在文章中就无法访问到同名文件夹下的资源文件了。<br>另外，我怀疑这是一个 bug —— 上述方法生成的同名文件夹下，如果包含 <code>.js</code> 文件，会像 <code>.md</code> 文件一样，被解析成新的一篇文章。这也是我不提倡这种方法的一个重要理由。</p></li><li><p>还有一种方式是使用主题下的资源目录，也就是 <code>themes/matery/source</code>，来存放资源文件。但这显然是一种不好的做法，原因是这些资源文件不应该和主题耦合。<br>这个特性还让人联想到一个问题 —— 如果 <code>source</code> 目录下的资源和 <code>themes/matery/source</code> 中的重名了，会怎么样？实际上，如果是目录重名，例如 <code>source/libs</code> 和 <code>themes/matery/source/libs</code>，Hexo 会将两个 <code>libs</code> 目录下的内容进行合并。如果是文件重名，例如 <code>source/libs/echarts</code> 和 <code>themes/matery/source/libs/echarts</code> 下各自都有一个 <code>echarts.min.js</code> 文件，<code>source</code> 目录下的文件会覆盖 <code>themes/matery/source</code> 目录下的同名文件。</p></li></ol><p>关于 Hexo 的更多用法，可以参照<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">官方文档</a>自行尝试。</p><hr><div class="anchor" id="geng-huan-zhu-ti"></div><h2 id="7-更换主题"><a href="#7-更换主题" class="headerlink" title="7 更换主题"></a>7 更换主题</h2><p>Hexo 有丰富的<a href="https://hexo.io/themes/" target="_blank" rel="noopener">主题</a>，默认的是 <code>landscape</code>，可以根据自己的喜好挑选和更换。</p><p>我选择的主题是 <a href="https://github.com/blinkfox/hexo-theme-matery" target="_blank" rel="noopener">Matery</a>。在其 GitHub 链接上下载该主题，解压后命名为 <code>matery</code>，存放至 <code>themes</code> 目录下。</p><p>然后编辑 <code>_config/yml</code> 文件中的配置信息，将 <code>theme</code> 修改为themes目录下的主题目录名。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># Extensions</span><span class="token comment" spellcheck="true">## Plugins: https://hexo.io/plugins/</span><span class="token comment" spellcheck="true">## Themes: https://hexo.io/themes/</span><span class="token key atrule">theme</span><span class="token punctuation">:</span> matery<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>这样便完成了更换主题的操作。</p><p>Matery主题提供了相对美观的菜单、封面、主页、视频和音乐等组件。我们可以在主题配置文件 <code>themes/matery/_config.yml</code> 里更改相关的配置，来更改这些组件的配置和个人信息的配置。</p><p>此外，我们还需对 <code>标签</code>、<code>分类</code>、<code>关于</code>、<code>留言板</code> 和 <code>友情链接</code> 菜单，创建相应的界面文件。</p><p>执行 <code>hexo new page categories</code> 命令创建分类页，会在 <code>source</code> 目录下生成 <code>categories/index.md</code> 文件，并使其包含如下内容。</p><pre><code>---title: categoriesdate: 2020-01-23 15:40:00type: categorieslayout: categories---</code></pre><p>同样地，创建标签页 <code>tags/index.md</code>，使其包含如下内容。</p><pre><code>---title: tagsdate: 2020-01-23 15:40:26type: tagslayout: tags---</code></pre><p>以此类推，继续创建 <code>about</code>、<code>contact</code> 和 <code>friends</code> 页面。这样一来，博客的菜单都可以点击了。</p><p>文档还告诉我们，如果要设置 <code>友情链接</code> 页面中的数据，需要创建 <code>source/_data/friends.json</code> 文件，并向其中添加数据。</p><p>至此，项目的目录结构会像下面这样。</p><pre><code>.├── public├── scaffolds├── source|   ├── _data|   |   └── friends.json # 友情链接数据|   ├── _drafts|   ├── _posts|   ├── about # 关于|   |   └── index.md|   ├── categories # 分类|   |   └── index.md|   ├── contact # 留言板|   |   └── index.md|   ├── friends # 友情链接|   |   └── index.md|   └── tags # 标签|       └── index.md├── themes|   ├── landscape # 默认主题|   └── matery # 我选择的 Matery 主题├── _config.yml└── package.json</code></pre><p>该主题的更多用法，还可以参照 <a href="https://github.com/blinkfox/hexo-theme-matery" target="_blank" rel="noopener">Matery</a> 文档继续体验。</p><hr><div class="anchor" id="bu-shu-zhi-github"></div><h2 id="8-部署至-GitHub"><a href="#8-部署至-GitHub" class="headerlink" title="8 部署至 GitHub"></a>8 部署至 GitHub</h2><p>经过前面的努力，我们的博客已经可以在本地运行了。</p><p>但如果想让其他人人访问我们的博客，我们还需要找一台服务器，将博客部署上去。<a href="https://pages.github.com/" target="_blank" rel="noopener">GitHub Pages</a> 就可以免费充当这样的服务器。</p><p>接下来，我们将博客部署至 GitHub，让朋友们都能访问。</p><h3 id="8-1-创建-GitHub-个人仓库"><a href="#8-1-创建-GitHub-个人仓库" class="headerlink" title="8.1 创建 GitHub 个人仓库"></a>8.1 创建 GitHub 个人仓库</h3><p>登录 <a href="https://github.com/" target="_blank" rel="noopener">GitHub</a>，点击 <code>New repository</code> 创建一个名为 <code>&lt;username&gt;.github.io</code> 的仓库。其中 <code>username</code> 是用户名，比如我的GitHub用户名是 <code>rainstopper</code>，我创建的仓库名称就是 <code>rainstopper.github.io</code>。</p><h3 id="8-2-添加-GitHub-SSH-配置"><a href="#8-2-添加-GitHub-SSH-配置" class="headerlink" title="8.2 添加 GitHub SSH 配置"></a>8.2 添加 GitHub SSH 配置</h3><p>为 GitHub 添加 SSH 配置，可以在后续 Git 代码进行 <code>push</code> 操作时，跳过用户名和密码的输入，更加便利。不介意每次提交都输密码，或者有安全及其他方面考虑的，也可以跳过此步骤。</p><p>打开 <code>Git Bash</code>，执行如下命令设置 Git 的用户名和邮箱信息。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> config --global user.name <span class="token operator">&lt;</span>username<span class="token operator">></span><span class="token function">git</span> config --global user.email <span class="token operator">&lt;</span>email<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>可以使用以下命令检查配置是否生效。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> config user.name<span class="token function">git</span> config user.email<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>执行以下命令创建 SSH 秘钥文件。</p><pre class="line-numbers language-bash"><code class="language-bash">ssh-keygen -t rsa -C <span class="token operator">&lt;</span>email<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个过程中会提示输入文件名，也可以不设置，一路回车。</p><p><img src="http://q4kbn37nl.bkt.clouddn.com/generate-ssh-key.png?e=1579891710&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:JZD8R9_SaZxT5rxAEDAlwVE2iMk" alt=""></p><p>最后会提示在用户目录下生成了 <code>.ssh</code> 文件夹，里面包含了 <code>id_rsa</code> 私钥文件和 <code>id_rsa.pub</code> 公钥文件。</p><p>在 GitHub 的 <code>Settings</code> 中找到 <code>SSH and GPG keys</code> 的配置页面，点击 <code>New SSH key</code> 按钮，在 <code>title</code> 中输入自定义的名称，将 <code>id_rsa.pub</code> 文件中的内容拷贝至 <code>Key</code>，完成SSH秘钥的创建。</p><p><img src="http://q4kbn37nl.bkt.clouddn.com/github-ssh.png?e=1579891366&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:duNvV4Ij1lXBPpJHiVfB2OR42Y8" alt=""></p><p>使用以下命令验证 SSH 的配置是否生效。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">ssh</span> -T git@github.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>出现以下提示信息时，即为配置成功。</p><p><img src="http://q4kbn37nl.bkt.clouddn.com/test-github-ssh.png?e=1579891976&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:v38GguGs12J7jfuwfowPInGShZc" alt=""></p><h3 id="8-3-将-Hexo-生成的静态页面托管至-GitHub"><a href="#8-3-将-Hexo-生成的静态页面托管至-GitHub" class="headerlink" title="8.3 将 Hexo 生成的静态页面托管至 GitHub"></a>8.3 将 Hexo 生成的静态页面托管至 GitHub</h3><p>有了 GitHub 仓库，我们就能将 Hexo 生成的静态页面托管至 GitHub。</p><p>如下修改项目的配置文件 <code>_config.yml</code>。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># Deployment</span><span class="token comment" spellcheck="true">## Docs: https://hexo.io/docs/deployment.html</span><span class="token key atrule">deploy</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> git  <span class="token key atrule">repo</span><span class="token punctuation">:</span> git@github.com<span class="token punctuation">:</span>&lt;username<span class="token punctuation">></span>/&lt;username<span class="token punctuation">></span>.github.io.git <span class="token comment" spellcheck="true"># GitHub仓库的ssh链接</span>  <span class="token key atrule">branch</span><span class="token punctuation">:</span> master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接下来执行以下命令安装 Hexo 的 Git 发布插件 <code>hexo-deployer-git</code>。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后执行以下命令，将项目部署至 GitHub。</p><pre class="line-numbers language-bash"><code class="language-bash">hexo cleanhexo generatehexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>其中 <code>hexo clean</code> 或 <code>hexo cl</code> 命令会清理之前生成的文件； <code>hexo deploy</code> 或 <code>hexo d</code> 命令进行部署。</p><p>部署完成后，我们的项目目录中会出现一个 <code>.deploy_git</code> 目录，其中的代码就是 <code>push</code> 至 GitHub 仓库中的静态文件。</p><pre><code>.├── .deploy_git # 部署至GitHub的静态文件├── public├── scaffolds├── source├── themes├── _config.yml└── package.json</code></pre><p>然后我们就能在浏览器打开 <code>&lt;username&gt;.github.io</code> 访问自己的博客了（可能需要稍等一会儿）。赶紧将地址奔走相告，让小伙伴们也体验一下我们自己搭建的博客吧~</p><p>至此，我们已经完成了博客的基本搭建过程。</p><hr><h2 id="9-多终端工作"><a href="#9-多终端工作" class="headerlink" title="9 多终端工作"></a>9 多终端工作</h2><p>经过上面的操作，我们已经完成了 GitHub 的部署，让朋友们都能访问我们的博客了。</p><p>可仔细看 GitHub 仓库中的文化，发现都是编译够生成的代码，而没有我们编写博客时的源文件。假如我们需要重装操作系统或者更换电脑，就可能会丢失这些源文件。</p><p>这时，我们可以利用 GitHub 分支来实现源代码的管理，以便在多个终端下都能进行写作。</p><h3 id="9-1-创建-GitHub-分支"><a href="#9-1-创建-GitHub-分支" class="headerlink" title="9.1 创建 GitHub 分支"></a>9.1 创建 GitHub 分支</h3><p>进入我们之前创建好的 GitHub 仓库，在 <code>Code</code> 菜单下点击 <code>Branch:master</code> 按钮，新建一个名为 <code>hexo-source</code> 的分支，并将其设置为默认分支。</p><p><img src="http://q4kbn37nl.bkt.clouddn.com/github-branch-hexo-source.png?e=1579894028&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:p8fSwlsoS5MJA2UTKOVNUg5tJco" alt=""></p><h3 id="9-2-上传源代码"><a href="#9-2-上传源代码" class="headerlink" title="9.2 上传源代码"></a>9.2 上传源代码</h3><p>执行以下命令将仓库 <code>clone</code> 到本地（会自动命名为 <code>&lt;username&gt;.github.io</code>），其中的链接就是 GitHub 仓库的 https 链接。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/<span class="token operator">&lt;</span>username<span class="token operator">></span>/<span class="token operator">&lt;</span>username<span class="token operator">></span>.github.io.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>紧接着将博客项目的完整代码拷贝至其中，执行以下命令。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">cd</span> <span class="token operator">&lt;</span>username<span class="token operator">></span>.github.io<span class="token function">git</span> add <span class="token keyword">.</span><span class="token function">git</span> commit -m <span class="token string">"上传博客项目源文件"</span><span class="token function">git</span> push<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>执行 <code>push</code> 命令时可能需要输入 GitHub 的用户名和密码。</p><p><code>push</code> 完成后，便可以在仓库的 <code>hexo-source</code> 分支下看到我们项目中的源代码，而 <code>master</code> 分支下依然是由 Hexo 生成的静态文件。</p><p>建议每次完成写作时，都依次执行上述命令，将自己的源文件 <code>push</code> 至 GitHub 仓库中，以防丢失。</p><h3 id="9-3-更换终端"><a href="#9-3-更换终端" class="headerlink" title="9.3 更换终端"></a>9.3 更换终端</h3><p>当我们需要更换终端时，依次安装 <code>Git</code> 和 <code>Node.js</code>，执行 <code>npm install -g hexo-cli</code> 命令安装 Hexo，设置 GitHub 的 SSH Key，再将 GitHub 仓库 <code>clone</code> 到本地，即可继续博客的写作。</p><p>至此，我们已经可以投入到博客的写作中去了。</p><hr><h2 id="10-设置个人域名"><a href="#10-设置个人域名" class="headerlink" title="10 设置个人域名"></a>10 设置个人域名</h2><p>我觉得 <code>&lt;username&gt;.github.io</code> 这个地址不够逼格，想要一个自己专属的域名，用它来访问我们的博客。</p><h3 id="10-1-购买域名"><a href="#10-1-购买域名" class="headerlink" title="10.1 购买域名"></a>10.1 购买域名</h3><p>我们可以在<a href="https://wanwang.aliyun.com/" target="_blank" rel="noopener">阿里云</a>上查询和购买域名。</p><p>最常用的域名是 <code>.com</code>，价格比较昂贵；其次是 <code>.com.cn</code>、<code>.cn</code> 和 <code>.net</code>。然而这些常用的域名大多都已经被注册了。</p><p>剩下的还有 <code>.site</code>、<code>.top</code>、<code>.vip</code> 等域名，只要能备案就行。我买的是 <code>sunyt.site</code>（以我中文名的缩写命名）。</p><h3 id="10-2-域名备案"><a href="#10-2-域名备案" class="headerlink" title="10.2 域名备案"></a>10.2 域名备案</h3><p>国家要求，即使是个人非商业用途的网站，也需要将域名进行备案。</p><p>我们在阿里云上购买域名后，应该尽快进行<a href="https://beian.aliyun.com/" target="_blank" rel="noopener">备案</a>。备案前需要购买先服务器，我买的是相对便宜的云虚拟主机。</p><p>当然，未备案的域名也可以继续下面的步骤，但回头记得去<a href="https://beian.aliyun.com/" target="_blank" rel="noopener">备案</a>。</p><p><em>在完成备案前，应当尽可能减少域名的解析。</em></p><h3 id="10-3-域名解析"><a href="#10-3-域名解析" class="headerlink" title="10.3 域名解析"></a>10.3 域名解析</h3><p>购买完成后，需要先进行实名认证，再进入<a href="https://dns.console.aliyun.com/" target="_blank" rel="noopener">阿里云控制台</a>的域名解析设置菜单，做域名解析的配置。</p><p>可以直接使用 <code>新手引导</code> 按钮，它会自动添加主机记录为 <code>@</code> 和 <code>www</code>、解析线路为 <code>默认</code> 的两条配置。</p><p><img src="http://q4kbn37nl.bkt.clouddn.com/aliyun-dns-guide.png?e=1579896004&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:IwzoBZ4z-sE66szbZ6VwSiJaXNo" alt=""></p><p>其中的记录值，我们可以先在命令行中通过 <code>ping &lt;username&gt;.github.io</code> 获取到项目在 GitHub 服务器上所在的 IP 地址，将其填入。</p><h3 id="10-4-修改-GitHub-仓库配置"><a href="#10-4-修改-GitHub-仓库配置" class="headerlink" title="10.4 修改 GitHub 仓库配置"></a>10.4 修改 GitHub 仓库配置</h3><p>在 GitHub 仓库的 <code>Settings</code> 菜单下找到 <code>Custom domain</code>，设置域名并保存。</p><p><img src="http://q4kbn37nl.bkt.clouddn.com/github-settings-custom-domain.png?e=1579896418&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:xBGBLkVCOB_Xqruz4Wvz7iOezqo" alt=""></p><h3 id="10-5-修改项目配置并重新部署"><a href="#10-5-修改项目配置并重新部署" class="headerlink" title="10.5 修改项目配置并重新部署"></a>10.5 修改项目配置并重新部署</h3><p>在项目 <code>source</code> 目录下新建一个名为 <code>CNAME</code> 的文件（注意没有后缀名），在文件内写上自己的域名，比如 <code>sunyt.site</code>。</p><pre><code>.├── .deploy_git├── public├── scaffolds├── source|   ├── _data|   ├── _drafts|   ├── _posts|   ...|   └── CNAME├── themes├── _config.yml└── package.json</code></pre><p>执行以下命令重新部署。</p><pre class="line-numbers language-bash"><code class="language-bash">hexo cleanhexo generatehexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>过不了多久，在浏览器中输入我的域名 <code>sunyt.site</code>，就能访问我在 GitHub 托管的博客了。</p><hr><div class="anchor" id="bu-shu-zhi-coding-shi-xian-guo-nei-wai-fen-liu"></div><h2 id="11-部署至-Coding-实现国内外分流"><a href="#11-部署至-Coding-实现国内外分流" class="headerlink" title="11 部署至 Coding 实现国内外分流"></a>11 部署至 Coding 实现国内外分流</h2><p>我们已经将 Hexo 博客部署在 GitHub 上了，但 GitHub 是国外的，而且百度的蜘蛛不能爬取 GitHub。如果希望我们的博客被百度收录，而且能更快地访问，可以同时在国内的 <a href="https://coding.net/" target="_blank" rel="noopener">Coding</a> 平台做托管。这么一来，在国内访问的是 Coding，国外就走 GitHub。</p><h3 id="11-1-创建-Coding-项目"><a href="#11-1-创建-Coding-项目" class="headerlink" title="11.1 创建 Coding 项目"></a>11.1 创建 Coding 项目</h3><p>申请一个 Coding 账户，然后创建一个项目，项目的名称可以是任意的，我创建的项目名称与此前在 GitHub 上的用户名相同。</p><h3 id="11-2-添加-SSH-配置"><a href="#11-2-添加-SSH-配置" class="headerlink" title="11.2 添加 SSH 配置"></a>11.2 添加 SSH 配置</h3><p>这一步也和 GitHub 一样。添加完成后，验证一下是否生效。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">ssh</span> -T git@e.coding.net<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="11-3-修改项目配置实现多平台部署"><a href="#11-3-修改项目配置实现多平台部署" class="headerlink" title="11.3 修改项目配置实现多平台部署"></a>11.3 修改项目配置实现多平台部署</h3><p>修改项目 <code>_config.yml</code> 文件中的配置。其中 <code>github</code> 和 <code>coding</code> 分别填写 GitHub 仓库和 Coding 项目的 ssh 链接。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># Deployment</span><span class="token comment" spellcheck="true">## Docs: https://hexo.io/docs/deployment.html</span><span class="token key atrule">deploy</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> git  <span class="token key atrule">repo</span><span class="token punctuation">:</span>    <span class="token key atrule">github</span><span class="token punctuation">:</span> git@github.com<span class="token punctuation">:</span>rainstopper/rainstopper.github.io.git<span class="token punctuation">,</span>master    <span class="token key atrule">coding</span><span class="token punctuation">:</span> git@e.coding.net<span class="token punctuation">:</span>rainstopper/rainstopper.git<span class="token punctuation">,</span>master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行以下命令重新部署。</p><pre class="line-numbers language-bash"><code class="language-bash">hexo cleanhexo generatehexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>部署的过程中，我们会看到先往GitHub仓库执行了一次 <code>push</code> 操作，紧接着又往 Coding 项目上也 <code>push</code> 了一次。</p><p>部署完成后，打开 Coding 项目代码，我们会看到与 GitHub 相同的 Hexo 静态文件。</p><p>随即在 Coding 上部署项目，并设置自定义域名为自己的域名 <code>sunyt.site</code>。</p><p><img src="http://q4kbn37nl.bkt.clouddn.com/coding-deploy-setting.png?e=1579899019&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:OyAp31x2qJBjjqs52UNHOhts1H4" alt=""></p><h3 id="11-4-修改域名解析配置"><a href="#11-4-修改域名解析配置" class="headerlink" title="11.4 修改域名解析配置"></a>11.4 修改域名解析配置</h3><p>回到<a href="https://dns.console.aliyun.com/" target="_blank" rel="noopener">阿里云控制台</a>，将原来指向 GitHub 配置的解析路线改为 <code>境外</code>，再分别添加主机记录为 <code>@</code> 和 <code>www</code> 的两条记录，记录类型选择 <code>默认</code>，记录值填写 Coding 项目的静态网站域名。</p><p><img src="http://q4kbn37nl.bkt.clouddn.com/aliyun-dns-setting-github-and-coding.png?e=1579899444&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:MqbSUQGDtVH4Uw6vY1sI9PDC0c0" alt=""></p><p>不一会儿，我们在国内访问域名 <code>sunyt.site</code> 就会访问到托管至 Coding 的页面了。</p><p>我们可以通过在国内 <code>ping sunyt.site</code> 和 <code>ping ssd38z.coding-pages.com</code>，观察解析到的 IP 地址是不是相同的，来验证域名解析的正确性。</p><p>至此，我们的博客已经在 GitHub 和 Coding 双向部署，并通过域名解析，对国内外进行分流。</p><hr><h2 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h2><div class="anchor" id="shi-yong-qi-niu-yun-cun-chu-tu-pian"></div><h3 id="使用七牛云存储图片-2020-1-24"><a href="#使用七牛云存储图片-2020-1-24" class="headerlink" title="使用七牛云存储图片 2020.1.24"></a>使用七牛云存储图片 2020.1.24</h3><p>Hexo 支持使用 <code>hexo-asset-image</code> 插件内联图片，该插件会在创建文章的同时，在同一目录下创建与其同名的目录，用来存放图片文件，使用非常方便，但缺点也显而易见：<code>source</code> 目录会很庞大，且内联图片会影响页面的渲染速度。</p><p>更好的做法是使用第三方平台来存储图片，我使用的是<a href="https://portal.qiniu.com/" target="_blank" rel="noopener">七牛云</a>。</p><p>创建七牛云账号后，需要先进行实名认证，再在控制台打开 <code>对象存储</code> 下的 <code>空间管理</code> 菜单，去新建空间，否则会报 <code>403：没有权限</code>。</p><p>写作时如果遇到图片，只需将其上传至七牛云，再在需要插入图片的位置添加Markdown标记 <code>![](&lt;url&gt;)</code> 即可。</p><hr><h3 id="代码块样式优化-2020-1-24"><a href="#代码块样式优化-2020-1-24" class="headerlink" title="代码块样式优化 2020.1.24"></a>代码块样式优化 2020.1.24</h3><p>默认的代码块生成会编译出 <code>&lt;table&gt;</code> 元素，使用左右两个 <code>&lt;td&gt;</code> 分别展示行号和代码内容，与 Matery 主题的样式有冲突，非常不美观。</p><p>解决方法是安装 <code>hexo-prism-plugin</code> 插件。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-prism-plugin --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>紧接着，按照该插件的<a href="https://github.com/ele828/hexo-prism-plugin" target="_blank" rel="noopener">文档</a>描述，修改项目配置文件 <code>_config.yml</code>。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">highlight</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 关闭默认的代码高亮配置</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">auto_detect</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">tab_replace</span><span class="token punctuation">:</span> <span class="token string">''</span>  <span class="token key atrule">wrap</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">hljs</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">prism_plugin</span><span class="token punctuation">:</span>  <span class="token key atrule">mode</span><span class="token punctuation">:</span> <span class="token string">'preprocess'</span> <span class="token comment" spellcheck="true"># realtime/preprocess</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> <span class="token string">'tomorrow'</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># default false</span>  custom_css<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后，重新生成代码即可。</p><pre class="line-numbers language-bash"><code class="language-bash">hexo clhexo ghexo s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="文章字数统计-2020-1-27"><a href="#文章字数统计-2020-1-27" class="headerlink" title="文章字数统计 2020.1.27"></a>文章字数统计 2020.1.27</h3><p>为了在文章开头处展示文章字数、阅读时长信息，需要安装 <code>hexo-wordcount</code> 插件。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-wordcount --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后修改主题配置文件 <code>themes/matery/_config.yml</code> 中的信息。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># Post word count, reading duration, site total word count.</span><span class="token comment" spellcheck="true"># Before you activate, please confirm that you have installed the hexo-wordcount plugin,</span><span class="token comment" spellcheck="true"># install the plugin command: `npm i --save hexo-wordcount`.</span><span class="token comment" spellcheck="true"># 文章字数统计、阅读时长、总字数统计等</span><span class="token comment" spellcheck="true"># 文章信息--若要开启文章字数统计，需要安装 hexo-wordcount 插件，安装命令: `npm i --save hexo-wordcount`</span><span class="token key atrule">postInfo</span><span class="token punctuation">:</span>  <span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true"># 发布日期</span>  <span class="token key atrule">update</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 更新日期</span>  <span class="token key atrule">wordCount</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true"># 文章字数统计</span>  <span class="token key atrule">totalCount</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 站点总文章字数</span>  <span class="token key atrule">min2read</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true"># 文章阅读时长</span>  <span class="token key atrule">readCount</span><span class="token punctuation">:</span> <span class="token boolean important">true </span><span class="token comment" spellcheck="true"># 文章阅读次数</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="anchor" id="kai-qi-gitalk-ping-lun"></div><h3 id="开启-Gitalk-评论-2020-1-28"><a href="#开启-Gitalk-评论-2020-1-28" class="headerlink" title="开启 Gitalk 评论 2020.1.28"></a>开启 Gitalk 评论 2020.1.28</h3><p>Matery 主题支持 <a href="https://gitalk.github.io/" target="_blank" rel="noopener">Gitalk</a>、<a href="https://imsun.github.io/gitment/" target="_blank" rel="noopener">Gitment</a>、<a href="https://valine.js.org/" target="_blank" rel="noopener">Valine</a> 和 <a href="https://disqus.com/" target="_blank" rel="noopener">Disqus</a> 评论模块，官方推荐的是 Gitalk。</p><p>开启 Gitalk 评论，首先需要创建一个 GitHub 的 OAuth App。</p><p>登陆 GitHub，在 <code>Settings</code> &gt; <code>Developer settings</code> 下，找到 <code>OAuth Apps</code> 菜单。</p><p><img src="http://q4kbn37nl.bkt.clouddn.com/github-oauth-apps.png?e=1580182303&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:fK9xiyWAbfpRy7JyvjuLncuLqBg" alt=""></p><p>点击 <code>New OAuth App</code> 创建一个 OAuth App。其中 <code>Application Name</code> 自定义，<code>Homepage URL</code> 和 <code>Authorization callback URL</code> 填写博客的地址。</p><p><img src="http://q4kbn37nl.bkt.clouddn.com/github-new-oauth-app.png?e=1580182303&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:SExXN6tiR7fGxUY9CMzLUJWid7s" alt=""></p><p>创建完成后，可以点击刚创建的 OAuth App，查看 <code>Client ID</code> 和 <code>Client Secret</code>。</p><p><img src="http://q4kbn37nl.bkt.clouddn.com/github-oauth-app-client-id.png?e=1580185161&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:cv2mSXRTnZUytxZug4M5bkc5QtQ" alt=""></p><p>然后打开博客仓库的 <code>Settings</code> 菜单，确保 <code>Issues</code> 特性已经被勾选。</p><p><img src="http://q4kbn37nl.bkt.clouddn.com/github-repository-settings-issues.png?e=1580183579&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:lGSlq18Y_LMUNSgwoJfNJiDTxf8" alt=""></p><p>接着修改 <code>theme/matery/_config.yml</code> 主题配置文件，开启 gitalk，并填写 GitHub 仓库和 OAuth App 相关信息。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># the Gitalk config，default disabled</span><span class="token comment" spellcheck="true"># Gitalk 评论模块的配置，默认为不激活</span><span class="token key atrule">gitalk</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">owner</span><span class="token punctuation">:</span> rainstopper <span class="token comment" spellcheck="true"># GitHub用户名</span>  <span class="token key atrule">repo</span><span class="token punctuation">:</span> rainstopper.github.io <span class="token comment" spellcheck="true"># 仓库名</span>  <span class="token key atrule">oauth</span><span class="token punctuation">:</span>    <span class="token key atrule">clientId</span><span class="token punctuation">:</span> 7884f*********<span class="token important">*fd16b</span> <span class="token comment" spellcheck="true"># OAuth App 的 Client ID</span>    <span class="token key atrule">clientSecret</span><span class="token punctuation">:</span> 1530e*****************************<span class="token important">*1ef5b</span> <span class="token comment" spellcheck="true"># OAuth App 的 Client Secret</span>  <span class="token key atrule">admin</span><span class="token punctuation">:</span> rainstopper <span class="token comment" spellcheck="true"># GitHub用户名</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>重新部署后，滚动至文章底部就能看到久违的评论框了。</p><p><img src="http://q4kbn37nl.bkt.clouddn.com/article-comments.png?e=1580185433&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:I1g1rc1WLuGJDNjEQWwvUPZ49P8" alt=""></p><p>编辑评论前需要登录自己的 GitHub 账户。</p><p>此时，打开 GitHub 仓库的 <code>Issues</code> 菜单，会发现 Gitalk 对博客的每篇文章都创建了一个独立的 Issue。这给了我们一个线索。如果小伙伴们对评论的实现方式充满好奇，可以自行研究。</p><div class="anchor" id="tian-jia-long-zhu-su-cai"></div><h3 id="添加《龙珠》素材-2020-1-29"><a href="#添加《龙珠》素材-2020-1-29" class="headerlink" title="添加《龙珠》素材 2020.1.29"></a>添加《龙珠》素材 2020.1.29</h3><p>在内容管理上添加《龙珠》<a href="/tools/map/">素材</a>，用动漫中的概念类比博客的文章和分类，使内容更有趣。</p><p>修改 <code>themes/matery/source/css/matery.css</code> 文件，使主题样式的色调为橙色系，更贴近“龙珠”主题。</p><p>后来还自制了<a href="/design/zi-zhi-svg-tu-biao/">博客LOGO</a>，使用圆、五角星和简单的曲线组合在一起，绘制了一个“龙珠”的 <code>.svg</code> 图标。</p><p><img src="http://q4kbn37nl.bkt.clouddn.com/my-logo.png?e=1580266436&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:3A5J3iBLHvQAcWutZT5f6OwfULk" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 精神时光屋 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 博客 </tag>
            
            <tag> 个人博客 </tag>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《中国优势》读书笔记</title>
      <link href="/reading-notes/the-indispensable-china/"/>
      <url>/reading-notes/the-indispensable-china/</url>
      
        <content type="html"><![CDATA[<p>努力阅读中ing…</p>]]></content>
      
      
      <categories>
          
          <category> 元气弹 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
            <tag> 中国优势 </tag>
            
            <tag> 创新 </tag>
            
            <tag> 科技 </tag>
            
            <tag> 中国制造 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>龙珠</title>
      <link href="/tools/knowledge-handbook/"/>
      <url>/tools/knowledge-handbook/</url>
      
        <content type="html"><![CDATA[<h5 id="持续收录的知识手册"><a href="#持续收录的知识手册" class="headerlink" title="持续收录的知识手册"></a>持续收录的知识手册</h5><h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><div class="anchor" id="ba-la-de-xiao-ying"></div><h3 id="巴拉德效应"><a href="#巴拉德效应" class="headerlink" title="巴拉德效应"></a>巴拉德效应</h3><blockquote><p>一百多年前，伦敦有个叫菲利普·巴拉德（Philip Ballard）的英语老师，拿自己班的学生做了一个实验。他让学生阅读一首诗，并且要求尽量把诗背下来。学完休息五分钟，马上进行默写测试，结果成绩都一般。巴拉德老师没有要求学生继续学习这首诗，学生们以为这件事儿就算过去了。 </p><p>两天后，巴拉德突然要求学生再次默写那首诗。在这期间学生们都没有进行任何复习，所以我们设想，这一次的测试成绩应该更差。 </p><p>结果恰恰相反。成绩反而平均提高了10%。 </p></blockquote><p>根据人们熟知的“<a href="#ji-yi-qv-xian">记忆曲线</a>” —— 或者叫“<a href="#yi-wang-qv-xian">遗忘曲线</a>”更合适 —— 的原理，人对事物的记忆应该随时间不断减弱，而且最初几天遗忘的速度还特别快，怎么可能还加强了呢？ </p><p>我们知道心理学实验经常不靠谱，现在很多研究结果都陷入了“不可重复”危机。这个实验听着就不太靠谱。后来有好几个人拿别的实验证明巴拉德这个所谓“记忆增强”效应根本就不存在，可是偶尔又有人说他重复出来了。这件事反反复复，困扰了心理学家好几十年。 </p><p>一直到1980年代，人们才算理出一点头绪。<em>原来这个关键在于记忆的东西是什么</em>。一般心理学家搞记忆力研究都是让人记若干组没有规律的字母组合，在这种情况下记忆的衰减的确符合遗忘曲线，巴拉德效应不存在。但巴拉德实验用的不是随机字母组合，而是一首诗——诗歌的词句彼此之间有联系，放在一起是有意义的，在这种情况下做实验，巴拉德效应的确存在。</p><p>出自：菲利普·巴拉德（Philip Ballard）<br>相关：万维钢 ——《万维钢·精英日课1：忘记是为了更好的记住》<a href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-1/20160831_wang-ji-shi-wei-le-geng-hao-de-ji-zhu/">课程笔记</a><br>收录时间：2020.2.1</p><hr><h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><h3 id="产品侧创新与产业侧创新"><a href="#产品侧创新与产业侧创新" class="headerlink" title="产品侧创新与产业侧创新"></a>产品侧创新与产业侧创新</h3><table><thead><tr><th>概念</th><th>定义</th><th>描述</th></tr></thead><tbody><tr><td>产品侧创新</td><td>科研和产品化</td><td>从 0 到 1，研发出产品</td></tr><tr><td>产业侧创新</td><td>量产和市场</td><td>从 1 到 100 万，实现产品的量产</td></tr></tbody></table><p>要提高创新的成功率，越往后走，越是产业侧在起作用。</p><p>出自：王煜全 ——《中国优势》P.36<br>收录时间：2020.1.23</p><h3 id="沉没成本"><a href="#沉没成本" class="headerlink" title="沉没成本"></a>沉没成本</h3><blockquote><p>指以往发生的，但与当前决策无关的费用。</p></blockquote><p>相关：王煜全 ——《中国优势》P.13<br>收录时间：2020.1.23</p><div class="anchor" id="cheng-zhang-si-wei-mo-shi"></div><h3 id="成长思维模式（growth-mindset）"><a href="#成长思维模式（growth-mindset）" class="headerlink" title="成长思维模式（growth-mindset）"></a>成长思维模式（growth-mindset）</h3><p>见<a href="#si-wei-mo-shi-li-lun">“思维模式”理论</a>。</p><p>出自：卡罗尔·德韦克（Carol S. Dweck）——《终身成长：重新定义成功的思维模式》<br>相关：万维钢 ——《万维钢·精英日课2：提高学习成绩的最简单心法》<a href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-2/20180329_ti-gao-xue-xi-cheng-ji-de-zui-jian-dan-xin-fa/">课程笔记</a><br>收录时间：2020.1.31</p><h3 id="创新效率"><a href="#创新效率" class="headerlink" title="创新效率"></a>创新效率</h3><blockquote><p>一个可以用来衡量经济体或者企业整体的创新能力的指标。它包括三个维度：创新的质量、创新的成功率和创新的数量。</p></blockquote><p>出自：王煜全 ——《中国优势》P.6<br>收录时间：2020.1.23</p><hr><h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><h3 id="《杜拜法案》"><a href="#《杜拜法案》" class="headerlink" title="《杜拜法案》"></a>《杜拜法案》</h3><blockquote><p>1980年12月12日，美国国会通过了《杜拜法案》，也称《大学和小企业专利程序法案》。它的核心即确立高校对知识产权的所有权。</p><ul><li><p>将专利的所有权和商业开发权分离<br>《杜拜法案》规定，专利的所有权属于高校，高校可以向企业授予专利的独家商业权益。<br>这个设计的巧妙之处在于，专利的所有权和商业开发权是分开的，高校以相对较低的价格将独家商业开发权转让给企业后，知识产权仍然归高校所有，教授可以继续做科学研究。</p></li><li><p>鼓励将科技转化成产品<br>《杜拜法案》还规定，如果企业取得专利后，没有试图把技术商业化，技术转让办公室就有责任取消这个专利权。换句话说，《杜拜法案》虽然保护企业的独家商业权益，但这个保护是有条件的，企业必须尽快研发出产品，把产品推向全社会。</p></li><li><p>把创新的主导者从原来的科学家变成了企业家。</p></li></ul></blockquote><p>相关：王煜全 ——《中国优势》P.26<br>收录时间：2020.1.23</p><div class="anchor" id="duo-kan-xiao-ying"></div><h3 id="多看效应（Mere-Exposure-Effect）"><a href="#多看效应（Mere-Exposure-Effect）" class="headerlink" title="多看效应（Mere Exposure Effect）"></a>多看效应（Mere Exposure Effect）</h3><blockquote><p>心理学上把“对越熟悉的东西越喜欢”的现象称为“多看效应”。</p></blockquote><p>20世纪60年代，心理学家查荣茨做过这样一个实验：他向参加实验的人出示一些人的照片，让他们观看。有些照片出现了二十几次，有的出现十几次，而有的则只出现了一两次。之后，请看照片的人评价他们对照片的喜爱程度。结果发现，参加实验的人看到某张照片的次数越多，就越喜欢这张照片。他们更喜欢那些看过二十几次的熟悉照片，而不是只看过几次的新鲜照片。也就是说，看的次数增加了喜欢的程度。</p><p>在一所大学的女生宿舍楼里，心理学家随机找了几个寝室，发给她们不同口味的饮料，然后要求这几个寝室的女生，可以以品尝饮料为理由，在这些寝室间互相走动，但见面时不得交谈。一段时间后，心理学家评估她们之间的熟悉和喜欢的程度，结果发现：见面的次数越多，相互喜欢的程度越大；而见面的次数越少或根本没有，相互喜欢的程度就较低。</p><p>相关：<a href="/tools/knowledge-formula/#xi-huan">喜欢 = 熟悉 + 意外</a><br>收录时间：2020.1.30</p><div class="anchor" id="duo-yuan-si-wei-mo-xing"></div><h3 id="多元思维模型"><a href="#多元思维模型" class="headerlink" title="多元思维模型"></a>多元思维模型</h3><blockquote><p>通过结合多个学科的知识，不同的维度，来观察事务，分析问题，往往就可以得出比较准确地结论，多元思维是一整套解决问题的工具箱。</p></blockquote><p>出自：查理·芒格（Charlie Thomas Munger）——《穷查理宝典》<br>相关：罗振宇 ——<a href="https://www.ljsw.io/knowl/article/X.html" target="_blank" rel="noopener">《罗辑思维5：第248期丨批判性思维》</a><br>收录时间：2020.1.30</p><hr><h2 id="G"><a href="#G" class="headerlink" title="G"></a>G</h2><h3 id="工业-4-0"><a href="#工业-4-0" class="headerlink" title="工业 4.0"></a>工业 4.0</h3><table><thead><tr><th>阶段</th><th>描述</th></tr></thead><tbody><tr><td>工业 1.0</td><td>蒸汽机时代</td></tr><tr><td>工业 2.0</td><td>电气化时代</td></tr><tr><td>工业 3.0</td><td>信息化时代</td></tr><tr><td>工业 4.0</td><td>智能化时代</td></tr></tbody></table><p>相关：王煜全 ——《中国优势》P.71<br>收录时间：2020.1.23</p><div class="anchor" id="gu-ding-si-wei-mo-shi"></div><h3 id="固定思维模式（fixed-mindset）"><a href="#固定思维模式（fixed-mindset）" class="headerlink" title="固定思维模式（fixed-mindset）"></a>固定思维模式（fixed-mindset）</h3><p>见<a href="#si-wei-mo-shi-li-lun">“思维模式”理论</a>。</p><p>出自：卡罗尔·德韦克（Carol S. Dweck）——《终身成长：重新定义成功的思维模式》<br>相关：万维钢 ——《万维钢·精英日课2：提高学习成绩的最简单心法》<a href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-2/20180329_ti-gao-xue-xi-cheng-ji-de-zui-jian-dan-xin-fa/">课程笔记</a><br>收录时间：2020.1.31</p><hr><h2 id="H"><a href="#H" class="headerlink" title="H"></a>H</h2><h3 id="黄埔军校效应"><a href="#黄埔军校效应" class="headerlink" title="黄埔军校效应"></a>黄埔军校效应</h3><blockquote><p>王煜全把一家企业做大之后带动周边创业的现象，称为“黄埔军校效应”。</p></blockquote><p>出自：王煜全 ——《中国优势》P.95<br>收录时间：2020.1.23</p><div class="anchor" id="hui-du-ren-zhi-hei-bai-jue-ce"></div><h3 id="灰度认知，黑白决策"><a href="#灰度认知，黑白决策" class="headerlink" title="灰度认知，黑白决策"></a>灰度认知，黑白决策</h3><blockquote><p>我们知道世界不是非黑即白的，其中有很多灰色地带，所以我们必须有灰度的认知 —— 可是如果要做事的话，却不能是灰色的。</p></blockquote><p>相关：万维钢 ——《万维钢·精英日课3：逻辑思维5：灰度认知和黑白决策》<a href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-3/20190326_luo-ji-si-wei-5-hui-du-ren-zhi-he-hei-bai-jue-ce/">课程笔记</a><br>收录时间：2020.1.31</p><div class="anchor" id="hui-sheng-shi-xiao-ying"></div><h3 id="回音室效应"><a href="#回音室效应" class="headerlink" title="回音室效应"></a>回音室效应</h3><blockquote><p>在媒体上指在一个相对封闭的环境上，一些意见相近的声音不断重复，并以夸张或其他扭曲形式重复，令处于相对封闭环境中的大多数人认为这些扭曲的故事就是事实的全部。</p></blockquote><p>相关：万维钢 ——《万维钢·精英日课1：怎样优雅地跟人谈政治…以及任何有争议的话题》<a href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-1/20160929_zen-yang-you-ya-de-gen-ren-tan-zheng-zhi-yi-ji-ren-he-you-zheng-yi-de-hua-ti/">读书笔记</a><br>收录时间：2020.2.6</p><hr><h2 id="J"><a href="#J" class="headerlink" title="J"></a>J</h2><div class="anchor" id="ji-yi-qv-xian"></div><h3 id="记忆曲线"><a href="#记忆曲线" class="headerlink" title="记忆曲线"></a>记忆曲线</h3><blockquote><p>由德国心理学家艾宾浩斯(H.Ebbinghaus)研究发现，描述了人类大脑对新事物遗忘的规律。</p></blockquote><p>艾宾浩斯研究发现，遗忘在学习之后立即开始，而且遗忘的进程并不是均匀的。最初遗忘速度很快，以后逐渐缓慢。</p><p>他认为”保持和遗忘是时间的函数”，他用无意义音节（由若干音节字母组成、能够读出、但无内容意义即不是词的音节）作记忆材料，用节省法计算保持和遗忘的数量。并根据他的实验结果绘成描述遗忘进程的曲线，即著名的“艾宾浩斯记忆遗忘曲线”。</p><p><img src="http://q4kbn37nl.bkt.clouddn.com/the-ebbinghaus-forgetting-curve.jpg?e=1580532271&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:RckLgyWG6u_nQmdr2g8rfvlT2lg" alt="“记忆曲线”图解"></p><p>这向我们揭示了，学习要勤于复习，并且理解得越深入，遗忘得也越慢。</p><p>出自：赫尔曼·艾宾浩斯（Hermann Ebbinghaus，德国心理学家）<br>相关：万维钢 ——《万维钢·精英日课1：忘记是为了更好的记住》<a href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-1/20160831_wang-ji-shi-wei-le-geng-hao-de-ji-zhu/">课程笔记</a><br>收录时间：2020.2.1</p><hr><h2 id="K"><a href="#K" class="headerlink" title="K"></a>K</h2><div class="anchor" id="kang-nai-er-bi-ji-fa"></div><h3 id="康奈尔笔记法"><a href="#康奈尔笔记法" class="headerlink" title="康奈尔笔记法"></a>康奈尔笔记法</h3><blockquote><p>由康奈尔大学的沃尔特·鲍克（Walter Pauk）博士发明的一种笔记方法。</p></blockquote><p>把一张纸分为左、右、下三栏，如下图所示 ——</p><p><img src="http://q4kbn37nl.bkt.clouddn.com/cornell-notes.jpg?e=1580073285&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:LxGvKrXdFsocA_mmjd6jpfr1-9o" alt="“康奈尔笔记法”图示"></p><p>读书或者听课的时候，在右边记下我们看出来的“要点”，复习的时候在左边栏相应位置写下“线索”，在下边栏写下“总结”。</p><p>注意一定要使用自己的语言，最好跟自己已经会的东西发生连接。</p><p>这个方法能帮助把信息变成长期记忆。要做到看见线索能想起来要点，看见总结能背出来线索。做到这一步，就算把一本书“从厚读到薄”了。</p><p>出自：沃尔特·鲍克（Walter Pauk，康奈尔大学博士）<br>相关：万维钢 ——《万维钢·精英日课3：“自学”的学问（下）》<br>收录时间：2020.1.27</p><h3 id="科技企业发展的三阶段"><a href="#科技企业发展的三阶段" class="headerlink" title="科技企业发展的三阶段"></a>科技企业发展的三阶段</h3><table>  <thead>  <tr>    <th style="min-width: 120px;">阶段</th>    <th style="min-width: 160px;">核心</th>    <th>特点</th>    <th>例子</th>  </tr>  </thead>  <tbody>  <tr>    <td>科技企业 1.0</td>    <td>量产</td>    <td>      <ol>        <li>实现了量产；</li>        <li>企业和高校没有什么关系，新产品往往只是技术创新的产物；</li>        <li>企业在成立之前就已经拥有相对成熟的产品或技术了</li>      </ol>    </td>    <td>福特的汽车、爱迪生的灯泡</td>  </tr>  <tr>    <td>科技企业 2.0</td>    <td>研发 + 量产</td>    <td>把研发周期放到了企业内部，先成立企业，融资，再去研发做产品</td>    <td>美国硅谷</td>  </tr>  <tr>    <td>科技企业 3.0</td>    <td>科研 + 研发 + 量产</td>    <td>以高校为源头，以硬科技为特征，由科技企业家主导的“端到端”的创新</td>    <td>苹果、华为</td>  </tr>  </tbody></table><p>出自：王煜全 ——《中国优势》P.16<br>收录时间：2020.1.23</p><div class="anchor" id="ke-yi-lian-xi"></div><h3 id="刻意练习"><a href="#刻意练习" class="headerlink" title="刻意练习"></a>刻意练习</h3><blockquote><p>佛罗里达州立大学心理学家安德斯·艾利克森（K. Anders Ericsson）提出的一个概念。它提倡 ——</p><ol><li><p>只在“学习区”学习；</p></li><li><p>把训练内容分为有针对性的小块，对每一个小块进行重复练习，直到把这个套路“长”在大脑之中；</p></li><li><p>练习中要随时获得有效的反馈 —— 考试就是很好的反馈；</p></li><li><p>练习时注意力必须高度集中 —— 所以刻意练习不好玩。</p></li></ol></blockquote><p>出自：安德斯·艾利克森（K. Anders Ericsson，佛罗里达州立大学心理学家）<br>相关：万维钢 ——《万维钢·精英日课2：特别放松丨关于学习的15个真相》<br>收录时间：2020.2.1</p><h3 id="“跨越鸿沟”理论（Crossing-the-Chasm）"><a href="#“跨越鸿沟”理论（Crossing-the-Chasm）" class="headerlink" title="“跨越鸿沟”理论（Crossing the Chasm）"></a>“跨越鸿沟”理论（Crossing the Chasm）</h3><blockquote><p>1991年由美国科技领域营销大师杰弗里·摩尔（Geoffrey Moore）首次提出的市场营销理论。</p></blockquote><p>根据用户对新技术、新产品的接受度，将用户分为五类。</p><ol><li>创新者（innovators）：喜欢新东西，不在乎产品缺陷的用户；</li><li>早期使用者（early adopters）：第一批使用产品的非发烧友用户；</li><li>早期主流用户（early majority）：产品在市场上铺开一段时间后，才开始使用的用户；</li><li>晚期主流用户（late majority）：从众用户，在产品占领大部分市场后依靠别人推荐购买；</li><li>落伍者（laggards）：对高科技产品没有任何兴趣的人。</li></ol><p><img src="http://q4kbn37nl.bkt.clouddn.com/%E2%80%9C%E8%B7%A8%E8%B6%8A%E9%B8%BF%E6%B2%9F%E2%80%9D%E7%90%86%E8%AE%BA.jpg?e=1579791349&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:wNX-eTWwjujZU8hKvmQaNGX43Fs" alt="“跨越鸿沟”理论图解"></p><p>创新者、早期使用者这两类属于早期用户，只占市场总量的 16%。他们不仅懂技术，而且对新产品非常感兴趣，敢为天下先，即使产品不好用，也要先体验。比如，迄今为止，比特币钱包的用户使用体验极差，但很多比特币玩家还是在手机里装着这个应用。</p><p>这之后就存在着一个鸿沟。第三类早期主流用户更注重实用性，新技术被证明足够好用，他们才会采用。第四类是晚期主流用户，他们希望购买到这个行业的标准产品，只有看到周围的人都在使用，他们才会用。第三类和第四类是主流用户，占市场总量的 68%。所以，企业大部分的利润掌握在这两类用户手中。<strong>科技企业要做的就是跨越这一鸿沟，引爆早期主流用户</strong>。只要获得了早期主流用户的认可，让其他人觉得这个新技术产品人人都在用，就容易推进到晚期主流用户中。反之，如果跨不过这个鸿沟，新的技术产品就会昙花一现，即使在前期备受瞩目，获得大量媒体报道，过不了多久，也会推出市场。</p><p>第五类是落伍者，这 16% 的用户排斥科技创新产品，比如那些迄今为止仍在用功能手机的人。企业要争取这部分用户需要付出的成本太高，可以放弃这部分市场。</p><p>出自：杰弗里·摩尔（Geoffrey Alexander Moore）——《跨越鸿沟》<br>相关：王煜全 ——《中国优势》P.77<br>收录时间：2020.1.23</p><hr><h2 id="M"><a href="#M" class="headerlink" title="M"></a>M</h2><h3 id="名校效应"><a href="#名校效应" class="headerlink" title="名校效应"></a>名校效应</h3><blockquote><p>基于人脉网络的效应：学校越好，到好公司工作的毕业生就越多，出来创业的就越多；学校越好，好的技术就越多，以此创业成功的概率就越大。</p></blockquote><p>出自：王煜全 ——《中国优势》P.54<br>收录时间：2020.1.23</p><hr><h2 id="Q"><a href="#Q" class="headerlink" title="Q"></a>Q</h2><div class="anchor" id="qiang-li-yan-du"></div><h3 id="强力研读"><a href="#强力研读" class="headerlink" title="强力研读"></a>强力研读</h3><blockquote><p>一种高强度的读书方法，也是一种态度和心法。</p><p>它追求阅读的深度和效率，力图能在一本书中挖掘到最大限度的收获。</p></blockquote><p>相关：《万维钢·精英日课2：特别放送丨给高手的学习方法建议》<a href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-2/20171110_te-bie-fang-song-gei-gao-shou-de-xue-xi-fang-fa-jian-yi/">课程笔记</a><br>收录时间：2020.2.1</p><hr><h2 id="S"><a href="#S" class="headerlink" title="S"></a>S</h2><h3 id="Synthesize"><a href="#Synthesize" class="headerlink" title="Synthesize"></a>Synthesize</h3><blockquote><p>意思是人们主动去调研所有相关的知识，然后自己做一个综合判断。</p><p>这个词大概翻译成“综合”，是中文世界很不常用的一个词。</p></blockquote><p>相关：万维钢 ——《万维钢·精英日课2：〈原则〉2：激进面对现实》<br>收录时间：2020.1.30</p><h3 id="示范效应"><a href="#示范效应" class="headerlink" title="示范效应"></a>示范效应</h3><blockquote><p>消费者的消费行为要受到周围人的消费水准影响。</p></blockquote><p>相关：王煜全 ——《中国优势》P.39<br>收录时间：2020.1.23</p><h3 id="双长制"><a href="#双长制" class="headerlink" title="双长制"></a>双长制</h3><blockquote><p>科技企业 3.0 的组织架构一般是“双长制”：一位有着丰富市场经验的首席执行官和一位有着深厚技术科研背景的首席科学家，双方合作，共同把一件高科技产品推向市场。</p></blockquote><p>相关：王煜全 ——《中国优势》P.57<br>收录时间：2020.1.23</p><div class="anchor" id="si-wei-dao-tu"></div><h3 id="思维导图"><a href="#思维导图" class="headerlink" title="思维导图"></a>思维导图</h3><blockquote><p>一种用于辅助决策是思考工具。</p></blockquote><p>相关：万维钢 ——《万维钢·精英日课2：特别放送丨给高手的学习方法建议》<a href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-2/20171110_te-bie-fang-song-gei-gao-shou-de-xue-xi-fang-fa-jian-yi/#si-wei-dao-tu">课程笔记</a><br>收录时间：2020.2.3</p><div class="anchor" id="si-wei-mo-shi-li-lun"></div><h3 id="“思维模式”理论"><a href="#“思维模式”理论" class="headerlink" title="“思维模式”理论"></a>“思维模式”理论</h3><blockquote><p>人对智能的思维模式可以分为两种 ——</p><p>一种是所谓“成长思维模式（growth mindset）”，就是你认为学习不在天赋，而在于努力，只要努力用功，什么东西都能学会。</p><p>另一种叫“固定思维模式（fixed mindset）”，就是你特别相信天赋的作用，擅长的东西就是擅长，要是不擅长怎么学都没用。</p></blockquote><p>出自：卡罗尔·德韦克（Carol S. Dweck）——《终身成长：重新定义成功的思维模式》<br>相关：万维钢 ——《万维钢·精英日课2：提高学习成绩的最简单心法》<a href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-2/20180329_ti-gao-xue-xi-cheng-ji-de-zui-jian-dan-xin-fa/">课程笔记</a><br>收录时间：2020.1.31</p><hr><h2 id="W"><a href="#W" class="headerlink" title="W"></a>W</h2><div class="anchor" id="wai-tui-miu-wu"></div><h3 id="外推谬误"><a href="#外推谬误" class="headerlink" title="外推谬误"></a>外推谬误</h3><blockquote><p>一个错误的思维方式：相信一个当前的趋势会一直持续下去 —— 而殊不知趋势是会变化的。</p></blockquote><p>出自：加里·韦斯特法勒（Gary Westfahl）<br>相关：万维钢 ——《万维钢·精英日课3：“外推谬误”》<br>收录时间：2020.1.30</p><div class="anchor" id="wan-mei-feng-bao"></div><h3 id="完美风暴"><a href="#完美风暴" class="headerlink" title="完美风暴"></a>完美风暴</h3><blockquote><p>出自英文“perfect storm”，比喻几个因素恰好一起发生，导致一个剧烈的后果。</p></blockquote><p>相关：万维钢 ——《万维钢·精英日课3：蝴蝶无效应，安全有小事》<a href="/online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-3/20190621_hu-die-wu-xiao-ying-an-quan-you-xiao-shi">课程笔记</a><br>收录时间：2020.1.28</p><h3 id="“微笑曲线”理论（Smiling-Curve）"><a href="#“微笑曲线”理论（Smiling-Curve）" class="headerlink" title="“微笑曲线”理论（Smiling Curve）"></a>“微笑曲线”理论（Smiling Curve）</h3><blockquote><p>重要科技业者宏碁集团创办人施振荣先生在1992年为“再造宏碁”提出的产业理论。</p></blockquote><p><img src="http://q4kbn37nl.bkt.clouddn.com/wei-xiao-qv-xian-li-lun.jpg?e=1580340448&token=0QXSKIUWEaWqa_m3RP0dA04KO2cPXzgzVsWCBGHf:Mhv9UjZf0etSN-e50-MGM5W1_QY" alt="“微笑曲线”理论图解"></p><p>微笑嘴型的一条曲线，两端朝上，在产业链中，附加值更多体现在两端的 <code>设计</code> 和 <code>销售</code>，处于中间环节的 <code>制造</code> 最低。</p><p>微笑曲线中间是制造；左边是研发，属于全球性的竞争；右边是营销，主要是当地性的竞争。当前制造产生的利润低，全球制造也已供过于求，但是研发与营销的附加价值高，因此产业未来应朝微笑曲线的两端发展，也就是在左边加强研展创造智慧财产权，在右边加强客户导向的营销与服务。</p><p>微笑曲线有两个要点，第一个是可以找出附加值在哪里，第二个是关于竞争的型态。</p><p>出自：施振荣（宏碁集团创办人）<br>相关：王煜全 ——《中国优势》P.33<br>收录时间：2020.1.23</p><hr><h2 id="Y"><a href="#Y" class="headerlink" title="Y"></a>Y</h2><div class="anchor" id="yi-liu-zhi-li"></div><h3 id="一流智力"><a href="#一流智力" class="headerlink" title="一流智力"></a>一流智力</h3><blockquote><p>检验一流智力的标准，就是看你能不能在头脑中同时存在两种相反的想法，还维持正常行事的能力。</p></blockquote><p>出自：菲茨·杰拉德（Francis Scott Key Fitzgerald）<br>相关：万维钢 ——《万维钢·精英日课2：独处的工夫》<br>收录时间：2020.1.30</p><div class="anchor" id="yi-wang-qv-xian"></div><h3 id="遗忘曲线"><a href="#遗忘曲线" class="headerlink" title="遗忘曲线"></a>遗忘曲线</h3><p>见<a href="#ji-yi-qv-xian">记忆曲线</a>。</p><p>出自：赫尔曼·艾宾浩斯（Hermann Ebbinghaus，德国心理学家）<br>相关：万维钢 ——《万维钢·精英日课1：忘记是为了更好的记住》<a href="//online-course-notes/wan-wei-gang-jing-ying-ri-ke/season-1/20160831_wang-ji-shi-wei-le-geng-hao-de-ji-zhu/" target="_blank" rel="noopener">课程笔记</a><br>收录时间：2020.2.1</p><hr><h2 id="Z"><a href="#Z" class="headerlink" title="Z"></a>Z</h2><div class="anchor" id="zhi-shi-tu-pu"></div><h3 id="知识图谱"><a href="#知识图谱" class="headerlink" title="知识图谱"></a>知识图谱</h3><blockquote><p>知识图谱（Knowledge Graph）是显示知识发展进程与结构关系的一系列各种不同的图形，用可视化技术描述知识资源及其载体，有利于构建、绘制、显示、分析和挖掘知识及它们之间的相互联系。</p></blockquote><p>具体来说，知识图谱是通过将应用数学、图形学、信息可视化技术、信息科学等学科的理论与方法与计量学引文分析、共现分析等方法结合，并利用可视化的图谱形象地展示学科的核心结构、发展历史、前沿领域以及整体知识架构达到多学科融合目的的现代理论。它把复杂的知识领域通过数据挖掘、信息处理、知识计量和图形绘制而显示出来，揭示知识领域的动态发展规律，为学科研究提供切实的、有价值的参考。</p><p>这个概念由 Google 在2012年提出，最初是为了将传统的基于关键字的（keyword-based）搜索模型向基于语义的搜索升级。</p><p>目前，随着智能信息服务应用的不断发展，知识图谱已广泛应用于智能搜索、智能问答、个性化推荐等领域。</p><p>相关：<a href="/hexo/knowledge-graph/build/">《构建知识图谱》</a><br>收录时间：2020.2.2</p>]]></content>
      
      
      <categories>
          
          <category> 万能胶囊 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 知识 </tag>
            
            <tag> 手册 </tag>
            
            <tag> 概念 </tag>
            
            <tag> 词条 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
